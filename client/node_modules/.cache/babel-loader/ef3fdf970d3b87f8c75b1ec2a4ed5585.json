{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Boxscores.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTable, usePagination } from 'react-table';\nimport TableScrollbar from 'react-table-scrollbar';\nconst columns = [{\n  Header: 'Date',\n  accessor: 'date'\n}, {\n  Header: 'Matchup',\n  accessor: 'matchup'\n}, {\n  Header: 'Result',\n  accessor: 'wl'\n}, {\n  Header: 'FG%',\n  accessor: 'fgPct'\n}, {\n  Header: 'FG3%',\n  accessor: 'fg3Pct'\n}, {\n  Header: 'FT%',\n  accessor: 'ftPct'\n}, {\n  Header: 'MIN',\n  accessor: 'min'\n}, {\n  Header: 'REB',\n  accessor: 'reb'\n}, {\n  Header: 'AST',\n  accessor: 'ast'\n}, {\n  Header: 'BLK',\n  accessor: 'blk'\n}, {\n  Header: 'STL',\n  accessor: 'stl'\n}, {\n  Header: 'TOV',\n  accessor: 'tov'\n}, {\n  Header: 'PF',\n  accessor: 'pf'\n}, {\n  Header: 'PTS',\n  accessor: 'pts'\n}];\n\nfunction Table({\n  columns,\n  data\n}) {\n  _s();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    rows,\n    page,\n    // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0\n    } //showPagination={false},\n    //className=\"-striped -highlight\"\n\n  }, usePagination); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableScrollbar, {\n      rows: 8,\n      children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: rows.map((row, i) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 28\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Table, \"THDwmnIxoA7U1PBGofZNIaUr+Ew=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nfunction Boxscores(data) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boxscore-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title\",\n      children: \" Boxscores \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Boxscores;\nexport default Boxscores;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"Boxscores\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Boxscores.js"],"names":["React","useTable","usePagination","TableScrollbar","columns","Header","accessor","Table","data","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","Boxscores"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTable, usePagination } from 'react-table';\nimport TableScrollbar from 'react-table-scrollbar';\nconst columns = [\n    {\n        Header: 'Date',\n        accessor: 'date'\n    },\n    {\n        Header: 'Matchup',\n        accessor: 'matchup'\n    },\n    {\n        Header: 'Result',\n        accessor: 'wl'\n    },\n    {\n        Header: 'FG%',\n        accessor: 'fgPct'\n    },\n    {\n        Header: 'FG3%',\n        accessor: 'fg3Pct'\n    },\n    {\n        Header: 'FT%',\n        accessor: 'ftPct'\n    },\n    {\n        Header: 'MIN',\n        accessor: 'min'\n    },\n    {\n        Header: 'REB',\n        accessor: 'reb'\n    },\n    {\n        Header: 'AST',\n        accessor: 'ast'\n    },\n    {\n        Header: 'BLK',\n        accessor: 'blk'\n    },\n    {\n        Header: 'STL',\n        accessor: 'stl'\n    },\n    {\n        Header: 'TOV',\n        accessor: 'tov'\n    },\n    {\n        Header: 'PF',\n        accessor: 'pf'\n    },\n    {\n        Header: 'PTS',\n        accessor: 'pts'\n    }\n]\n\nfunction Table({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    rows,\n    page, // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0 },\n      //showPagination={false},\n      //className=\"-striped -highlight\"\n    },\n    usePagination\n  )\n\n  // Render the UI for your table\n  return (\n    <>\n      {/* <div className=\"pagination\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>{' '}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>{' '}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>{' '}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>{' '}\n        <span>\n          Page{' '}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{' '}\n        </span>\n        <span>\n          | Go to page:{' '}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              gotoPage(page)\n            }}\n            style={{ width: '100px' }}\n          />\n        </span>{' '}\n        <select\n          value={pageSize}\n          onChange={e => {\n            setPageSize(Number(e.target.value))\n          }}\n        >\n          {[5, 10, 15, 20, 30].map(pageSize => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div> */}\n      <TableScrollbar rows={8}>\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n              prepareRow(row)\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  })}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </TableScrollbar>\n      {/* \n        Pagination can be built however you'd like. \n        This is just a very basic UI implementation:\n      */}\n    </>\n  )\n}\n\nfunction Boxscores(data) {\n    return (\n        <div className = \"boxscore-container\">\n            <p className=\"title\"> Boxscores </p>\n            <Table columns={columns} data={data.data} /> \n        </div>\n    )\n}\n\nexport default Boxscores\n"]},"metadata":{},"sourceType":"module"}