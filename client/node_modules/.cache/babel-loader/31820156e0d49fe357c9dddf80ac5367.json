{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/EChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as echarts from 'echarts';\nexport default function EChart({\n  option,\n  resize\n}) {\n  _s();\n\n  let chart = useRef(null);\n  let [chartState, setChartState] = useState(chart);\n  useEffect(() => {\n    if (resize) {\n      chartState.resize();\n    }\n\n    if (!chartState.current) {\n      chartState.setOption(option);\n    } else {\n      setChartState(echarts.init(chart.current));\n    }\n  }, [option, chartState, resize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chart,\n    style: {\n      height: '300px',\n      width: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EChart, \"fNr2lX0Jr2im8Gfub6OYagMYL68=\");\n\n_c = EChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"EChart\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/EChart.js"],"names":["React","useEffect","useRef","useState","echarts","EChart","option","resize","chart","chartState","setChartState","current","setOption","init","height","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AAEA,eAAe,SAASC,MAAT,CAAiB;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAjB,EAAmC;AAAA;;AAC9C,MAAIC,KAAK,GAAGN,MAAM,CAAC,IAAD,CAAlB;AACA,MAAI,CAACO,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAACK,KAAD,CAA1C;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,MAAJ,EAAY;AACRE,MAAAA,UAAU,CAACF,MAAX;AACH;;AACD,QAAI,CAACE,UAAU,CAACE,OAAhB,EAAyB;AACrBF,MAAAA,UAAU,CAACG,SAAX,CAAqBN,MAArB;AACH,KAFD,MAGK;AACDI,MAAAA,aAAa,CAACN,OAAO,CAACS,IAAR,CAAaL,KAAK,CAACG,OAAnB,CAAD,CAAb;AACH;AACJ,GAVQ,EAUN,CAACL,MAAD,EAASG,UAAT,EAAqBF,MAArB,CAVM,CAAT;AAWA,sBACI;AAAK,IAAA,GAAG,EAAEC,KAAV;AAAiB,IAAA,KAAK,EAAG;AAACM,MAAAA,MAAM,EAAC,OAAR;AAAiBC,MAAAA,KAAK,EAAC;AAAvB;AAAzB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAlBuBV,M;;KAAAA,M","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\nimport * as echarts from 'echarts'\n\nexport default function EChart ({option, resize}) {\n    let chart = useRef(null)\n    let [chartState, setChartState] = useState(chart)\n\n    useEffect(() => {\n        if (resize) {\n            chartState.resize()\n        }\n        if (!chartState.current) {\n            chartState.setOption(option)\n        }\n        else {\n            setChartState(echarts.init(chart.current))\n        }\n    }, [option, chartState, resize])\n    return (\n        <div ref={chart} style ={{height:'300px', width:'500px'}}></div>\n    )\n}"]},"metadata":{},"sourceType":"module"}