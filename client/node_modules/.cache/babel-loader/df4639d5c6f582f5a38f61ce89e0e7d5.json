{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PlayerProfile from './PlayerProfile';\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from '../../Components/Graphing/RadarStats';\nimport SearchBar from '../../Components/SearchBar/SearchBar';\nimport { useHistory, useParams } from 'react-router-dom';\n\nfunction Player(props) {\n  _s();\n\n  const {\n    name\n  } = useParams();\n  const Player_Query = gql`\n    query PlayerQuery ($playerName: String = \"Bradley Beal\") {\n        historicStats (playerName: $playerName) {\n            playerId\n            seasonId\n            pts\n            reb\n            ast\n            fG3M\n            stl\n            blk\n            min\n            tov\n            fga\n            fG3A\n            fgPct\n            ftPct\n            fg3Pct\n            fta\n            teamAbbreviation\n        }\n        playerInfo (playerName: $playerName) {\n            personId\n            displayFirstLast\n            jersey\n            position\n            teamName\n            teamCity\n        }\n        currentStats {\n            playerId\n            playerName\n            teamId\n            teamAbbreviation\n            age\n            gp\n            w\n            l\n            wPct\n            min\n            fgm\n            fga\n            fgPct\n            fG3M\n            fG3A\n            fg3Pct\n            ftm\n            fta\n            ftPct\n            oreb\n            dreb\n            reb\n            ast\n            tov\n            stl\n            blk\n            blka\n            pf\n            pfd\n            pts\n            plusMinus\n            nbaFantasyPts\n            dD2\n            tD3\n            gpRank\n            wRank\n            lRank\n            wPctRank\n            minRank\n            fgmRank\n            fgaRank\n            fgPctRank\n            fg3mRank\n            fg3aRank\n            fg3PctRank\n            ftmRank\n            ftaRank\n            ftPctRank\n            orebRank\n            drebRank\n            rebRank\n            astRank\n            tovRank\n            stlRank\n            blkRank\n            blkaRank\n            pfRank\n            pfdRank\n            ptsRank\n            plusMinusRank\n            nbaFantasyPtsRank\n            dd2Rank\n            td3Rank\n          }\n          leagueGameLog(playerName: $playerName) {\n            resource,\n            parameters {\n              LeagueID\n              Season\n              SeasonType\n              PlayerOrTeam\n              Counter\n              Sorter\n              Direction\n              DateFrom\n              DateTo\n            },\n            resultSets {\n              name\n              headers\n              rowSet\n            }\n        }\n    }\n`;\n  const [seasonStats, setSeasonStats] = useState([]);\n  const [playerInfo, setPlayerInfo] = useState([]);\n  const [playerGames, setPlayerGames] = useState([]);\n  const [currentPlayer, setCurrentPlayer] = useState();\n  const history = useHistory();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(Player_Query, {\n    variables: {\n      playerName: currentPlayer\n    }\n  });\n  const [dataLoaded, setDataLoaded] = useState(false);\n  var temp_arr = [];\n  useEffect(() => {\n    if (!loading) {\n      temp_arr = data['historicStats'].filter(item => item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\" || item.seasonId !== \"2020-21\");\n      setSeasonStats(temp_arr.slice(temp_arr.length - 3, temp_arr.length));\n      setPlayerInfo(data['playerInfo']);\n      setPlayerGames(data['leagueGameLog']);\n      console.log(props.query); //history.push(`/Player?${currentPlayer}`)\n\n      setDataLoaded(true);\n    }\n  }, [data]);\n  if (loading) return 'Loading...';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playerPageContainer\",\n    children: [props.id, /*#__PURE__*/_jsxDEV(SearchBar, {\n      setCurrentPlayer: setCurrentPlayer,\n      setDataLoaded: setDataLoaded,\n      playerInfo: playerInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), dataLoaded && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerDashboard\",\n        children: [/*#__PURE__*/_jsxDEV(PlayerProfile, {\n          playerInfo: playerInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadarStats, {\n          config: seasonStats,\n          style: {\n            height: '350px',\n            width: '900px'\n          },\n          size: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", error.message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 24\n    }, this), !dataLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"SdZ62cYNKrnEVWFCcG1CLkbjzn8=\", false, function () {\n  return [useParams, useHistory, useQuery];\n});\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/Player.js"],"names":["React","useEffect","useState","PlayerProfile","useQuery","gql","RadarStats","SearchBar","useHistory","useParams","Player","props","name","Player_Query","seasonStats","setSeasonStats","playerInfo","setPlayerInfo","playerGames","setPlayerGames","currentPlayer","setCurrentPlayer","history","loading","error","data","variables","playerName","dataLoaded","setDataLoaded","temp_arr","filter","item","seasonId","teamAbbreviation","slice","length","console","log","query","id","height","width","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;;AAGA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAWH,SAAS,EAA1B;AACA,QAAMI,YAAY,GAAGR,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlHI;AAmHA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,EAAlD;AAEA,QAAMoB,OAAO,GAAGd,UAAU,EAA1B;AAEA,QAAM;AAAEe,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BrB,QAAQ,CAACS,YAAD,EAAe;AACpDa,IAAAA,SAAS,EAAE;AAACC,MAAAA,UAAU,EAAEP;AAAb;AADyC,GAAf,CAAzC;AAGA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8B3B,QAAQ,CAAC,KAAD,CAA5C;AAEA,MAAI4B,QAAQ,GAAG,EAAf;AAEA7B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACsB,OAAL,EAAc;AACVO,MAAAA,QAAQ,GAAGL,IAAI,CAAC,eAAD,CAAJ,CAAsBM,MAAtB,CAA8BC,IAAD,IACnCA,IAAI,CAACC,QAAL,KAAkB,SAAlB,IAA+BD,IAAI,CAACE,gBAAL,KAA0B,KAA1D,IACAF,IAAI,CAACC,QAAL,KAAkB,SAFX,CAAX;AAIAlB,MAAAA,cAAc,CAACe,QAAQ,CAACK,KAAT,CAAeL,QAAQ,CAACM,MAAT,GAAkB,CAAjC,EAAoCN,QAAQ,CAACM,MAA7C,CAAD,CAAd;AACAnB,MAAAA,aAAa,CAACQ,IAAI,CAAC,YAAD,CAAL,CAAb;AACAN,MAAAA,cAAc,CAACM,IAAI,CAAC,eAAD,CAAL,CAAd;AAEAY,MAAAA,OAAO,CAACC,GAAR,CAAY3B,KAAK,CAAC4B,KAAlB,EATU,CAUV;;AACAV,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GAdQ,EAcN,CAACJ,IAAD,CAdM,CAAT;AAiBA,MAAIF,OAAJ,EAAa,OAAO,YAAP;AAEb,sBACI;AAAK,IAAA,SAAS,EAAG,qBAAjB;AAAA,eACKZ,KAAK,CAAC6B,EADX,eAEI,QAAC,SAAD;AAAW,MAAA,gBAAgB,EAAInB,gBAA/B;AAAiD,MAAA,aAAa,EAAEQ,aAAhE;AAA+E,MAAA,UAAU,EAAEb;AAA3F;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGMY,UAAU,IAAI,CAACJ,KAAhB,iBACG;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI,QAAC,aAAD;AAAe,UAAA,UAAU,EAAER;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAY,UAAA,MAAM,EAAIF,WAAtB;AAAmC,UAAA,KAAK,EAAI;AAAC2B,YAAAA,MAAM,EAAC,OAAR;AAAiBC,YAAAA,KAAK,EAAC;AAAvB,WAA5C;AAA6E,UAAA,IAAI,EAAI;AAArF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBAJR,EAUMlB,KAAK,iBAAI;AAAA,sBAAOA,KAAK,CAACmB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAVf,EAWM,CAACf,UAAD,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GArKQlB,M;UACYD,S,EAyHDD,U,EAEiBJ,Q;;;KA5H5BM,M;AAuKT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PlayerProfile from './PlayerProfile';\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from '../../Components/Graphing/RadarStats'\nimport SearchBar from '../../Components/SearchBar/SearchBar'\nimport { useHistory, useParams } from 'react-router-dom';\n\n\nfunction Player(props) {\n    const { name } = useParams();\n    const Player_Query = gql`\n    query PlayerQuery ($playerName: String = \"Bradley Beal\") {\n        historicStats (playerName: $playerName) {\n            playerId\n            seasonId\n            pts\n            reb\n            ast\n            fG3M\n            stl\n            blk\n            min\n            tov\n            fga\n            fG3A\n            fgPct\n            ftPct\n            fg3Pct\n            fta\n            teamAbbreviation\n        }\n        playerInfo (playerName: $playerName) {\n            personId\n            displayFirstLast\n            jersey\n            position\n            teamName\n            teamCity\n        }\n        currentStats {\n            playerId\n            playerName\n            teamId\n            teamAbbreviation\n            age\n            gp\n            w\n            l\n            wPct\n            min\n            fgm\n            fga\n            fgPct\n            fG3M\n            fG3A\n            fg3Pct\n            ftm\n            fta\n            ftPct\n            oreb\n            dreb\n            reb\n            ast\n            tov\n            stl\n            blk\n            blka\n            pf\n            pfd\n            pts\n            plusMinus\n            nbaFantasyPts\n            dD2\n            tD3\n            gpRank\n            wRank\n            lRank\n            wPctRank\n            minRank\n            fgmRank\n            fgaRank\n            fgPctRank\n            fg3mRank\n            fg3aRank\n            fg3PctRank\n            ftmRank\n            ftaRank\n            ftPctRank\n            orebRank\n            drebRank\n            rebRank\n            astRank\n            tovRank\n            stlRank\n            blkRank\n            blkaRank\n            pfRank\n            pfdRank\n            ptsRank\n            plusMinusRank\n            nbaFantasyPtsRank\n            dd2Rank\n            td3Rank\n          }\n          leagueGameLog(playerName: $playerName) {\n            resource,\n            parameters {\n              LeagueID\n              Season\n              SeasonType\n              PlayerOrTeam\n              Counter\n              Sorter\n              Direction\n              DateFrom\n              DateTo\n            },\n            resultSets {\n              name\n              headers\n              rowSet\n            }\n        }\n    }\n`\n    const [seasonStats, setSeasonStats] = useState([])\n    const [playerInfo, setPlayerInfo] = useState([])\n    const [playerGames, setPlayerGames] = useState([])\n    const [currentPlayer, setCurrentPlayer] = useState();\n\n    const history = useHistory();\n\n    const { loading, error, data } = useQuery(Player_Query, {\n        variables: {playerName: currentPlayer}\n    });\n    const [dataLoaded, setDataLoaded] = useState(false);\n    \n    var temp_arr = []\n\n    useEffect(() => {\n        if (!loading) {\n            temp_arr = data['historicStats'].filter((item) =>\n                (item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\") || \n                item.seasonId !== \"2020-21\"\n            )\n            setSeasonStats(temp_arr.slice(temp_arr.length - 3, temp_arr.length))\n            setPlayerInfo(data['playerInfo'])\n            setPlayerGames(data['leagueGameLog'])\n\n            console.log(props.query);\n            //history.push(`/Player?${currentPlayer}`)\n            setDataLoaded(true);\n        }\n    }, [data]);\n    \n\n    if (loading) return 'Loading...';\n\n    return (\n        <div className = \"playerPageContainer\">\n            {props.id}\n            <SearchBar setCurrentPlayer = {setCurrentPlayer} setDataLoaded={setDataLoaded} playerInfo={playerInfo} />\n            {(dataLoaded && !error)  && \n                <>\n                <div className=\"playerDashboard\">\n                    <PlayerProfile playerInfo={playerInfo}/>\n                    <RadarStats config = {seasonStats} style = {{height:'350px', width:'900px'}} size = {100}/> \n                </div>\n            </>}\n            { error && <div> {error.message} </div>}\n            { !dataLoaded  && <div>Loading</div> }\n         </div>\n    )\n}\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}