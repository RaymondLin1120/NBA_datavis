{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PlayerProfile from './PlayerProfile';\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from '../../Components/Graphing/RadarStats';\nimport SearchBar from '../../Components/SearchBar/SearchBar';\nconst Player_Query = gql`\n    query PlayerQuery ($playerName: String!) {\n        historicStats (playerName: $playerName) {\n            playerId\n            seasonId\n            pts\n            reb\n            ast\n            fG3M\n            stl\n            blk\n            min\n            tov\n            fga\n            fG3A\n            fgPct\n            ftPct\n            fg3Pct\n            fta\n            teamAbbreviation\n        }\n        playerInfo (playerName: $playerName) {\n            personId\n            displayFirstLast\n            jersey\n            position\n            teamName\n            teamCity\n        }\n        currentStats {\n            playerId\n            playerName\n            teamId\n            teamAbbreviation\n            age\n            gp\n            w\n            l\n            wPct\n            min\n            fgm\n            fga\n            fgPct\n            fG3M\n            fG3A\n            fg3Pct\n            ftm\n            fta\n            ftPct\n            oreb\n            dreb\n            reb\n            ast\n            tov\n            stl\n            blk\n            blka\n            pf\n            pfd\n            pts\n            plusMinus\n            nbaFantasyPts\n            dD2\n            tD3\n            gpRank\n            wRank\n            lRank\n            wPctRank\n            minRank\n            fgmRank\n            fgaRank\n            fgPctRank\n            fg3mRank\n            fg3aRank\n            fg3PctRank\n            ftmRank\n            ftaRank\n            ftPctRank\n            orebRank\n            drebRank\n            rebRank\n            astRank\n            tovRank\n            stlRank\n            blkRank\n            blkaRank\n            pfRank\n            pfdRank\n            ptsRank\n            plusMinusRank\n            nbaFantasyPtsRank\n            dd2Rank\n            td3Rank\n          }\n          leagueGameLog(playerName: $playerName) {\n            resource,\n            parameters {\n              LeagueID\n              Season\n              SeasonType\n              PlayerOrTeam\n              Counter\n              Sorter\n              Direction\n              DateFrom\n              DateTo\n            },\n            resultSets {\n              name\n              headers\n              rowSet\n            }\n        }\n    }\n`;\n\nfunction Player() {\n  _s();\n\n  const [seasonStats, setSeasonStats] = useState([]);\n  const [playerInfo, setPlayerInfo] = useState([]);\n  const [playerGames, setPlayerGames] = useState([]);\n  const [currentPlayer, setCurrentPlayer] = useState(\"Bradley Beal\");\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(Player_Query, {\n    variables: {\n      playerName: currentPlayer\n    }\n  });\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  function searchPlayer(input) {\n    setCurrentPlayer(input);\n  }\n\n  var temp_arr = [];\n  useEffect(() => {\n    if (!loading) {\n      temp_arr = data['historicStats'].filter(item => item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\" || item.seasonId !== \"2020-21\");\n      setSeasonStats(temp_arr.slice(temp_arr.length - 3, temp_arr.length));\n      setPlayerInfo(data['playerInfo']);\n      setPlayerGames(data['leagueGameLog']);\n      console.log(temp_arr);\n      setDataLoaded(true);\n    }\n  }, [data]);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playerPageContainer\",\n    children: dataLoaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchPlayer: searchPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerDashboard\",\n        children: [/*#__PURE__*/_jsxDEV(PlayerProfile, {\n          playerInfo: playerInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadarStats, {\n          config: seasonStats,\n          style: {\n            height: '350px',\n            width: '1050px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), !dataLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"ommiaw/5NmmTMnxnBT63K4cGxt8=\", false, function () {\n  return [useQuery];\n});\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/Player.js"],"names":["React","useEffect","useState","PlayerProfile","useQuery","gql","RadarStats","SearchBar","Player_Query","Player","seasonStats","setSeasonStats","playerInfo","setPlayerInfo","playerGames","setPlayerGames","currentPlayer","setCurrentPlayer","loading","error","data","variables","playerName","dataLoaded","setDataLoaded","searchPlayer","input","temp_arr","filter","item","seasonId","teamAbbreviation","slice","length","console","log","message","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PlayerProfile from './PlayerProfile';\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from '../../Components/Graphing/RadarStats'\nimport SearchBar from '../../Components/SearchBar/SearchBar'\n\nconst Player_Query = gql`\n    query PlayerQuery ($playerName: String!) {\n        historicStats (playerName: $playerName) {\n            playerId\n            seasonId\n            pts\n            reb\n            ast\n            fG3M\n            stl\n            blk\n            min\n            tov\n            fga\n            fG3A\n            fgPct\n            ftPct\n            fg3Pct\n            fta\n            teamAbbreviation\n        }\n        playerInfo (playerName: $playerName) {\n            personId\n            displayFirstLast\n            jersey\n            position\n            teamName\n            teamCity\n        }\n        currentStats {\n            playerId\n            playerName\n            teamId\n            teamAbbreviation\n            age\n            gp\n            w\n            l\n            wPct\n            min\n            fgm\n            fga\n            fgPct\n            fG3M\n            fG3A\n            fg3Pct\n            ftm\n            fta\n            ftPct\n            oreb\n            dreb\n            reb\n            ast\n            tov\n            stl\n            blk\n            blka\n            pf\n            pfd\n            pts\n            plusMinus\n            nbaFantasyPts\n            dD2\n            tD3\n            gpRank\n            wRank\n            lRank\n            wPctRank\n            minRank\n            fgmRank\n            fgaRank\n            fgPctRank\n            fg3mRank\n            fg3aRank\n            fg3PctRank\n            ftmRank\n            ftaRank\n            ftPctRank\n            orebRank\n            drebRank\n            rebRank\n            astRank\n            tovRank\n            stlRank\n            blkRank\n            blkaRank\n            pfRank\n            pfdRank\n            ptsRank\n            plusMinusRank\n            nbaFantasyPtsRank\n            dd2Rank\n            td3Rank\n          }\n          leagueGameLog(playerName: $playerName) {\n            resource,\n            parameters {\n              LeagueID\n              Season\n              SeasonType\n              PlayerOrTeam\n              Counter\n              Sorter\n              Direction\n              DateFrom\n              DateTo\n            },\n            resultSets {\n              name\n              headers\n              rowSet\n            }\n        }\n    }\n`\nfunction Player() {\n    const [seasonStats, setSeasonStats] = useState([])\n    const [playerInfo, setPlayerInfo] = useState([])\n    const [playerGames, setPlayerGames] = useState([])\n    const [currentPlayer, setCurrentPlayer] = useState(\"Bradley Beal\")\n    const { loading, error, data } = useQuery(Player_Query, {\n        variables: {playerName: currentPlayer}\n    });\n    const [dataLoaded, setDataLoaded] = useState(false);\n    \n    function searchPlayer(input) {\n        setCurrentPlayer(input)\n    }\n    var temp_arr = []\n    useEffect(() => {\n        if (!loading) {\n            temp_arr = data['historicStats'].filter((item) =>\n                (item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\") || \n                item.seasonId !== \"2020-21\"\n            )\n            setSeasonStats(temp_arr.slice(temp_arr.length - 3, temp_arr.length))\n            setPlayerInfo(data['playerInfo'])\n            setPlayerGames(data['leagueGameLog'])\n            console.log(temp_arr)\n            setDataLoaded(true);\n        }\n    }, [data]);\n    \n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n\n\n    return (\n        <div className = \"playerPageContainer\">\n            {dataLoaded && \n                <>\n                <SearchBar searchPlayer = {searchPlayer}/>\n                <div className=\"playerDashboard\">\n                    <PlayerProfile playerInfo={playerInfo}/>\n                    <RadarStats config = {seasonStats} style = {{height:'350px', width:'1050px'}}/> \n                    { !dataLoaded && <div>Loading</div> }\n                </div>\n                </>}\n         </div>\n    )\n}\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}