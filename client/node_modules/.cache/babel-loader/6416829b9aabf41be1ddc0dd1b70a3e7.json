{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Sidebar from './Components/Sidebar/Sidebar';\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloProvider as ApolloHooksProvider } from \"react-apollo-hooks\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { setContext } from \"apollo-link-context\";\nimport { withApollo } from \"react-apollo\";\nimport Home from './Pages/Home';\nimport Player from './Pages/Player';\nconst AUTH_TOKEN = \"auth-token\";\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:8080/graphql'\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem(AUTH_TOKEN);\n\n  if (!token) {\n    return {\n      headers\n    };\n  }\n\n  return {\n    headers: { ...headers,\n      authorization: `Bearer ${token}`\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/Home\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/Player\",\n            component: Player\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: () => 404\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Sidebar","ApolloProvider","ApolloHooksProvider","ApolloClient","createHttpLink","InMemoryCache","setContext","withApollo","Home","Player","AUTH_TOKEN","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAqD,kBAArD;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASA,cAAc,IAAIC,mBAA3B,QAAsD,oBAAtD;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,MAAMC,UAAU,GAAG,YAAnB;AAEA,MAAMC,QAAQ,GAAGP,cAAc,CAAC;AAC9BQ,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,QAAQ,GAAGP,UAAU,CAAC,CAACQ,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC9C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBR,UAArB,CAAd;;AAEA,MAAI,CAACM,KAAL,EAAY;AACV,WAAO;AACLD,MAAAA;AADK,KAAP;AAGD;;AAED,SAAO;AACLA,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPI,MAAAA,aAAa,EAAG,UAASH,KAAM;AAFxB;AADJ,GAAP;AAMD,CAf0B,CAA3B;AAiBA,MAAMI,MAAM,GAAG,IAAIjB,YAAJ,CAAiB;AAC9BkB,EAAAA,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CADwB;AAE9BY,EAAAA,KAAK,EAAE,IAAIlB,aAAJ;AAFuB,CAAjB,CAAf;;AAKA,SAASmB,GAAT,GAAe;AACb,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAIJ,MAA1B;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,OAAlB;AAA0B,YAAA,SAAS,EAAIZ;AAAvC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,SAAlB;AAA4B,YAAA,SAAS,EAAIC;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAE,MAAM;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;KAfQe,G;AAiBT,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Sidebar from './Components/Sidebar/Sidebar'\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloProvider as ApolloHooksProvider } from \"react-apollo-hooks\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { setContext } from \"apollo-link-context\";\nimport { withApollo } from \"react-apollo\";\n\nimport Home from './Pages/Home'\nimport Player from './Pages/Player'\n\nconst AUTH_TOKEN = \"auth-token\";\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:8080/graphql'\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(AUTH_TOKEN);\n\n  if (!token) {\n    return {\n      headers\n    };\n  }\n\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${token}`\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client = {client}>\n      <Router>\n        <div className=\"App\">\n            <Sidebar />\n            <Switch>\n              <Route exact path='/Home' component = {Home} />\n              <Route exact path='/Player' component = {Player} />\n              <Route component={() => 404} />\n            </Switch>  \n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}