{"ast":null,"code":"// import React, { useRef, useState, useEffect } from 'react'\n// import * as d3 from 'd3'\n// function CirclePacking(props) {\n//     const [data, setData] = useState(props.data)\n//     const svgRef = useRef()\n//     useEffect(() => {\n//         const svg = d3.select(svgRef.current)\n//         let focus = root;\n//         let view;\n//         var height = 932\n//         var width = 932\n//         var root = d3.hierarchy(data)\n//                     .count()\n//                     .sort((a,b) => b.value - a.value);\n//         var packLayout = d3.pack()\n//             .size([width, height])\n//             .padding(3)\n//         packLayout(root)\n//         var color = d3.scaleLinear()\n//             .domain([0, 5])\n//             .range([\"hsl(152,80%,80%)\", \"hsl(228,30%,40%)\"])\n//             .interpolate(d3.interpolateHcl)\n//         svg.attr(\"viewBox\", `-${width / 2} -${height / 2} ${width} ${height}`)\n//             .attr('width', `${width}`)\n//             .attr('height',`${height}`)\n//             .attr(\"class\", \"packLayout\")\n//             .style(\"display\", \"block\")\n//             .style(\"margin\", \"0 -14px\")\n//             .style(\"background\", color(0))\n//             .style(\"cursor\", \"pointer\")\n//             .on(\"click\", (event) => zoom(event, root));\n//         // const node = svg.selectAll(\"g\").append('g')\n//         //     .data(root.descendants().slice(1))\n//         //     .enter()\n//         //     .append('circle')\n//         //     .attr(\"fill\", d => d.children ? color(d.depth) : \"white\")\n//         //     .attr(\"pointer-events\", d => !d.children ? \"none\" : null)\n//         //     .attr('cx', function(d) { return d.x; })\n//         //     .attr('cy', function(d) { return d.y; })\n//         //     .attr('r', function(d) { return d.r; })\n//         //     .on(\"mouseover\", function() { d3.select(this).attr(\"stroke\", \"#000\"); })\n//         //     .on(\"mouseout\", function() { d3.select(this).attr(\"stroke\", null); })\n//         //     .on(\"click\", (event, d) => focus !== d && (zoom(event, d), event.stopPropagation()));\n//         // var defs = svg.append('svg:defs');\n//         // defs.append(\"svg:pattern\")\n//         //     .data(root.descendants().slice(1))\n//             //.attr(\"id\", d => d.children ? null : d.img)\n//             // .attr(\"width\", 100)\n//             // .attr(\"height\", 100)\n//             // .attr(\"patternUnits\", \"userSpaceOnUse\")\n//             // .append(\"svg:image\")\n//             // .attr(\"xlink:href\", 'http://placekitten.com/g/48/48')\n//             // .attr(\"width\", 100)\n//             // .attr(\"height\", 100)\n//             // .attr(\"x\", 0)\n//             // .attr(\"y\", 0);\n//         const node = svg.append(\"g\")\n//             .selectAll(\"circle\")\n//             .data(root.descendants().slice(1))\n//             .join(\"circle\")\n//             .style(\"fill-opacity\", d => (d.parent === root && d.children) ? 1 : 0)\n//             .attr(\"fill\", d => d.children ? color(d.depth) : \"none\")\n//             .attr(\"pointer-events\", d => !d.children ? \"none\" : null)\n//             .on(\"mouseover\", function() { d3.select(this).attr(\"stroke\", \"#000\"); })\n//             .on(\"mouseout\", function() { d3.select(this).attr(\"stroke\", null); })\n//             .on(\"click\", (event, d) => focus !== d && (zoom(event, d), event.stopPropagation()))\n//         const label = svg.append(\"g\")\n//             .style(\"font\", \"10px sans-serif\")\n//             .attr(\"pointer-events\", \"none\")\n//             .attr(\"text-anchor\", \"middle\")\n//             .selectAll(\"text\")\n//             .data(root.descendants())\n//             .join(\"text\")\n//             .style(\"fill-opacity\", d => d.parent === root ? 1 : 0)\n//             .style(\"display\", d => d.parent === root ? \"inline\" : \"none\")\n//             .text(d => d.data.name)\n//             .on(\"click\", (event, d) => console.log(d.data.name));\n//         zoomTo([root.x, root.y, root.r*2]);\n//         function zoomTo(v) {\n//             const k = width / v[2];\n//             view = v;\n//             label.attr(\"transform\", d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`);\n//             node.attr(\"transform\", d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`);\n//             node.attr(\"r\", d => d.r * k);\n//           }\n//           function zoom(event, d) {\n//             const focus0 = focus;\n//             focus = d;\n//             console.log([focus.x, focus.y, focus.r*2])\n//             const transition = svg.transition()\n//                 .duration(event.altKey ? 7500 : 750)\n//                 .tween(\"zoom\", d => {\n//                   const i = d3.interpolateZoom(view, [focus.x, focus.y, focus.r * 2]);\n//                   return t => zoomTo(i(t));\n//                 });\n//             console.log(d)\n//             node\n//                 .transition(transition)\n//                 //.attr(\"fill\", d => d.children ? color(d.depth) : \"white\")\n//                 .style(\"fill-opacity\", d => d.parent === focus ? 1 : 0)\n//                 .on(\"start\", function(d) { if (d.parent === focus && !d.children) d3.select(this).attr(\"fill\", \"white\"); })\n//                 //.on(\"end\", function(d) { if (d.parent !== focus && !d.children) d3.select(this).attr(\"fill\", color(d.depth)); })\n//                 // .on(\"start\", d => {if (!d.children && (d.parent !== focus)) this.attr(\"fill\", \"white\")})\n//                 // .attr(\"fill\", d => d.children ? color(d.depth) : \"white\")\n//                 // .on(\"end\", function(d) { if (d.parent !== focus) this.style.display = \"none\"; });\n//             label\n//               .filter(function(d) { return d.parent === focus || this.style.display === \"inline\"; })\n//               .transition(transition)\n//                 .style(\"fill-opacity\", d => d.parent === focus ? 1 : 0)\n//                 .on(\"start\", function(d) { if (d.parent === focus) this.style.display = \"inline\"; })\n//                 //on(\"end\", function(d) { if (d.parent !== focus) this.style.display = \"none\"; });\n//          }\n//         // svg.selectAll(\"path\")\n//         //     .data([data])\n//         //     .join(\"path\")\n//         //     .attr(\"d\", value => myLine(value))\n//         //     .attr(\"fill\", \"none\")\n//         //     .attr(\"stroke\", \"red\")\n//     },[])\n//     return (\n//         <svg className=\"circPack\" ref = {svgRef}></svg>\n//     )\n// }\n// export default CirclePacking","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/CirclePacking.js"],"names":[],"mappingssourcesContent":["// import React, { useRef, useState, useEffect } from 'react'\n// import * as d3 from 'd3'\n\n// function CirclePacking(props) {\n    \n//     const [data, setData] = useState(props.data)\n//     const svgRef = useRef()\n    \n//     useEffect(() => {\n//         const svg = d3.select(svgRef.current)\n\n//         let focus = root;\n//         let view;\n\n//         var height = 932\n//         var width = 932\n//         var root = d3.hierarchy(data)\n//                     .count()\n//                     .sort((a,b) => b.value - a.value);\n        \n//         var packLayout = d3.pack()\n//             .size([width, height])\n//             .padding(3)\n        \n//         packLayout(root)\n//         var color = d3.scaleLinear()\n//             .domain([0, 5])\n//             .range([\"hsl(152,80%,80%)\", \"hsl(228,30%,40%)\"])\n//             .interpolate(d3.interpolateHcl)\n\n//         svg.attr(\"viewBox\", `-${width / 2} -${height / 2} ${width} ${height}`)\n//             .attr('width', `${width}`)\n//             .attr('height',`${height}`)\n//             .attr(\"class\", \"packLayout\")\n//             .style(\"display\", \"block\")\n//             .style(\"margin\", \"0 -14px\")\n//             .style(\"background\", color(0))\n//             .style(\"cursor\", \"pointer\")\n//             .on(\"click\", (event) => zoom(event, root));\n\n//         // const node = svg.selectAll(\"g\").append('g')\n//         //     .data(root.descendants().slice(1))\n//         //     .enter()\n//         //     .append('circle')\n//         //     .attr(\"fill\", d => d.children ? color(d.depth) : \"white\")\n//         //     .attr(\"pointer-events\", d => !d.children ? \"none\" : null)\n//         //     .attr('cx', function(d) { return d.x; })\n//         //     .attr('cy', function(d) { return d.y; })\n//         //     .attr('r', function(d) { return d.r; })\n//         //     .on(\"mouseover\", function() { d3.select(this).attr(\"stroke\", \"#000\"); })\n//         //     .on(\"mouseout\", function() { d3.select(this).attr(\"stroke\", null); })\n//         //     .on(\"click\", (event, d) => focus !== d && (zoom(event, d), event.stopPropagation()));\n        \n//         // var defs = svg.append('svg:defs');\n        \n//         // defs.append(\"svg:pattern\")\n//         //     .data(root.descendants().slice(1))\n//             //.attr(\"id\", d => d.children ? null : d.img)\n//             // .attr(\"width\", 100)\n//             // .attr(\"height\", 100)\n//             // .attr(\"patternUnits\", \"userSpaceOnUse\")\n//             // .append(\"svg:image\")\n//             // .attr(\"xlink:href\", 'http://placekitten.com/g/48/48')\n//             // .attr(\"width\", 100)\n//             // .attr(\"height\", 100)\n//             // .attr(\"x\", 0)\n//             // .attr(\"y\", 0);\n\n//         const node = svg.append(\"g\")\n//             .selectAll(\"circle\")\n//             .data(root.descendants().slice(1))\n//             .join(\"circle\")\n//             .style(\"fill-opacity\", d => (d.parent === root && d.children) ? 1 : 0)\n//             .attr(\"fill\", d => d.children ? color(d.depth) : \"none\")\n//             .attr(\"pointer-events\", d => !d.children ? \"none\" : null)\n//             .on(\"mouseover\", function() { d3.select(this).attr(\"stroke\", \"#000\"); })\n//             .on(\"mouseout\", function() { d3.select(this).attr(\"stroke\", null); })\n//             .on(\"click\", (event, d) => focus !== d && (zoom(event, d), event.stopPropagation()))\n\n\n//         const label = svg.append(\"g\")\n//             .style(\"font\", \"10px sans-serif\")\n//             .attr(\"pointer-events\", \"none\")\n//             .attr(\"text-anchor\", \"middle\")\n//             .selectAll(\"text\")\n//             .data(root.descendants())\n//             .join(\"text\")\n//             .style(\"fill-opacity\", d => d.parent === root ? 1 : 0)\n//             .style(\"display\", d => d.parent === root ? \"inline\" : \"none\")\n//             .text(d => d.data.name)\n//             .on(\"click\", (event, d) => console.log(d.data.name));\n        \n//         zoomTo([root.x, root.y, root.r*2]);\n//         function zoomTo(v) {\n//             const k = width / v[2];\n        \n//             view = v;\n        \n//             label.attr(\"transform\", d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`);\n//             node.attr(\"transform\", d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`);\n//             node.attr(\"r\", d => d.r * k);\n//           }\n        \n//           function zoom(event, d) {\n//             const focus0 = focus;\n        \n//             focus = d;\n            \n//             console.log([focus.x, focus.y, focus.r*2])\n//             const transition = svg.transition()\n//                 .duration(event.altKey ? 7500 : 750)\n//                 .tween(\"zoom\", d => {\n//                   const i = d3.interpolateZoom(view, [focus.x, focus.y, focus.r * 2]);\n//                   return t => zoomTo(i(t));\n//                 });\n//             console.log(d)\n//             node\n//                 .transition(transition)\n//                 //.attr(\"fill\", d => d.children ? color(d.depth) : \"white\")\n//                 .style(\"fill-opacity\", d => d.parent === focus ? 1 : 0)\n//                 .on(\"start\", function(d) { if (d.parent === focus && !d.children) d3.select(this).attr(\"fill\", \"white\"); })\n//                 //.on(\"end\", function(d) { if (d.parent !== focus && !d.children) d3.select(this).attr(\"fill\", color(d.depth)); })\n//                 // .on(\"start\", d => {if (!d.children && (d.parent !== focus)) this.attr(\"fill\", \"white\")})\n//                 // .attr(\"fill\", d => d.children ? color(d.depth) : \"white\")\n//                 // .on(\"end\", function(d) { if (d.parent !== focus) this.style.display = \"none\"; });\n  \n//             label\n//               .filter(function(d) { return d.parent === focus || this.style.display === \"inline\"; })\n//               .transition(transition)\n//                 .style(\"fill-opacity\", d => d.parent === focus ? 1 : 0)\n//                 .on(\"start\", function(d) { if (d.parent === focus) this.style.display = \"inline\"; })\n//                 //on(\"end\", function(d) { if (d.parent !== focus) this.style.display = \"none\"; });\n\n\n\n//          }\n\n//         // svg.selectAll(\"path\")\n//         //     .data([data])\n//         //     .join(\"path\")\n//         //     .attr(\"d\", value => myLine(value))\n//         //     .attr(\"fill\", \"none\")\n//         //     .attr(\"stroke\", \"red\")\n\n//     },[])\n//     return (\n//         <svg className=\"circPack\" ref = {svgRef}></svg>\n//     )\n// }\n\n// export default CirclePacking\n"]},"metadata":{},"sourceType":"module"}