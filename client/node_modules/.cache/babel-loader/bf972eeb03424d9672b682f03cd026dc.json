{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PlayerProfile from \"./PlayerProfile\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from \"../../Components/Graphing/RadarStats\";\nimport SearchBar from \"../../Components/SearchBar/SearchBar\";\nimport Boxscores from \"../../Components/Graphing/Boxscores\";\nimport ShotChart from \"../../Components/Graphing/ShotChart\";\nimport Gauge from \"../../Components/Graphing/Gauge\";\nimport nba from \"nba\";\nimport { useParams } from \"react-router-dom\";\nimport { MdBlock } from \"react-icons/md\";\nimport PlayerHome from \"./PlayerHome\";\nconst Player_Query = gql`\n  query PlayerQuery($playerId: Int!, $playerOrTeam: String = \"P\") {\n    historicStats(playerId: $playerId) {\n      playerId\n      seasonId\n      pts\n      reb\n      ast\n      fG3M\n      stl\n      blk\n      min\n      tov\n      fga\n      fG3A\n      fgPct\n      ftPct\n      fg3Pct\n      fta\n      teamAbbreviation\n    }\n    playerInfo(playerId: $playerId) {\n      personId\n      displayFirstLast\n      firstName\n      lastName\n      position\n      jersey\n      teamName\n      teamCity\n      teamAbbreviation\n    }\n    topStats {\n      top30 {\n        seasonId\n        pts: PTS\n        reb: REB\n        ast: AST\n        stl: STL\n        blk: BLK\n        tov: TOV\n      }\n      top70 {\n        seasonId\n        pts: PTS\n        reb: REB\n        ast: AST\n        stl: STL\n        blk: BLK\n        tov: TOV\n      }\n      top120 {\n        seasonId\n        pts: PTS\n        reb: REB\n        ast: AST\n        stl: STL\n        blk: BLK\n        tov: TOV\n      }\n      top180 {\n        seasonId\n        pts: PTS\n        reb: REB\n        ast: AST\n        stl: STL\n        blk: BLK\n        tov: TOV\n      }\n    }\n    shots(playerId: $playerId) {\n      gridType\n      gameId\n      gameEventId\n      playerId\n      playerName\n      teamId\n      teamName\n      period\n      minutesRemaining\n      secondsRemaining\n      eventType\n      actionType\n      shotType\n      shotZoneBasic\n      shotZoneArea\n      shotZoneRange\n      shotDistance\n      locX\n      locY\n      shotAttemptedFlag\n      shotMadeFlag\n      gameDate\n      htm\n      vtm\n    }\n    shotFreq {\n      playerId\n      playerName\n      playerLastTeamId\n      playerLastTeamAbbreviation\n      age\n      gp\n      g\n      fgaFrequency\n      fgm\n      fga\n      fgPct\n      efgPct\n      fg2aFrequency\n      fG2M\n      fG2A\n      fg2Pct\n      fg3aFrequency\n      fG3M\n      fG3A\n      fg3Pct\n    }\n    leagueGameLog(playerId: $playerId, PlayerOrTeam: $playerOrTeam) {\n      resource\n      parameters {\n        LeagueID\n        Season\n        SeasonType\n        PlayerOrTeam\n        Counter\n        Sorter\n        Direction\n        DateFrom\n        DateTo\n      }\n      resultSets {\n        name\n        headers\n        rowSet\n      }\n    }\n  }\n`;\n\nfunction Player({\n  match\n}) {\n  _s();\n\n  const {\n    id\n  } = match.params;\n  const [seasonStats, setSeasonStats] = useState([]);\n  const [playerInfo, setPlayerInfo] = useState([]);\n  const [playerGames, setPlayerGames] = useState([]);\n  const [shotData, setShotData] = useState([]);\n  const [shotFreq, setShotFreq] = useState([]);\n  const [topStats, setTopStats] = useState([]);\n  const [currentPlayer, setCurrentPlayer] = useState(parseInt(id));\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(Player_Query, {\n    variables: {\n      playerId: currentPlayer\n    }\n  });\n  const [dataLoaded, setDataLoaded] = useState(false);\n  useEffect(() => {\n    setDataLoaded(false);\n\n    if (id) {\n      if (!loading) {\n        var temp_arr = [];\n        var temp_arr1 = [];\n        var temp_arr2 = [];\n        var temp_arr3 = [];\n        temp_arr = data[\"historicStats\"].filter(item => item.seasonId === \"2020-21\" // (item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\") ||\n        // item.seasonId !== \"2020-21\"\n        );\n        setSeasonStats(temp_arr.slice(temp_arr.length - 1, temp_arr.length));\n        setPlayerInfo(data[\"playerInfo\"]);\n        data[\"leagueGameLog\"][\"resultSets\"][0][\"rowSet\"].map(item => temp_arr1.push({\n          gameID: item[6],\n          date: item[7],\n          matchup: item[8],\n          wl: item[9],\n          fgPct: parseFloat(item[13] * 100).toFixed(1) + \"%\",\n          fg3Pct: parseFloat(item[16] * 100).toFixed(1) + \"%\",\n          ftPct: parseFloat(item[19] * 100).toFixed(1) + \"%\",\n          min: item[10],\n          reb: item[22],\n          ast: item[23],\n          blk: item[25],\n          stl: item[24],\n          tov: item[26],\n          pf: item[27],\n          pts: item[28]\n        }));\n        setPlayerGames(temp_arr1);\n\n        for (var key of Object.keys(data.topStats)) {\n          if (key !== \"__typename\") {\n            temp_arr2.push(data.topStats[key]);\n          }\n        }\n\n        setTopStats(temp_arr2);\n        setShotData(data[\"shots\"]);\n        setShotFreq(data[\"shotFreq\"].filter(item => item.playerId == id));\n        setDataLoaded(true);\n      }\n    }\n  }, [data]);\n  if (loading) return \"Loading...\";\n\n  if (dataLoaded) {\n    console.log(shotFreq);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playerPageContainer\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      setCurrentPlayer: setCurrentPlayer,\n      setDataLoaded: setDataLoaded,\n      playerInfo: playerInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), !id && /*#__PURE__*/_jsxDEV(PlayerHome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }, this), dataLoaded && !error && id && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerDashboard\",\n        children: [/*#__PURE__*/_jsxDEV(PlayerProfile, {\n          playerInfo: playerInfo,\n          seasonStats: seasonStats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(RadarStats, {\n            config: seasonStats,\n            statData: topStats,\n            style: {\n              height: \"500px\",\n              width: \"500px\"\n            },\n            size: 160\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Gauge, {\n              config: seasonStats[0].fgPct,\n              title: \"Field Goal %\",\n              style: {\n                height: \"300px\",\n                width: \"300px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Gauge, {\n              config: seasonStats[0].ftPct,\n              title: \"Free Throw %\",\n              style: {\n                height: \"300px\",\n                width: \"300px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Gauge, {\n              config: seasonStats[0].fg3Pct,\n              title: \"3 Point %\",\n              style: {\n                height: \"300px\",\n                width: \"300px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Boxscores, {\n          data: playerGames\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), error && id && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", error.message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 23\n    }, this), !dataLoaded && id && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"TaFWkRhOuDqKZQN0bY89Pl6USE8=\", false, function () {\n  return [useQuery];\n});\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/Player.js"],"names":["React","useEffect","useState","PlayerProfile","useQuery","gql","RadarStats","SearchBar","Boxscores","ShotChart","Gauge","nba","useParams","MdBlock","PlayerHome","Player_Query","Player","match","id","params","seasonStats","setSeasonStats","playerInfo","setPlayerInfo","playerGames","setPlayerGames","shotData","setShotData","shotFreq","setShotFreq","topStats","setTopStats","currentPlayer","setCurrentPlayer","parseInt","loading","error","data","variables","playerId","dataLoaded","setDataLoaded","temp_arr","temp_arr1","temp_arr2","temp_arr3","filter","item","seasonId","slice","length","map","push","gameID","date","matchup","wl","fgPct","parseFloat","toFixed","fg3Pct","ftPct","min","reb","ast","blk","stl","tov","pf","pts","key","Object","keys","console","log","display","height","width","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PlayerProfile from \"./PlayerProfile\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from \"../../Components/Graphing/RadarStats\";\nimport SearchBar from \"../../Components/SearchBar/SearchBar\";\nimport Boxscores from \"../../Components/Graphing/Boxscores\";\nimport ShotChart from \"../../Components/Graphing/ShotChart\";\nimport Gauge from \"../../Components/Graphing/Gauge\";\nimport nba from \"nba\";\nimport { useParams } from \"react-router-dom\";\nimport { MdBlock } from \"react-icons/md\";\nimport PlayerHome from \"./PlayerHome\";\n\nconst Player_Query = gql`\n  query PlayerQuery($playerId: Int!, $playerOrTeam: String = \"P\") {\n    historicStats(playerId: $playerId) {\n      playerId\n      seasonId\n      pts\n      reb\n      ast\n      fG3M\n      stl\n      blk\n      min\n      tov\n      fga\n      fG3A\n      fgPct\n      ftPct\n      fg3Pct\n      fta\n      teamAbbreviation\n    }\n    playerInfo(playerId: $playerId) {\n      personId\n      displayFirstLast\n      firstName\n      lastName\n      position\n      jersey\n      teamName\n      teamCity\n      teamAbbreviation\n    }\n    topStats {\n      top30 {\n        seasonId\n        pts: PTS\n        reb: REB\n        ast: AST\n        stl: STL\n        blk: BLK\n        tov: TOV\n      }\n      top70 {\n        seasonId\n        pts: PTS\n        reb: REB\n        ast: AST\n        stl: STL\n        blk: BLK\n        tov: TOV\n      }\n      top120 {\n        seasonId\n        pts: PTS\n        reb: REB\n        ast: AST\n        stl: STL\n        blk: BLK\n        tov: TOV\n      }\n      top180 {\n        seasonId\n        pts: PTS\n        reb: REB\n        ast: AST\n        stl: STL\n        blk: BLK\n        tov: TOV\n      }\n    }\n    shots(playerId: $playerId) {\n      gridType\n      gameId\n      gameEventId\n      playerId\n      playerName\n      teamId\n      teamName\n      period\n      minutesRemaining\n      secondsRemaining\n      eventType\n      actionType\n      shotType\n      shotZoneBasic\n      shotZoneArea\n      shotZoneRange\n      shotDistance\n      locX\n      locY\n      shotAttemptedFlag\n      shotMadeFlag\n      gameDate\n      htm\n      vtm\n    }\n    shotFreq {\n      playerId\n      playerName\n      playerLastTeamId\n      playerLastTeamAbbreviation\n      age\n      gp\n      g\n      fgaFrequency\n      fgm\n      fga\n      fgPct\n      efgPct\n      fg2aFrequency\n      fG2M\n      fG2A\n      fg2Pct\n      fg3aFrequency\n      fG3M\n      fG3A\n      fg3Pct\n    }\n    leagueGameLog(playerId: $playerId, PlayerOrTeam: $playerOrTeam) {\n      resource\n      parameters {\n        LeagueID\n        Season\n        SeasonType\n        PlayerOrTeam\n        Counter\n        Sorter\n        Direction\n        DateFrom\n        DateTo\n      }\n      resultSets {\n        name\n        headers\n        rowSet\n      }\n    }\n  }\n`;\n\nfunction Player({ match }) {\n  const { id } = match.params;\n  const [seasonStats, setSeasonStats] = useState([]);\n  const [playerInfo, setPlayerInfo] = useState([]);\n  const [playerGames, setPlayerGames] = useState([]);\n  const [shotData, setShotData] = useState([]);\n  const [shotFreq, setShotFreq] = useState([]);\n  const [topStats, setTopStats] = useState([]);\n\n  const [currentPlayer, setCurrentPlayer] = useState(parseInt(id));\n\n  const { loading, error, data } = useQuery(Player_Query, {\n    variables: { playerId: currentPlayer },\n  });\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    setDataLoaded(false);\n    if (id) {\n      if (!loading) {\n        var temp_arr = [];\n        var temp_arr1 = [];\n        var temp_arr2 = [];\n        var temp_arr3 = [];\n        temp_arr = data[\"historicStats\"].filter(\n          item => item.seasonId === \"2020-21\"\n          // (item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\") ||\n          // item.seasonId !== \"2020-21\"\n        );\n        setSeasonStats(temp_arr.slice(temp_arr.length - 1, temp_arr.length));\n        setPlayerInfo(data[\"playerInfo\"]);\n\n        data[\"leagueGameLog\"][\"resultSets\"][0][\"rowSet\"].map(item =>\n          temp_arr1.push({\n            gameID: item[6],\n            date: item[7],\n            matchup: item[8],\n            wl: item[9],\n            fgPct: parseFloat(item[13] * 100).toFixed(1) + \"%\",\n            fg3Pct: parseFloat(item[16] * 100).toFixed(1) + \"%\",\n            ftPct: parseFloat(item[19] * 100).toFixed(1) + \"%\",\n            min: item[10],\n            reb: item[22],\n            ast: item[23],\n            blk: item[25],\n            stl: item[24],\n            tov: item[26],\n            pf: item[27],\n            pts: item[28],\n          })\n        );\n        setPlayerGames(temp_arr1);\n        for (var key of Object.keys(data.topStats)) {\n          if (key !== \"__typename\") {\n            temp_arr2.push(data.topStats[key]);\n          }\n        }\n        setTopStats(temp_arr2);\n        setShotData(data[\"shots\"]);\n        setShotFreq(data[\"shotFreq\"].filter(item => item.playerId == id));\n        setDataLoaded(true);\n      }\n    }\n  }, [data]);\n  if (loading) return \"Loading...\";\n\n  if (dataLoaded) {\n    console.log(shotFreq);\n  }\n\n  return (\n    <div className=\"playerPageContainer\">\n      <SearchBar\n        setCurrentPlayer={setCurrentPlayer}\n        setDataLoaded={setDataLoaded}\n        playerInfo={playerInfo}\n      />\n      {!id && <PlayerHome />}\n      {dataLoaded && !error && id && (\n        <>\n          <div className=\"playerDashboard\">\n            <PlayerProfile playerInfo={playerInfo} seasonStats={seasonStats} />\n            <div style={{ display: \"flex\" }}>\n              <RadarStats\n                config={seasonStats}\n                statData={topStats}\n                style={{ height: \"500px\", width: \"500px\" }}\n                size={160}\n              />\n              <div style={{ display: \"flex\" }}>\n                <Gauge\n                  config={seasonStats[0].fgPct}\n                  title=\"Field Goal %\"\n                  style={{ height: \"300px\", width: \"300px\" }}\n                />\n                <Gauge\n                  config={seasonStats[0].ftPct}\n                  title=\"Free Throw %\"\n                  style={{ height: \"300px\", width: \"300px\" }}\n                />\n                <Gauge\n                  config={seasonStats[0].fg3Pct}\n                  title=\"3 Point %\"\n                  style={{ height: \"300px\", width: \"300px\" }}\n                />\n              </div>\n            </div>\n            {/* <Gauge config = {} /> */}\n            {/* <ShotChart shotData = {shotData} /> */}\n            <Boxscores data={playerGames} />\n          </div>\n        </>\n      )}\n      {error && id && <div> {error.message} </div>}\n      {!dataLoaded && id && <div>Loading</div>}\n    </div>\n  );\n}\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}