{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PlayerProfile from './PlayerProfile';\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from '../../Components/Graphing/RadarStats';\nimport SearchBar from '../../Components/SearchBar/SearchBar';\nimport Boxscores from '../../Components/Graphing/Boxscores';\nimport nba from 'nba';\nimport { MdBlock } from 'react-icons/md';\nconst Player_Query = gql`\n    query PlayerQuery ($playerId: Int = 203500) {\n        historicStats (playerId: $playerId) {\n            playerId\n            seasonId\n            pts\n            reb\n            ast\n            fG3M\n            stl\n            blk\n            min\n            tov\n            fga\n            fG3A\n            fgPct\n            ftPct\n            fg3Pct\n            fta\n            teamAbbreviation\n        }\n        playerInfo (playerId: $playerId) {\n            personId\n            displayFirstLast\n            jersey\n            position\n            teamName\n            teamCity\n        }\n        currentStats {\n            playerId\n            playerName\n            teamId\n            teamAbbreviation\n            age\n            gp\n            w\n            l\n            wPct\n            min\n            fgm\n            fga\n            fgPct\n            fG3M\n            fG3A\n            fg3Pct\n            ftm\n            fta\n            ftPct\n            oreb\n            dreb\n            reb\n            ast\n            tov\n            stl\n            blk\n            blka\n            pf\n            pfd\n            pts\n            plusMinus\n            nbaFantasyPts\n            dD2\n            tD3\n            gpRank\n            wRank\n            lRank\n            wPctRank\n            minRank\n            fgmRank\n            fgaRank\n            fgPctRank\n            fg3mRank\n            fg3aRank\n            fg3PctRank\n            ftmRank\n            ftaRank\n            ftPctRank\n            orebRank\n            drebRank\n            rebRank\n            astRank\n            tovRank\n            stlRank\n            blkRank\n            blkaRank\n            pfRank\n            pfdRank\n            ptsRank\n            plusMinusRank\n            nbaFantasyPtsRank\n            dd2Rank\n            td3Rank\n          }\n          leagueGameLog(playerId: $playerId) {\n            resource,\n            parameters {\n              LeagueID\n              Season\n              SeasonType\n              PlayerOrTeam\n              Counter\n              Sorter\n              Direction\n              DateFrom\n              DateTo\n            },\n            resultSets {\n              name\n              headers\n              rowSet\n            }\n        }\n    }\n`;\n\nfunction Player(props) {\n  _s();\n\n  const [seasonStats, setSeasonStats] = useState([]);\n  const [playerInfo, setPlayerInfo] = useState([]);\n  const [playerGames, setPlayerGames] = useState([]);\n  const [topStats, setTopStats] = useState([]);\n  const [currentPlayer, setCurrentPlayer] = useState(nba.findPlayer(\"James Harden\").playerId);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(Player_Query, {\n    variables: {\n      playerId: currentPlayer\n    }\n  });\n  const [dataLoaded, setDataLoaded] = useState(false);\n  useEffect(() => {\n    setDataLoaded(false);\n\n    if (!loading) {\n      var temp_arr = [];\n      var temp_arr1 = [];\n      temp_arr = data['historicStats'].filter(item => item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\" || item.seasonId !== \"2020-21\");\n      setSeasonStats(temp_arr.slice(temp_arr.length - 3, temp_arr.length));\n      setPlayerInfo(data['playerInfo']); //setPlayerGames(data['leagueGameLog']['resultSets'])\n\n      data['leagueGameLog']['resultSets'][0]['rowSet'].map(item => temp_arr1.push({\n        gameID: item[6],\n        date: item[7],\n        matchup: item[8],\n        wl: item[9],\n        fgPct: parseFloat(item[13] * 100).toFixed(1) + \"%\",\n        fg3Pct: parseFloat(item[16] * 100).toFixed(1) + \"%\",\n        ftPct: parseFloat(item[19] * 100).toFixed(1) + \"%\",\n        min: item[10],\n        reb: item[22],\n        ast: item[23],\n        blk: item[25],\n        stl: item[24],\n        tov: item[26],\n        pf: item[27],\n        pts: item[28]\n      }));\n      setPlayerGames(temp_arr1);\n      setTopStats(data.topStats);\n      setDataLoaded(true);\n      console.log(temp_arr1);\n    }\n  }, [data]);\n  if (loading) return 'Loading...';\n\n  if (dataLoaded) {\n    console.log(topStats);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playerPageContainer\",\n    children: [props.name, /*#__PURE__*/_jsxDEV(SearchBar, {\n      setCurrentPlayer: setCurrentPlayer,\n      setDataLoaded: setDataLoaded,\n      playerInfo: playerInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), dataLoaded && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerDashboard\",\n        children: [/*#__PURE__*/_jsxDEV(PlayerProfile, {\n          playerInfo: playerInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadarStats, {\n          config: seasonStats,\n          style: {\n            height: '350px',\n            width: '900px'\n          },\n          size: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Boxscores, {\n          data: playerGames\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)\n    }, void 0, false), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", error.message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 24\n    }, this), !dataLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"/6SvVN7bAS3pHuLb5BdrTVJw0Vg=\", false, function () {\n  return [useQuery];\n});\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/Player.js"],"names":["React","useEffect","useState","PlayerProfile","useQuery","gql","RadarStats","SearchBar","Boxscores","nba","MdBlock","Player_Query","Player","props","seasonStats","setSeasonStats","playerInfo","setPlayerInfo","playerGames","setPlayerGames","topStats","setTopStats","currentPlayer","setCurrentPlayer","findPlayer","playerId","loading","error","data","variables","dataLoaded","setDataLoaded","temp_arr","temp_arr1","filter","item","seasonId","teamAbbreviation","slice","length","map","push","gameID","date","matchup","wl","fgPct","parseFloat","toFixed","fg3Pct","ftPct","min","reb","ast","blk","stl","tov","pf","pts","console","log","name","height","width","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,MAAMC,YAAY,GAAGN,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlHA;;AAoHA,SAASO,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAAyBnB,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACoB,aAAD,EAAgBC,gBAA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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PlayerProfile from './PlayerProfile';\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from '../../Components/Graphing/RadarStats'\nimport SearchBar from '../../Components/SearchBar/SearchBar'\nimport Boxscores from '../../Components/Graphing/Boxscores'\nimport nba from 'nba';\nimport { MdBlock } from 'react-icons/md';\n\nconst Player_Query = gql`\n    query PlayerQuery ($playerId: Int = 203500) {\n        historicStats (playerId: $playerId) {\n            playerId\n            seasonId\n            pts\n            reb\n            ast\n            fG3M\n            stl\n            blk\n            min\n            tov\n            fga\n            fG3A\n            fgPct\n            ftPct\n            fg3Pct\n            fta\n            teamAbbreviation\n        }\n        playerInfo (playerId: $playerId) {\n            personId\n            displayFirstLast\n            jersey\n            position\n            teamName\n            teamCity\n        }\n        currentStats {\n            playerId\n            playerName\n            teamId\n            teamAbbreviation\n            age\n            gp\n            w\n            l\n            wPct\n            min\n            fgm\n            fga\n            fgPct\n            fG3M\n            fG3A\n            fg3Pct\n            ftm\n            fta\n            ftPct\n            oreb\n            dreb\n            reb\n            ast\n            tov\n            stl\n            blk\n            blka\n            pf\n            pfd\n            pts\n            plusMinus\n            nbaFantasyPts\n            dD2\n            tD3\n            gpRank\n            wRank\n            lRank\n            wPctRank\n            minRank\n            fgmRank\n            fgaRank\n            fgPctRank\n            fg3mRank\n            fg3aRank\n            fg3PctRank\n            ftmRank\n            ftaRank\n            ftPctRank\n            orebRank\n            drebRank\n            rebRank\n            astRank\n            tovRank\n            stlRank\n            blkRank\n            blkaRank\n            pfRank\n            pfdRank\n            ptsRank\n            plusMinusRank\n            nbaFantasyPtsRank\n            dd2Rank\n            td3Rank\n          }\n          leagueGameLog(playerId: $playerId) {\n            resource,\n            parameters {\n              LeagueID\n              Season\n              SeasonType\n              PlayerOrTeam\n              Counter\n              Sorter\n              Direction\n              DateFrom\n              DateTo\n            },\n            resultSets {\n              name\n              headers\n              rowSet\n            }\n        }\n    }\n`\n\nfunction Player(props) {\n\n    const [seasonStats, setSeasonStats] = useState([])\n    const [playerInfo, setPlayerInfo] = useState([])\n    const [playerGames, setPlayerGames] = useState([])\n    const [topStats, setTopStats] =useState([])\n    const [currentPlayer, setCurrentPlayer] = useState(nba.findPlayer(\"James Harden\").playerId);\n\n    const { loading, error, data } = useQuery(Player_Query, {\n        variables: {playerId: currentPlayer}\n    });\n    const [dataLoaded, setDataLoaded] = useState(false);\n    \n    useEffect(() => {\n        setDataLoaded(false)\n        if (!loading) {\n            var temp_arr = []\n            var temp_arr1 = []\n            temp_arr = data['historicStats'].filter((item) =>\n                (item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\") || \n                item.seasonId !== \"2020-21\"\n            )\n            setSeasonStats(temp_arr.slice(temp_arr.length - 3, temp_arr.length))\n            setPlayerInfo(data['playerInfo'])\n            //setPlayerGames(data['leagueGameLog']['resultSets'])\n            data['leagueGameLog']['resultSets'][0]['rowSet'].map((item) => (\n                temp_arr1.push({\n                    gameID:item[6],\n                    date: item[7],\n                    matchup: item[8],\n                    wl:item[9],\n                    fgPct:parseFloat(item[13]*100).toFixed(1)+\"%\",\n                    fg3Pct:parseFloat(item[16]*100).toFixed(1)+\"%\",\n                    ftPct:parseFloat(item[19]*100).toFixed(1)+\"%\",\n                    min:item[10],\n                    reb:item[22],\n                    ast:item[23],\n                    blk:item[25],\n                    stl:item[24],\n                    tov:item[26],\n                    pf:item[27],\n                    pts:item[28]\n                })\n            ))\n            setPlayerGames(temp_arr1)\n            setTopStats(data.topStats)\n            setDataLoaded(true);\n            console.log(temp_arr1)\n        }\n    }, [data]);\n    if (loading) return 'Loading...';\n\n    if (dataLoaded) {\n        console.log(topStats)\n    }\n\n    return (\n        <div className = \"playerPageContainer\">\n            {props.name}\n            <SearchBar setCurrentPlayer = {setCurrentPlayer} setDataLoaded={setDataLoaded} playerInfo={playerInfo} />\n            {(dataLoaded && !error)  && \n                <>\n                <div className=\"playerDashboard\">\n                    <PlayerProfile playerInfo={playerInfo}/>\n                    <RadarStats config = {seasonStats} style = {{height:'350px', width:'900px'}} size = {100}/>\n                    <Boxscores data = {playerGames} />\n                </div>\n            </>}\n            { error && <div> {error.message} </div>}\n            { !dataLoaded  && <div>Loading</div> }\n         </div>\n    )\n}\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}