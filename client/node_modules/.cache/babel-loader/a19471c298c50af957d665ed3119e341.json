{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Games/Games.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nconst Game_Query = gql`\n    query GameQuery {\n        scoreboard {\n            gameHeader {\n                gameDateEst\n                gameSequence\n                gameId\n                gameStatusId\n                gameStatusText\n                gamecode\n                homeTeamId\n                visitorTeamId\n                season\n                livePeriod\n                livePcTime\n                livePeriodTimeBcast\n            }\n            lineScore {\n                gameDateEst\n                gameSequence\n                gameId\n                teamId\n                teamAbbreviation\n                teamCityName\n                teamWinsLosses\n                ptsQtr1\n                ptsQtr2\n                ptsQtr3\n                ptsQtr4\n                ptsOt1\n                ptsOt2\n                ptsOt3\n                ptsOt4\n                pts\n                fgPct\n                ftPct\n                fg3Pct\n                ast\n                reb\n                tov\n            }\n        }\n    }\t\n`;\n\nfunction Games() {\n  _s();\n\n  const [gameHeader, setGameHeader] = useState([]);\n  const [lineScore, setLineScore] = useState([]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(Game_Query);\n  var temp_arr = [];\n  useEffect(() => {\n    if (!loading) {\n      setGameHeader(data['scoreboard']['gameHeader']);\n      setLineScore(data['scoreboard']['lineScore']);\n    }\n  }, [data]);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  console.log(gameHeader);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"gameDashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Date\",\n      children: \" Today's Games \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"../../Assets/Images/avatar.png\"),\n        style: {\n          height: '100px',\n          width: '100px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"../../Assets/Images/avatar.png\"),\n        style: {\n          height: '100px',\n          width: '100px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Games, \"h1WeBhKKcRKTTx9MvU1Vzdba5j0=\", false, function () {\n  return [useQuery];\n});\n\n_c = Games;\nexport default Games;\n\nvar _c;\n\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Games/Games.js"],"names":["React","useEffect","useState","useQuery","gql","Game_Query","Games","gameHeader","setGameHeader","lineScore","setLineScore","loading","error","data","temp_arr","message","console","log","require","height","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAEA,MAAMC,UAAU,GAAGD,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3CA;;AA6CA,SAASE,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM;AAAES,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACE,UAAD,CAAzC;AAEA,MAAIS,QAAQ,GAAG,EAAf;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACU,OAAL,EAAc;AACVH,MAAAA,aAAa,CAACK,IAAI,CAAC,YAAD,CAAJ,CAAmB,YAAnB,CAAD,CAAb;AACAH,MAAAA,YAAY,CAACG,IAAI,CAAC,YAAD,CAAJ,CAAmB,WAAnB,CAAD,CAAZ;AACH;AACJ,GALQ,EAKN,CAACA,IAAD,CALM,CAAT;AAMA,MAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACG,OAAQ,EAA/B;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AAEA,sBACI;AAAS,IAAA,SAAS,EAAG,eAArB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAG,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAG,eAAjB;AAAA,8BACI;AAAK,QAAA,GAAG,EAAIW,OAAO,CAAC,gCAAD,CAAnB;AAAuD,QAAA,KAAK,EAAI;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBC,UAAAA,KAAK,EAAE;AAAzB;AAAhE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,GAAG,EAAIF,OAAO,CAAC,gCAAD,CAAnB;AAAuD,QAAA,KAAK,EAAI;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBC,UAAAA,KAAK,EAAE;AAAzB;AAAhE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA7BQd,K;UAI4BH,Q;;;KAJ5BG,K;AA+BT,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst Game_Query = gql`\n    query GameQuery {\n        scoreboard {\n            gameHeader {\n                gameDateEst\n                gameSequence\n                gameId\n                gameStatusId\n                gameStatusText\n                gamecode\n                homeTeamId\n                visitorTeamId\n                season\n                livePeriod\n                livePcTime\n                livePeriodTimeBcast\n            }\n            lineScore {\n                gameDateEst\n                gameSequence\n                gameId\n                teamId\n                teamAbbreviation\n                teamCityName\n                teamWinsLosses\n                ptsQtr1\n                ptsQtr2\n                ptsQtr3\n                ptsQtr4\n                ptsOt1\n                ptsOt2\n                ptsOt3\n                ptsOt4\n                pts\n                fgPct\n                ftPct\n                fg3Pct\n                ast\n                reb\n                tov\n            }\n        }\n    }\t\n`\n\nfunction Games() {\n    const [gameHeader, setGameHeader] = useState([]);\n    const [lineScore, setLineScore] = useState([]);\n\n    const { loading, error, data } = useQuery(Game_Query);\n    \n    var temp_arr = []\n    useEffect(() => {\n        if (!loading) {\n            setGameHeader(data['scoreboard']['gameHeader'])\n            setLineScore(data['scoreboard']['lineScore'])\n        }\n    }, [data]);\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    console.log(gameHeader)\n\n    return (\n        <section className = \"gameDashboard\">\n            <h1 className = \"Date\"> Today's Games </h1>\n\n            <div className = \"gameContainer\">\n                <img src = {require(\"../../Assets/Images/avatar.png\")} style = {{height: '100px', width: '100px'}}></img>\n                <img src = {require(\"../../Assets/Images/avatar.png\")} style = {{height: '100px', width: '100px'}}></img>\n                <p> {} </p>\n            </div>\n        </section>\n    )\n}\n\nexport default Games\n"]},"metadata":{},"sourceType":"module"}