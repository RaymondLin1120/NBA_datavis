{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/CirclePacking.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nconst data = {\n  name: \"A1\",\n  children: [{\n    name: \"B1\",\n    children: [{\n      name: \"C1\",\n      value: 100\n    }, {\n      name: \"C2\",\n      value: 300\n    }, {\n      name: \"C3\",\n      value: 200\n    }]\n  }, {\n    name: \"B2\",\n    value: 200\n  }]\n};\n\nfunction CirclePacking() {\n  _s();\n\n  const [data, setData] = useState();\n  const svgRef = useRef();\n  useEffect(() => {\n    setData(data);\n    const svg = d3.select(svgRef.current);\n    var diameter = 300;\n    var packLayout = d3.pack().size([diameter, diameter]).padding(1.5);\n    var rootNode = d3.hierarchy(data);\n    console.log(data);\n    rootNode.sum(function (d) {\n      return d.value;\n    }); // const myLine = d3.line()\n    //     .x((value, index) => index * 50)\n    //     .y(value => 150 - value)\n\n    svg.attr(\"width\", diameter).attr(\"height\", diameter).attr(\"class\", \"packingLayout\");\n    packLayout(rootNode);\n    svg.selectAll('circle').join('g').data(rootNode.descendants()).enter().append('circle').attr('cx', d => d.x).attr('cy', d => d.y).attr('r', d => d.r).attr('fill', 'red'); // svg.selectAll(\"path\")\n    //     .data([data])\n    //     .join(\"path\")\n    //     .attr(\"d\", value => myLine(value))\n    //     .attr(\"fill\", \"none\")\n    //     .attr(\"stroke\", \"red\")\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CirclePacking, \"eh52KZoV+UbjRRIA4u86q0In74g=\");\n\n_c = CirclePacking;\nexport default CirclePacking;\n\nvar _c;\n\n$RefreshReg$(_c, \"CirclePacking\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/CirclePacking.js"],"names":["React","useRef","useState","useEffect","d3","data","name","children","value","CirclePacking","setData","svgRef","svg","select","current","diameter","packLayout","pack","size","padding","rootNode","hierarchy","console","log","sum","d","attr","selectAll","join","descendants","enter","append","x","y","r"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAGA,MAAMC,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAE,IADG;AAETC,EAAAA,QAAQ,EAAE,CACR;AACED,IAAAA,IAAI,EAAE,IADR;AAEEC,IAAAA,QAAQ,EAAE,CACR;AACED,MAAAA,IAAI,EAAE,IADR;AAEEE,MAAAA,KAAK,EAAE;AAFT,KADQ,EAKR;AACEF,MAAAA,IAAI,EAAE,IADR;AAEEE,MAAAA,KAAK,EAAE;AAFT,KALQ,EASR;AACEF,MAAAA,IAAI,EAAE,IADR;AAEEE,MAAAA,KAAK,EAAE;AAFT,KATQ;AAFZ,GADQ,EAkBR;AACEF,IAAAA,IAAI,EAAE,IADR;AAEEE,IAAAA,KAAK,EAAE;AAFT,GAlBQ;AAFD,CAAb;;AA2BA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM,CAACJ,IAAD,EAAOK,OAAP,IAAkBR,QAAQ,EAAhC;AACA,QAAMS,MAAM,GAAGV,MAAM,EAArB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACL,IAAD,CAAP;AACA,UAAMO,GAAG,GAAGR,EAAE,CAACS,MAAH,CAAUF,MAAM,CAACG,OAAjB,CAAZ;AACA,QAAIC,QAAQ,GAAG,GAAf;AACA,QAAIC,UAAU,GAAGZ,EAAE,CAACa,IAAH,GACZC,IADY,CACP,CAACH,QAAD,EAAWA,QAAX,CADO,EAEZI,OAFY,CAEJ,GAFI,CAAjB;AAIA,QAAIC,QAAQ,GAAGhB,EAAE,CAACiB,SAAH,CAAahB,IAAb,CAAf;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AACAe,IAAAA,QAAQ,CAACI,GAAT,CAAa,UAASC,CAAT,EAAY;AACrB,aAAOA,CAAC,CAACjB,KAAT;AACH,KAFD,EAVY,CAcZ;AACA;AACA;;AAEAI,IAAAA,GAAG,CAACc,IAAJ,CAAS,OAAT,EAAkBX,QAAlB,EACKW,IADL,CACU,QADV,EACoBX,QADpB,EAEKW,IAFL,CAEU,OAFV,EAEmB,eAFnB;AAICV,IAAAA,UAAU,CAACI,QAAD,CAAV;AAEDR,IAAAA,GAAG,CAACe,SAAJ,CAAc,QAAd,EAAwBC,IAAxB,CAA6B,GAA7B,EACKvB,IADL,CACUe,QAAQ,CAACS,WAAT,EADV,EAEKC,KAFL,GAGKC,MAHL,CAGY,QAHZ,EAIKL,IAJL,CAIU,IAJV,EAIgBD,CAAC,IAAIA,CAAC,CAACO,CAJvB,EAKKN,IALL,CAKU,IALV,EAKgBD,CAAC,IAAIA,CAAC,CAACQ,CALvB,EAMKP,IANL,CAMU,GANV,EAMeD,CAAC,IAAIA,CAAC,CAACS,CANtB,EAOKR,IAPL,CAOU,MAPV,EAOkB,KAPlB,EAxBY,CAgCZ;AACA;AACA;AACA;AACA;AACA;AAEH,GAvCQ,EAuCP,EAvCO,CAAT;AAyCA,sBACI;AAAK,IAAA,GAAG,EAAIf,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAhDQF,a;;KAAAA,a;AAkDT,eAAeA,aAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\nimport * as d3 from 'd3'\n\n\nconst data = {\n    name: \"A1\",\n    children: [\n      {\n        name: \"B1\",\n        children: [\n          {\n            name: \"C1\",\n            value: 100\n          },\n          {\n            name: \"C2\",\n            value: 300\n          },\n          {\n            name: \"C3\",\n            value: 200\n          }\n        ]\n      },\n      {\n        name: \"B2\",\n        value: 200\n      }\n    ]\n  };\n\nfunction CirclePacking() {\n    const [data, setData] = useState()\n    const svgRef = useRef()\n\n    useEffect(() => {\n        setData(data)\n        const svg = d3.select(svgRef.current)\n        var diameter = 300\n        var packLayout = d3.pack()\n            .size([diameter, diameter])\n            .padding(1.5);\n\n        var rootNode = d3.hierarchy(data)\n        console.log(data)\n        rootNode.sum(function(d) {\n            return d.value;\n        });   \n\n        // const myLine = d3.line()\n        //     .x((value, index) => index * 50)\n        //     .y(value => 150 - value)\n\n        svg.attr(\"width\", diameter)\n            .attr(\"height\", diameter)\n            .attr(\"class\", \"packingLayout\")\n        \n         packLayout(rootNode);\n\n        svg.selectAll('circle').join('g')\n            .data(rootNode.descendants())\n            .enter()\n            .append('circle')\n            .attr('cx', d => d.x)\n            .attr('cy', d => d.y)\n            .attr('r', d => d.r)\n            .attr('fill', 'red')\n        // svg.selectAll(\"path\")\n        //     .data([data])\n        //     .join(\"path\")\n        //     .attr(\"d\", value => myLine(value))\n        //     .attr(\"fill\", \"none\")\n        //     .attr(\"stroke\", \"red\")\n\n    },[])\n\n    return (\n        <svg ref = {svgRef}> </svg>\n    )\n}\n\nexport default CirclePacking\n"]},"metadata":{},"sourceType":"module"}