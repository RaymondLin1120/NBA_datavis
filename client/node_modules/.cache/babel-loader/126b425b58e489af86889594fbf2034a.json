{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Boxscores.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTable, usePagination } from 'react-table';\nconst columns = [{\n  Header: 'Date',\n  accessor: 'date'\n}, {\n  Header: 'Matchup',\n  accessor: 'matchup'\n}, {\n  Header: 'Result',\n  accessor: 'wl'\n}, {\n  Header: 'FG%',\n  accessor: 'fgPct'\n}, {\n  Header: 'FG3%',\n  accessor: 'fg3Pct'\n}, {\n  Header: 'FT%',\n  accessor: 'ftPct'\n}, {\n  Header: 'MIN',\n  accessor: 'min'\n}, {\n  Header: 'REB',\n  accessor: 'reb'\n}, {\n  Header: 'AST',\n  accessor: 'ast'\n}, {\n  Header: 'BLK',\n  accessor: 'blk'\n}, {\n  Header: 'STL',\n  accessor: 'stl'\n}, {\n  Header: 'TOV',\n  accessor: 'tov'\n}, {\n  Header: 'PF',\n  accessor: 'pf'\n}, {\n  Header: 'PTS',\n  accessor: 'pts'\n}];\n\nfunction Table({\n  columns,\n  data\n}) {\n  _s();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 1\n    }\n  }, usePagination); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: page.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 26\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(0),\n        disabled: !canPreviousPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(pageCount - 1),\n        disabled: !canNextPage,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"| Go to page:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: pageIndex,\n          onChange: e => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(page);\n          },\n          style: {\n            width: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pageSize,\n        onChange: e => {\n          setPageSize(Number(e.target.value));\n        },\n        children: [10, 20, 30, 40, 50].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: pageSize,\n          children: [\"Show \", pageSize]\n        }, pageSize, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Table, \"IOEwB9uQfgo4/Ofml2U21jQH4yg=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nfunction Boxscores(data) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Boxscores;\nexport default Boxscores;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"Boxscores\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Boxscores.js"],"names":["React","useTable","usePagination","columns","Header","accessor","Table","data","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","length","e","target","value","Number","width","Boxscores"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTable, usePagination } from 'react-table';\n\nconst columns = [\n    {\n        Header: 'Date',\n        accessor: 'date'\n    },\n    {\n        Header: 'Matchup',\n        accessor: 'matchup'\n    },\n    {\n        Header: 'Result',\n        accessor: 'wl'\n    },\n    {\n        Header: 'FG%',\n        accessor: 'fgPct'\n    },\n    {\n        Header: 'FG3%',\n        accessor: 'fg3Pct'\n    },\n    {\n        Header: 'FT%',\n        accessor: 'ftPct'\n    },\n    {\n        Header: 'MIN',\n        accessor: 'min'\n    },\n    {\n        Header: 'REB',\n        accessor: 'reb'\n    },\n    {\n        Header: 'AST',\n        accessor: 'ast'\n    },\n    {\n        Header: 'BLK',\n        accessor: 'blk'\n    },\n    {\n        Header: 'STL',\n        accessor: 'stl'\n    },\n    {\n        Header: 'TOV',\n        accessor: 'tov'\n    },\n    {\n        Header: 'PF',\n        accessor: 'pf'\n    },\n    {\n        Header: 'PTS',\n        accessor: 'pts'\n    }\n]\n\nfunction Table({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page, // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 1 },\n    },\n    usePagination\n  )\n\n  // Render the UI for your table\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n      {/* \n        Pagination can be built however you'd like. \n        This is just a very basic UI implementation:\n      */}\n      <div className=\"pagination\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>{' '}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>{' '}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>{' '}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>{' '}\n        <span>\n          Page{' '}\n          <strong>\n            {pageIndex} of {pageOptions.length}\n          </strong>{' '}\n        </span>\n        <span>\n          | Go to page:{' '}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex}\n            onChange={e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              gotoPage(page)\n            }}\n            style={{ width: '100px' }}\n          />\n        </span>{' '}\n        <select\n          value={pageSize}\n          onChange={e => {\n            setPageSize(Number(e.target.value))\n          }}\n        >\n          {[10, 20, 30, 40, 50].map(pageSize => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n    </>\n  )\n}\n\nfunction Boxscores(data) {\n    return (\n        <div>\n            <Table columns={columns} data={data.data} /> \n        </div>\n    )\n}\n\nexport default Boxscores\n"]},"metadata":{},"sourceType":"module"}