{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/src/Pages/Player.js\";\nimport React from 'react'; // var axios = require(\"axios\").default;\n// var options = {\n//   method: 'GET',\n//   url: 'https://api-nba-v1.p.rapidapi.com/players/lastName/Harden',\n//   headers: {\n//     'x-rapidapi-key': '7cc3303549msh7c215b7aaf9bc90p1bda16jsn74307815300f',\n//     'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n//   }\n// };\n// let playerData;\n// axios.request(options).then(function (response) {\n//     console.log(JSON.stringify(response.data))\n//     playerData = response.data\n// }).catch(function (error) {\n// \tconsole.error(error);\n// });\n\nconst NBA = require(\"nba\");\n\nconst curry = NBA.findPlayer('James Harden');\nconsole.log(curry);\n/* logs the following:\n{\n  firstName: 'Stephen',\n  lastName: 'Curry',\n  playerId: 201939,\n  teamId: 1610612744,\n  fullName: 'Stephen Curry',\n  downcaseName: 'stephen curry'\n}\n*/\n\nconst data = NBA.stats.playerProfile({\n  PlayerID: curry.playerId\n});\nconst data1 = NBA.stats.scoreboard({\n  LeagueID: \"00\"\n});\nconsole.log();\ndata.then(function (result) {\n  console.log(result); // \"Some User token\"\n}); // here we are getting stats for the WNBA!\n\nconst nba = require(\"nba\");\n\nconst getJSON = require(\"nba/src/get-json\"); // for the G League, try \"stats.gleague.nba.com\"\n\n\nconst newHost = \"stats.wnba.com\";\n\nconst transport = (url, params, options) => {\n  // simply swap the host and then defer the rest to the built in getJSON function\n  const fixedURL = url.replace(\"stats.nba.com\", \"stats.wnba.com\");\n  return getJSON(fixedURL, params, options);\n}; // create a new stats client here with our WNBA transport\n\n\nconst wnbaStats = nba.stats.withTransport(transport);\n\n(async () => {\n  const result = await wnbaStats.playerInfo({\n    PlayerID: \"1628886\"\n  });\n  console.log(result);\n})();\n\nfunction Player() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/src/Pages/Player.js"],"names":["React","NBA","require","curry","findPlayer","console","log","data","stats","playerProfile","PlayerID","playerId","data1","scoreboard","LeagueID","then","result","nba","getJSON","newHost","transport","url","params","options","fixedURL","replace","wnbaStats","withTransport","playerInfo","Player"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMC,KAAK,GAAGF,GAAG,CAACG,UAAJ,CAAe,cAAf,CAAd;AACAC,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMI,IAAI,GAAGN,GAAG,CAACO,KAAJ,CAAUC,aAAV,CAAwB;AAAEC,EAAAA,QAAQ,EAAEP,KAAK,CAACQ;AAAlB,CAAxB,CAAb;AACA,MAAMC,KAAK,GAAGX,GAAG,CAACO,KAAJ,CAAUK,UAAV,CAAqB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAArB,CAAd;AAEAT,OAAO,CAACC,GAAR;AACAC,IAAI,CAACQ,IAAL,CAAU,UAASC,MAAT,EAAiB;AACvBX,EAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ,EADuB,CACH;AACtB,CAFF,E,CAIA;;AAEA,MAAMC,GAAG,GAAGf,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMgB,OAAO,GAAGhB,OAAO,CAAC,kBAAD,CAAvB,C,CAEA;;;AACA,MAAMiB,OAAO,GAAG,gBAAhB;;AAEA,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAcC,OAAd,KAA0B;AAC1C;AACA,QAAMC,QAAQ,GAAGH,GAAG,CAACI,OAAJ,CAAY,eAAZ,EAA6B,gBAA7B,CAAjB;AACA,SAAOP,OAAO,CAACM,QAAD,EAAWF,MAAX,EAAmBC,OAAnB,CAAd;AACD,CAJD,C,CAMA;;;AACA,MAAMG,SAAS,GAAGT,GAAG,CAACT,KAAJ,CAAUmB,aAAV,CAAwBP,SAAxB,CAAlB;;AAEA,CAAC,YAAY;AACX,QAAMJ,MAAM,GAAG,MAAMU,SAAS,CAACE,UAAV,CAAqB;AAAElB,IAAAA,QAAQ,EAAE;AAAZ,GAArB,CAArB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ;AACD,CAHD;;AAIA,SAASa,MAAT,GAAkB;AACd,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KANQA,M;AAQT,eAAeA,MAAf","sourcesContent":["import React from 'react'\n\n// var axios = require(\"axios\").default;\n\n// var options = {\n//   method: 'GET',\n//   url: 'https://api-nba-v1.p.rapidapi.com/players/lastName/Harden',\n//   headers: {\n//     'x-rapidapi-key': '7cc3303549msh7c215b7aaf9bc90p1bda16jsn74307815300f',\n//     'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n//   }\n// };\n\n// let playerData;\n// axios.request(options).then(function (response) {\n//     console.log(JSON.stringify(response.data))\n//     playerData = response.data\n// }).catch(function (error) {\n// \tconsole.error(error);\n// });\nconst NBA = require(\"nba\");\nconst curry = NBA.findPlayer('James Harden');\nconsole.log(curry);\n/* logs the following:\n{\n  firstName: 'Stephen',\n  lastName: 'Curry',\n  playerId: 201939,\n  teamId: 1610612744,\n  fullName: 'Stephen Curry',\n  downcaseName: 'stephen curry'\n}\n*/\nconst data = NBA.stats.playerProfile({ PlayerID: curry.playerId })\nconst data1 = NBA.stats.scoreboard({ LeagueID: \"00\" })\n\nconsole.log()\ndata.then(function(result) {\n    console.log(result) // \"Some User token\"\n })\n\n// here we are getting stats for the WNBA!\n\nconst nba = require(\"nba\");\nconst getJSON = require(\"nba/src/get-json\");\n\n// for the G League, try \"stats.gleague.nba.com\"\nconst newHost = \"stats.wnba.com\";\n\nconst transport = (url, params, options) => {\n  // simply swap the host and then defer the rest to the built in getJSON function\n  const fixedURL = url.replace(\"stats.nba.com\", \"stats.wnba.com\");\n  return getJSON(fixedURL, params, options);\n};\n\n// create a new stats client here with our WNBA transport\nconst wnbaStats = nba.stats.withTransport(transport);\n\n(async () => {\n  const result = await wnbaStats.playerInfo({ PlayerID: \"1628886\" });\n  console.log(result);\n})();\nfunction Player() {\n    return (\n        <div>\n            <p>test</p>\n        </div>\n    )\n}\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}