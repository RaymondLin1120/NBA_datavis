{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from '../Components/Graphing/RadarStats';\nconst Player_Query = gql`\n    query PlayerQuery {\n        historicStats {\n            seasonId\n            pts\n            reb\n            ast\n            fG3M\n            stl\n            blk\n        }\n    }\n`;\n\nconst GetPlayerData = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(Player_Query);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (error) {\n    console.error(error);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Player, {\n    data: data.historicStats\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n  console.log(data.historicStats);\n};\n\n_s(GetPlayerData, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = GetPlayerData;\n\nfunction Player(props) {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  const [seasonStats, setSeasonStats] = useState([]);\n  const [playerStats, setPlayerStats] = useState([]);\n  useEffect(_s2(() => {\n    _s2();\n\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(Player_Query);\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, this);\n    }\n\n    if (error) {\n      console.error(error);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Player, {\n      data: data.historicStats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n    console.log(data.historicStats); //     axios.get(\"http://localhost:8080/player\")\n    //     .then((data) => {\n    //         setPlayerStats(data.data)\n    //         // setSeasonStats(data.data.seasonTotalsRegularSeason.filter((item) =>\n    //         //     (item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\") || \n    //         //      item.seasonId !== \"2020-21\"\n    //         // ))\n    //     })\n  }, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  }), []);\n  console.log(seasonStats); // // const arr = [\n  // //     {\n  // //         fgPct:{subject:\"Field-Goal-%\"},\n  // //         //pg3Pct:{subject:\"3s-%\"},\n  // //         ftPct:{subject:\"Free-Throw-%\"},\n  // //         fG3M:{subject:\"3s-%\"},\n  // //         pts:{subject:\"Points\"},\n  // //         min:{subject:\"Minutes\"},\n  // //         reb:{subject:\"Rebounds\"},\n  // //         ast:{subject:\"Assists\"},\n  // //         stl:{subject:\"Steals\"},\n  // //         blk:{subject:\"Blocks\"},\n  // //         tov:{subject:\"Turnovers\"}\n  // //     }   \n  // // ]\n  // //console.log(Object.keys(seasonStats[0]))\n  // // seasonStats.map((item, key) => (\n  // //     //arr[0].min[item.seasonId] = item.min,\n  // //     arr[0].fgPct[item.seasonId] = item.fgPct,\n  // //     arr[0].ftPct[item.seasonId] = item.ftPct,\n  // //     arr[0].fG3M[item.seasonId] = item.fG3M,\n  // //     //arr[0].pts[item.seasonId] = item.pts,\n  // //     arr[0].reb[item.seasonId] = item.reb,\n  // //     arr[0].ast[item.seasonId] = item.ast,\n  // //     arr[0].stl[item.seasonId] = item.stl,\n  // //     arr[0].blk[item.seasonId] = item.blk,\n  // //     arr[0].tov[item.seasonId] = item.tov\n  // // ))\n  // var temp_arr = []\n  // // for (const [key, value] of Object.entries(arr[0])) {\n  // //     console.log(`key: ${key}, value: ${value}`)\n  // //     // temp_arr.push(arr[`${key}`])\n  // //     temp_arr.push(arr[0][`${key}`])\n  // // }\n  // //console.log(seasonStats)\n  // seasonStats.map((item) => (\n  //     temp_arr.push({\n  //         seasonId: item.seasonId,\n  //         fgPct: item.fgPct,\n  //         ftPct: item.ftPct,\n  //         fG3M: item.fG3M,\n  //         pts:item.pts,\n  //         min: item.min,\n  //         reb: item.reb,\n  //         ast: item.ast,\n  //         stl: item.stl,\n  //         blk: item.blk,\n  //         tov: item.tov\n  //     })\n  // ))\n  // console.log(temp_arr)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(Player, \"Fk3hVPAhOoESl5ue+x44170+VJo=\");\n\n_c2 = Player;\nexport default Player;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetPlayerData\");\n$RefreshReg$(_c2, \"Player\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player.js"],"names":["React","useEffect","useState","useQuery","gql","RadarStats","Player_Query","GetPlayerData","loading","error","data","console","historicStats","log","Player","props","seasonStats","setSeasonStats","playerStats","setPlayerStats"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AAGA,MAAMC,YAAY,GAAGF,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAcA,MAAMG,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACG,YAAD,CAAzC;;AAEA,MAAIE,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIC,KAAJ,EAAW;AACTE,IAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBAAO,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAEC,IAAI,CAACE;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACAD,EAAAA,OAAO,CAACE,GAAR,CAAYH,IAAI,CAACE,aAAjB;AACD,CAZH;;GAAML,a;UAC+BJ,Q;;;KAD/BI,a;;AAcN,SAASO,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAAA;;AACnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AAECD,EAAAA,SAAS,KAAC,MAAM;AAAA;;AACb,UAAM;AAAEO,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAA2BP,QAAQ,CAACG,YAAD,CAAzC;;AAEA,QAAIE,OAAJ,EAAa;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,QAAIC,KAAJ,EAAW;AACTE,MAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBAAO,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEC,IAAI,CAACE;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACAD,IAAAA,OAAO,CAACE,GAAR,CAAYH,IAAI,CAACE,aAAjB,EAXa,CAYjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,GApBQ;AAAA,YAC2BT,QAD3B;AAAA,MAoBN,EApBM,CAAT;AAqBAQ,EAAAA,OAAO,CAACE,GAAR,CAAYG,WAAZ,EAzBkB,CA0BnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IAvFQF,M;;MAAAA,M;AAyFT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from '../Components/Graphing/RadarStats'\n\n\nconst Player_Query = gql`\n    query PlayerQuery {\n        historicStats {\n            seasonId\n            pts\n            reb\n            ast\n            fG3M\n            stl\n            blk\n        }\n    }\n`\n\nconst GetPlayerData = () => {\n    const { loading, error, data } = useQuery(Player_Query);\n  \n    if (loading) {\n      return <div>Loading...</div>;\n    }\n    if (error) {\n      console.error(error);\n      return <div>Error!</div>;\n    }\n    return <Player data={data.historicStats} />;\n    console.log(data.historicStats)\n  };\n\nfunction Player(props) {\n    const [seasonStats, setSeasonStats] = useState([])\n    const [playerStats, setPlayerStats] = useState([])\n    \n     useEffect(() => {\n        const { loading, error, data } = useQuery(Player_Query);\n  \n        if (loading) {\n          return <div>Loading...</div>;\n        }\n        if (error) {\n          console.error(error);\n          return <div>Error!</div>;\n        }\n        return <Player data={data.historicStats} />;\n        console.log(data.historicStats)\n    //     axios.get(\"http://localhost:8080/player\")\n    //     .then((data) => {\n    //         setPlayerStats(data.data)\n    //         // setSeasonStats(data.data.seasonTotalsRegularSeason.filter((item) =>\n    //         //     (item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\") || \n    //         //      item.seasonId !== \"2020-21\"\n    //         // ))\n    //     })\n     }, []);\n     console.log(seasonStats)\n    // // const arr = [\n    // //     {\n    // //         fgPct:{subject:\"Field-Goal-%\"},\n    // //         //pg3Pct:{subject:\"3s-%\"},\n    // //         ftPct:{subject:\"Free-Throw-%\"},\n    // //         fG3M:{subject:\"3s-%\"},\n    // //         pts:{subject:\"Points\"},\n    // //         min:{subject:\"Minutes\"},\n    // //         reb:{subject:\"Rebounds\"},\n    // //         ast:{subject:\"Assists\"},\n    // //         stl:{subject:\"Steals\"},\n    // //         blk:{subject:\"Blocks\"},\n    // //         tov:{subject:\"Turnovers\"}\n    // //     }   \n    // // ]\n\n    // //console.log(Object.keys(seasonStats[0]))\n\n    // // seasonStats.map((item, key) => (\n    // //     //arr[0].min[item.seasonId] = item.min,\n    // //     arr[0].fgPct[item.seasonId] = item.fgPct,\n    // //     arr[0].ftPct[item.seasonId] = item.ftPct,\n    // //     arr[0].fG3M[item.seasonId] = item.fG3M,\n    // //     //arr[0].pts[item.seasonId] = item.pts,\n    // //     arr[0].reb[item.seasonId] = item.reb,\n    // //     arr[0].ast[item.seasonId] = item.ast,\n    // //     arr[0].stl[item.seasonId] = item.stl,\n    // //     arr[0].blk[item.seasonId] = item.blk,\n    // //     arr[0].tov[item.seasonId] = item.tov\n    // // ))\n\n    // var temp_arr = []\n    // // for (const [key, value] of Object.entries(arr[0])) {\n    // //     console.log(`key: ${key}, value: ${value}`)\n    // //     // temp_arr.push(arr[`${key}`])\n    // //     temp_arr.push(arr[0][`${key}`])\n    // // }\n    // //console.log(seasonStats)\n    // seasonStats.map((item) => (\n    //     temp_arr.push({\n    //         seasonId: item.seasonId,\n    //         fgPct: item.fgPct,\n    //         ftPct: item.ftPct,\n    //         fG3M: item.fG3M,\n    //         pts:item.pts,\n    //         min: item.min,\n    //         reb: item.reb,\n    //         ast: item.ast,\n    //         stl: item.stl,\n    //         blk: item.blk,\n    //         tov: item.tov\n    //     })\n    // ))\n\n    // console.log(temp_arr)\n\n    return (\n        <div>\n            {/* <RadarStats config = {temp_arr.slice(temp_arr.length - 3, temp_arr.length)}/> */}\n        </div>\n    )\n}\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}