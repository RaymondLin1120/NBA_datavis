{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/CirclePacking.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nconst data1 = {\n  \"name\": \"flare\",\n  \"children\": [{\n    \"name\": \"analytics\",\n    \"children\": [{\n      \"name\": \"cluster\",\n      \"children\": [{\n        \"name\": \"AgglomerativeCluster\",\n        \"size\": 3938\n      }, {\n        \"name\": \"CommunityStructure\",\n        \"size\": 3812\n      }, {\n        \"name\": \"MergeEdge\",\n        \"size\": 743\n      }]\n    }, {\n      \"name\": \"graph\",\n      \"children\": [{\n        \"name\": \"BetweennessCentrality\",\n        \"size\": 3534\n      }, {\n        \"name\": \"LinkDistance\",\n        \"size\": 5731\n      }]\n    }]\n  }]\n};\n\nfunction CirclePacking() {\n  _s();\n\n  const [data, setData] = useState(data1);\n  const svgRef = useRef();\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    var root = d3.hierarchy(data).count().sort((a, b) => b.value - a.value);\n    var packLayout = d3.pack().size([932, 932]).padding(5);\n    packLayout(root);\n    var color = d3.scaleLinear().domain([0, 5]).range([\"hsl(152,80%,80%)\", \"hsl(228,30%,40%)\"]).interpolate(d3.interpolateHcl);\n    svg.attr(\"width\", 932).attr(\"height\", 932).attr(\"class\", \"packLayout\");\n    svg.selectAll(\"g\").append('g').data(root.descendants().slice(1)).enter().append('circle').attr('cx', function (d) {\n      return d.x;\n    }).attr('cy', function (d) {\n      return d.y;\n    }).attr('r', function (d) {\n      return d.r;\n    }).on(\"mouseover\", function () {\n      d3.select(this).attr(\"stroke\", \"#000\");\n    }).on(\"mouseout\", function () {\n      d3.select(this).attr(\"stroke\", null);\n    }).attr(\"fill\", \"blue\").attr('stroke', 'white'); // svg.selectAll(\"path\")\n    //     .data([data])\n    //     .join(\"path\")\n    //     .attr(\"d\", value => myLine(value))\n    //     .attr(\"fill\", \"none\")\n    //     .attr(\"stroke\", \"red\")\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"circPack\",\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CirclePacking, \"KMgTrjezITbmE5ElKm25tkJ8Y1A=\");\n\n_c = CirclePacking;\nexport default CirclePacking;\n\nvar _c;\n\n$RefreshReg$(_c, \"CirclePacking\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/CirclePacking.js"],"names":["React","useRef","useState","useEffect","d3","data1","CirclePacking","data","setData","svgRef","svg","select","current","root","hierarchy","count","sort","a","b","value","packLayout","pack","size","padding","color","scaleLinear","domain","range","interpolate","interpolateHcl","attr","selectAll","append","descendants","slice","enter","d","x","y","r","on"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\nimport * as d3 from 'd3'\n\nconst data1 = {\n    \"name\": \"flare\",\n    \"children\": [\n     {\n      \"name\": \"analytics\",\n      \"children\": [\n       {\n        \"name\": \"cluster\",\n        \"children\": [\n         {\"name\": \"AgglomerativeCluster\", \"size\": 3938},\n         {\"name\": \"CommunityStructure\", \"size\": 3812},\n         {\"name\": \"MergeEdge\", \"size\": 743}\n        ]\n       },\n       {\n        \"name\": \"graph\",\n        \"children\": [\n         {\"name\": \"BetweennessCentrality\", \"size\": 3534},\n         {\"name\": \"LinkDistance\", \"size\": 5731}\n        ]\n       }\n      ]\n     }\n    ]\n   }\n\nfunction CirclePacking() {\n    \n    const [data, setData] = useState(data1)\n    const svgRef = useRef()\n    \n    useEffect(() => {\n        const svg = d3.select(svgRef.current)\n\n        var root = d3.hierarchy(data)\n                    .count()\n                    .sort((a,b) => b.value - a.value);\n\n        var packLayout = d3.pack()\n            .size([932, 932])\n            .padding(5)\n\n        packLayout(root)\n        var color = d3.scaleLinear()\n            .domain([0, 5])\n            .range([\"hsl(152,80%,80%)\", \"hsl(228,30%,40%)\"])\n            .interpolate(d3.interpolateHcl)\n\n        svg.attr(\"width\", 932)\n            .attr(\"height\", 932)\n            .attr(\"class\", \"packLayout\")\n\n            svg.selectAll(\"g\").append('g')\n            .data(root.descendants().slice(1))\n            .enter()\n            .append('circle')\n            .attr('cx', function(d) { return d.x; })\n            .attr('cy', function(d) { return d.y; })\n            .attr('r', function(d) { return d.r; })\n            .on(\"mouseover\", function() { d3.select(this).attr(\"stroke\", \"#000\"); })\n            .on(\"mouseout\", function() { d3.select(this).attr(\"stroke\", null); })\n            .attr(\"fill\", \"blue\")\n            .attr('stroke', 'white');\n\n        // svg.selectAll(\"path\")\n        //     .data([data])\n        //     .join(\"path\")\n        //     .attr(\"d\", value => myLine(value))\n        //     .attr(\"fill\", \"none\")\n        //     .attr(\"stroke\", \"red\")\n\n    },[])\n    return (\n        <svg className=\"circPack\" ref = {svgRef}></svg>\n    )\n}\n\nexport default CirclePacking\n"]},"metadata":{},"sourceType":"module"}