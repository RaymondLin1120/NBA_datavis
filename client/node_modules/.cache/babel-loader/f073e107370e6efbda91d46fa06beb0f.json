{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloProvider as ApolloHooksProvider } from \"react-apollo-hooks\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { setContext } from \"apollo-link-context\";\nimport { withApollo } from \"react-apollo\";\nimport Home from './Pages/Home';\nimport Player from './Pages/Player';\nimport reportWebVitals from './reportWebVitals';\nimport './App.css';\nimport './Assets/scss/base.scss';\nconst AUTH_TOKEN = \"auth-token\";\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:8080/graphql'\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem(AUTH_TOKEN);\n\n  if (!token) {\n    return {\n      headers\n    };\n  }\n\n  return {\n    headers: { ...headers,\n      authorization: `Bearer ${token}`\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(ApolloHooksProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/index.js"],"names":["React","ReactDOM","App","ApolloProvider","ApolloHooksProvider","ApolloClient","createHttpLink","InMemoryCache","setContext","withApollo","Home","Player","reportWebVitals","AUTH_TOKEN","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASA,cAAc,IAAIC,mBAA3B,QAAsD,oBAAtD;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,WAAP;AACA,OAAO,yBAAP;AAEA,MAAMC,UAAU,GAAG,YAAnB;AAEA,MAAMC,QAAQ,GAAGR,cAAc,CAAC;AAC9BS,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,QAAQ,GAAGR,UAAU,CAAC,CAACS,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC9C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBR,UAArB,CAAd;;AAEA,MAAI,CAACM,KAAL,EAAY;AACV,WAAO;AACLD,MAAAA;AADK,KAAP;AAGD;;AAED,SAAO;AACLA,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPI,MAAAA,aAAa,EAAG,UAASH,KAAM;AAFxB;AADJ,GAAP;AAMD,CAf0B,CAA3B;AAiBA,MAAMI,MAAM,GAAG,IAAIlB,YAAJ,CAAiB;AAC9BmB,EAAAA,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CADwB;AAE9BY,EAAAA,KAAK,EAAE,IAAInB,aAAJ;AAFuB,CAAjB,CAAf;AAMAN,QAAQ,CAAC0B,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEJ,MAAxB;AAAA,2BACE,QAAC,mBAAD;AAAqB,MAAA,MAAM,EAAEA,MAA7B;AAAA,6BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAQEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;;AACAjB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloProvider as ApolloHooksProvider } from \"react-apollo-hooks\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { setContext } from \"apollo-link-context\";\nimport { withApollo } from \"react-apollo\";\n\nimport Home from './Pages/Home'\nimport Player from './Pages/Player'\n\nimport reportWebVitals from './reportWebVitals';\nimport './App.css'\nimport './Assets/scss/base.scss'\n\nconst AUTH_TOKEN = \"auth-token\";\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:8080/graphql'\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(AUTH_TOKEN);\n\n  if (!token) {\n    return {\n      headers\n    };\n  }\n\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${token}`\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <ApolloHooksProvider client={client}>\n        <App />\n      </ApolloHooksProvider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}