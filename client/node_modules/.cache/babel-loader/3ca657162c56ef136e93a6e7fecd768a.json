{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Games/Games.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from \"@apollo/client\"; // const Game_Query = gql`\n//     query GameQuery {\n//         scoreboard {\n//             gameHeader {\n//                 gameDateEst\n//                 gameSequence\n//                 gameId\n//                 gameStatusId\n//                 gameStatusText\n//                 gamecode\n//                 homeTeamId\n//                 visitorTeamId\n//                 season\n//                 livePeriod\n//                 livePcTime\n//                 livePeriodTimeBcast\n//             }\n//             lineScore {\n//                 gameDateEst\n//                 gameSequence\n//                 gameId\n//                 teamId\n//                 teamAbbreviation\n//                 teamCityName\n//                 teamWinsLosses\n//                 ptsQtr1\n//                 ptsQtr2\n//                 ptsQtr3\n//                 ptsQtr4\n//                 ptsOt1\n//                 ptsOt2\n//                 ptsOt3\n//                 ptsOt4\n//                 pts\n//                 fgPct\n//                 ftPct\n//                 fg3Pct\n//                 ast\n//                 reb\n//                 tov\n//             }\n//         }\n//     }\t\n// `\n\nfunction Games() {\n  _s();\n\n  const [gameHeader, setGameHeader] = useState([]);\n  const [lineScore, setLineScore] = useState([]);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(Game_Query);\n  var temp_arr = [];\n  useEffect(() => {\n    if (!loading) {\n      setGameHeader(data['scoreboard']['gameHeader']);\n      setLineScore(data['scoreboard']['lineScore']);\n      setDataLoaded(true);\n    }\n  }, [data]);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  console.log(lineScore);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"gameDashboard\",\n    children: [!dataLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 30\n    }, this), dataLoaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Date\",\n        children: \" Today's Games \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(\"../../Assets/Images/avatar.png\"),\n          style: {\n            height: '100px',\n            width: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(\"../../Assets/Images/avatar.png\"),\n          style: {\n            height: '100px',\n            width: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", gameHeader[0]['homeTeamId'], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", gameHeader[0]['visitorTeamId'], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", gameHeader[0]['livePeriodTimeBcast'], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Games, \"U+kVk+3UfVzt77M32Ny+DrszQPU=\", false, function () {\n  return [useQuery];\n});\n\n_c = Games;\nexport default Games;\n\nvar _c;\n\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Games/Games.js"],"names":["React","useEffect","useState","useQuery","gql","Games","gameHeader","setGameHeader","lineScore","setLineScore","dataLoaded","setDataLoaded","loading","error","data","Game_Query","temp_arr","message","console","log","require","height","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACY,UAAD,CAAzC;AAEA,MAAIC,QAAQ,GAAG,EAAf;AACAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACW,OAAL,EAAc;AACVL,MAAAA,aAAa,CAACO,IAAI,CAAC,YAAD,CAAJ,CAAmB,YAAnB,CAAD,CAAb;AACAL,MAAAA,YAAY,CAACK,IAAI,CAAC,YAAD,CAAJ,CAAmB,WAAnB,CAAD,CAAZ;AACAH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GANQ,EAMN,CAACG,IAAD,CANM,CAAT;AAOA,MAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACI,OAAQ,EAA/B;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AACA,sBACI;AAAS,IAAA,SAAS,EAAG,eAArB;AAAA,eACM,CAACE,UAAD,iBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADrB,EAEKA,UAAU,iBACP;AAAA,8BACA;AAAI,QAAA,SAAS,EAAG,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,SAAS,EAAG,eAAjB;AAAA,gCACI;AAAK,UAAA,GAAG,EAAIU,OAAO,CAAC,gCAAD,CAAnB;AAAuD,UAAA,KAAK,EAAI;AAACC,YAAAA,MAAM,EAAE,OAAT;AAAkBC,YAAAA,KAAK,EAAE;AAAzB;AAAhE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,GAAG,EAAIF,OAAO,CAAC,gCAAD,CAAnB;AAAuD,UAAA,KAAK,EAAI;AAACC,YAAAA,MAAM,EAAE,OAAT;AAAkBC,YAAAA,KAAK,EAAE;AAAzB;AAAhE;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,0BAAKhB,UAAU,CAAC,CAAD,CAAV,CAAc,YAAd,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,0BAAKA,UAAU,CAAC,CAAD,CAAV,CAAc,eAAd,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,0BAAKA,UAAU,CAAC,CAAD,CAAV,CAAc,qBAAd,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAnCQD,K;UAI4BF,Q;;;KAJ5BE,K;AAqCT,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\n\n// const Game_Query = gql`\n//     query GameQuery {\n//         scoreboard {\n//             gameHeader {\n//                 gameDateEst\n//                 gameSequence\n//                 gameId\n//                 gameStatusId\n//                 gameStatusText\n//                 gamecode\n//                 homeTeamId\n//                 visitorTeamId\n//                 season\n//                 livePeriod\n//                 livePcTime\n//                 livePeriodTimeBcast\n//             }\n//             lineScore {\n//                 gameDateEst\n//                 gameSequence\n//                 gameId\n//                 teamId\n//                 teamAbbreviation\n//                 teamCityName\n//                 teamWinsLosses\n//                 ptsQtr1\n//                 ptsQtr2\n//                 ptsQtr3\n//                 ptsQtr4\n//                 ptsOt1\n//                 ptsOt2\n//                 ptsOt3\n//                 ptsOt4\n//                 pts\n//                 fgPct\n//                 ftPct\n//                 fg3Pct\n//                 ast\n//                 reb\n//                 tov\n//             }\n//         }\n//     }\t\n// `\n\nfunction Games() {\n    const [gameHeader, setGameHeader] = useState([]);\n    const [lineScore, setLineScore] = useState([]);\n    const [dataLoaded, setDataLoaded] = useState(false)\n    const { loading, error, data } = useQuery(Game_Query);\n    \n    var temp_arr = []\n    useEffect(() => {\n        if (!loading) {\n            setGameHeader(data['scoreboard']['gameHeader'])\n            setLineScore(data['scoreboard']['lineScore'])\n            setDataLoaded(true)\n        }\n    }, [data]);\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    console.log(lineScore)\n    return (\n        <section className = \"gameDashboard\">\n            { !dataLoaded && <div>Loading</div> }\n            {dataLoaded &&\n                <>\n                <h1 className = \"Date\"> Today's Games </h1>\n                <div className = \"gameContainer\">\n                    <img src = {require(\"../../Assets/Images/avatar.png\")} style = {{height: '100px', width: '100px'}}></img>\n                    <img src = {require(\"../../Assets/Images/avatar.png\")} style = {{height: '100px', width: '100px'}}></img>\n                    <p> {gameHeader[0]['homeTeamId']} </p>\n                    <p> {gameHeader[0]['visitorTeamId']} </p>\n                    <p> {gameHeader[0]['livePeriodTimeBcast']} </p>\n                </div>\n                </>\n            }  \n        </section>\n    )\n}\n\nexport default Games\n"]},"metadata":{},"sourceType":"module"}