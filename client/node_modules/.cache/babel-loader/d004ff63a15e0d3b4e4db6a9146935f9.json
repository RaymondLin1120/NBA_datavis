{"ast":null,"code":"var os = require('os');\n\nvar Q = require('q');\n\nvar rp = require('request-promise');\n\nvar fs = require('fs');\n\nvar util = require('util');\n\nvar libVersion = require('../package.json').version; // Private Functions\n\n\nfunction __verifyFeedName(feed) {\n  if (!feed) {\n    return false;\n  }\n\n  return this.validFeeds.includes(feed);\n}\n\nfunction __verifyFormat(format) {\n  // Only JSON format supported\n  if (!format || format !== 'json') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction __makeOutputFilename(league, season, feed, format, params) {\n  var filename = `${feed}-${league}-${season}`;\n  const keys = Object.keys(params);\n\n  if (keys.includes(\"gameid\")) {\n    filename += `-${params[\"gameid\"]}`;\n  }\n\n  if (keys.includes(\"fordate\")) {\n    filename += `-${params[\"fordate\"]}`;\n  }\n\n  if (keys.includes(\"game\")) {\n    filename += `-${params[\"game\"]}`;\n  }\n\n  if (keys.includes(\"date\")) {\n    filename += `-${params[\"date\"]}`;\n  }\n\n  if (keys.includes(\"week\")) {\n    filename += `-${params[\"week\"]}`;\n  }\n\n  filename += `.${format}`;\n  return filename;\n}\n\nfunction __saveFeed(response, league, season, feed, format, params) {\n  var storeOutput = null; // Save to memory regardless of selected method\n\n  if (format == \"json\") {\n    storeOutput = response;\n  } else if (format == \"xml\") {\n    throw new Error(\"XML feed format not supported in this version.\");\n  } else if (format == \"csv\") {\n    throw new Error(\"CSV feed format not supported in this version.\");\n  }\n\n  if (this.storeType == \"file\") {\n    if (!fs.existsSync(this.storeLocation)) {\n      fs.mkdirSync(this.storeLocation);\n    }\n\n    var filename = __makeOutputFilename.call(this, league, season, feed, format, params);\n\n    if (format == \"json\") {\n      // This is JSON\n      fs.writeFileSync(this.storeLocation + filename, JSON.stringify(storeOutput));\n    } else {\n      throw new Error(\"Could not interpret feed output format.\");\n    }\n\n    if (this.verbose) {\n      console.log(`File saved as '${this.storeLocation}${filename}'.`);\n    }\n  }\n} // Public Functions\n\n\nvar API_v1_0 = function (v, storeT, storeL) {\n  this.platform = util.format('%s-%s%s', os.arch(), os.platform(), os.release());\n  this.options = {\n    method: 'GET',\n    uri: '',\n    json: true,\n    resolveWithFullResponse: true,\n    gzip: true,\n    headers: {\n      'Authorization': '',\n      'User-Agent': util.format('MySportsFeeds-Node/%s (%s)', libVersion, this.platform)\n    },\n    qs: {},\n    transform: function (body) {\n      // console.log(\"response = '\" + util.inspect(body, {depth: null}) + \"'\");\n      return body;\n    }\n  };\n  this.auth = null;\n  this.baseUrl = null;\n  this.verbose = v;\n  this.storeType = storeT;\n  this.storeLocation = storeL;\n  this.baseUrl = \"https://api.mysportsfeeds.com/v1.0/pull\";\n  this.validFeeds = ['cumulative_player_stats', 'full_game_schedule', 'daily_game_schedule', 'daily_player_stats', 'game_boxscore', 'game_playbyplay', 'scoreboard', 'roster_players', 'game_startinglineup', 'player_gamelogs', 'team_gamelogs', 'active_players', 'overall_team_standings', 'conference_team_standings', 'division_team_standings', 'playoff_team_standings', 'player_injuries', 'latest_updates', 'daily_dfs', 'current_season'];\n}; // Indicate this version does support BASIC auth\n\n\nAPI_v1_0.prototype.supportsBasicAuth = function () {\n  return true;\n}; // Establish BASIC auth credentials\n\n\nAPI_v1_0.prototype.setAuthCredentials = function (apikey, password) {\n  this.auth = {\n    username: apikey,\n    password: password\n  };\n  this.options.headers.Authorization = util.format('Basic %s', new Buffer.from(apikey + \":\" + password).toString('base64'));\n};\n\nAPI_v1_0.prototype.__determineUrl = function (league, season, feed, format, params) {\n  if (feed == \"current_season\") {\n    return `${this.baseUrl}/${league}/${feed}.${format}`;\n  } else {\n    return `${this.baseUrl}/${league}/${season}/${feed}.${format}`;\n  }\n};\n\nAPI_v1_0.prototype.getData = function (league, season, feed, format, params = {}) {\n  if (!this.auth) {\n    throw new Error(\"You must authenticate() before making requests.\");\n  } // Add force=false parameter (helps prevent unnecessary bandwidth use)\n\n\n  if (!Object.keys(params).includes(\"force\")) {\n    params['force'] = 'false';\n  }\n\n  if (!__verifyFeedName.call(this, feed)) {\n    throw new Error(`Unknown feed '${feed}'.  Known values are: [${this.validFeeds}]`);\n  }\n\n  if (!__verifyFormat.call(this, format)) {\n    throw new Error(`Unsupported format '${format}'.`);\n  }\n\n  var url = this.__determineUrl(league, season, feed, format, params);\n\n  if (this.verbose) {\n    console.log(`Making API request to '${url}'.`);\n    console.log(\"  with headers:\");\n    console.log(this.options.headers);\n    console.log(\" and params:\");\n    console.log(params);\n  }\n\n  var deferred = Q.defer();\n  this.options.uri = util.format(url);\n  this.options.qs = params; // Make the request\n\n  rp(this.options).then(function (body) {\n    var data = body;\n\n    if (this.storeType) {\n      __saveFeed.call(this, data, league, season, feed, format, params);\n    }\n\n    if (format == \"json\") {\n      data = body;\n    } else if (format == \"xml\") {\n      throw new Error(\"XML feed format not supported in this version.\");\n    } else if (format == \"csv\") {\n      throw new Error(\"CSV feed format not supported in this version.\");\n    }\n\n    deferred.resolve(data);\n  }.bind(this)).catch(function (err) {\n    if (this.verbose) {\n      console.log(`err = '${util.inspect(err, {\n        depth: null\n      })}'`);\n    }\n\n    if (err.statusCode == 304) {\n      // Content hasn't changed, read from local file\n      if (this.verbose) {\n        console.log(\"Data hasn't changed since last call.\");\n      }\n\n      var filename = __makeOutputFilename.call(this, league, season, feed, format, params);\n\n      const file_path = this.storeLocation + filename;\n      let exists = fs.existsSync(file_path);\n\n      if (!exists) {\n        throw new Error(\"Local copy does not exist, set 'force' param to true to get latest\");\n      }\n\n      let data = fs.readFileSync(file_path);\n\n      if (format == \"json\") {\n        data = JSON.parse(data);\n      } else if (format == \"xml\") {\n        throw new Error(\"XML feed format not supported in this version.\");\n      } else if (format == \"csv\") {\n        throw new Error(\"CSV feed format not supported in this version.\");\n      }\n\n      deferred.resolve(data);\n    } else {\n      throw new Error(`API call failed with error: ${err.statusCode}`);\n    }\n  }.bind(this));\n  return deferred.promise;\n};\n\nexports = module.exports = API_v1_0;","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/node_modules/mysportsfeeds-node/lib/API_v1_0.js"],"names":["os","require","Q","rp","fs","util","libVersion","version","__verifyFeedName","feed","validFeeds","includes","__verifyFormat","format","__makeOutputFilename","league","season","params","filename","keys","Object","__saveFeed","response","storeOutput","Error","storeType","existsSync","storeLocation","mkdirSync","call","writeFileSync","JSON","stringify","verbose","console","log","API_v1_0","v","storeT","storeL","platform","arch","release","options","method","uri","json","resolveWithFullResponse","gzip","headers","qs","transform","body","auth","baseUrl","prototype","supportsBasicAuth","setAuthCredentials","apikey","password","username","Authorization","Buffer","from","toString","__determineUrl","getData","url","deferred","defer","then","data","resolve","bind","catch","err","inspect","depth","statusCode","file_path","exists","readFileSync","parse","promise","exports","module"],"mappings":"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","sourcesContent":["var os = require('os');\r\nvar Q = require('q');\r\nvar rp = require('request-promise');\r\nvar fs = require('fs');\r\nvar util = require('util');\r\nvar libVersion = require('../package.json').version;\r\n\r\n// Private Functions\r\nfunction __verifyFeedName(feed) {\r\n  if (!feed) {\r\n    return false;\r\n  }\r\n\r\n  return this.validFeeds.includes(feed);\r\n}\r\n\r\nfunction __verifyFormat(format) {\r\n  // Only JSON format supported\r\n  if (!format || format !== 'json') {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction __makeOutputFilename(league, season, feed, format, params) {\r\n  var filename = `${feed}-${league}-${season}`;\r\n\r\n  const keys = Object.keys(params);\r\n\r\n  if (keys.includes(\"gameid\")) {\r\n    filename += `-${params[\"gameid\"]}`;\r\n  }\r\n\r\n  if (keys.includes(\"fordate\")) {\r\n    filename += `-${params[\"fordate\"]}`;\r\n  }\r\n\r\n  if (keys.includes(\"game\")) {\r\n    filename += `-${params[\"game\"]}`;\r\n  }\r\n\r\n  if (keys.includes(\"date\")) {\r\n    filename += `-${params[\"date\"]}`;\r\n  }\r\n\r\n  if (keys.includes(\"week\")) {\r\n    filename += `-${params[\"week\"]}`;\r\n  }\r\n\r\n  filename += `.${format}`;\r\n\r\n  return filename;\r\n}\r\n\r\nfunction __saveFeed(response, league, season, feed, format, params) {\r\n  var storeOutput = null;\r\n\r\n  // Save to memory regardless of selected method\r\n  if (format == \"json\") {\r\n    storeOutput = response;\r\n  } else if (format == \"xml\") {\r\n    throw new Error(\"XML feed format not supported in this version.\");\r\n  } else if (format == \"csv\") {\r\n    throw new Error(\"CSV feed format not supported in this version.\");\r\n  }\r\n\r\n  if (this.storeType == \"file\") {\r\n    if (!fs.existsSync(this.storeLocation)) {\r\n      fs.mkdirSync(this.storeLocation);\r\n    }\r\n\r\n    var filename = __makeOutputFilename.call(this, league, season, feed, format, params);\r\n\r\n    if (format == \"json\") {  // This is JSON\r\n      fs.writeFileSync(this.storeLocation + filename, JSON.stringify(storeOutput));\r\n    } else {\r\n      throw new Error(\"Could not interpret feed output format.\");\r\n    }\r\n\r\n    if (this.verbose) {\r\n      console.log(`File saved as '${this.storeLocation}${filename}'.`);\r\n    }\r\n  }\r\n}\r\n\r\n// Public Functions\r\nvar API_v1_0 = function (v, storeT, storeL) {\r\n  this.platform = util.format('%s-%s%s', os.arch(), os.platform(), os.release());\r\n  this.options = {\r\n    method: 'GET',\r\n    uri: '',\r\n    json: true,\r\n    resolveWithFullResponse: true,\r\n    gzip: true,\r\n    headers: {\r\n      'Authorization': '',\r\n      'User-Agent': util.format('MySportsFeeds-Node/%s (%s)', libVersion, this.platform)\r\n    },\r\n    qs: {},\r\n    transform: function (body) {\r\n      // console.log(\"response = '\" + util.inspect(body, {depth: null}) + \"'\");\r\n\r\n      return body;\r\n    }\r\n  };\r\n  this.auth = null;\r\n  this.baseUrl = null;\r\n\r\n  this.verbose = v;\r\n  this.storeType = storeT;\r\n  this.storeLocation = storeL;\r\n  this.baseUrl = \"https://api.mysportsfeeds.com/v1.0/pull\";\r\n\r\n  this.validFeeds = [\r\n    'cumulative_player_stats',\r\n    'full_game_schedule',\r\n    'daily_game_schedule',\r\n    'daily_player_stats',\r\n    'game_boxscore',\r\n    'game_playbyplay',\r\n    'scoreboard',\r\n    'roster_players',\r\n    'game_startinglineup',\r\n    'player_gamelogs',\r\n    'team_gamelogs',\r\n    'active_players',\r\n    'overall_team_standings',\r\n    'conference_team_standings',\r\n    'division_team_standings',\r\n    'playoff_team_standings',\r\n    'player_injuries',\r\n    'latest_updates',\r\n    'daily_dfs',\r\n    'current_season',\r\n  ];\r\n};\r\n\r\n// Indicate this version does support BASIC auth\r\nAPI_v1_0.prototype.supportsBasicAuth = function () {\r\n  return true;\r\n};\r\n\r\n// Establish BASIC auth credentials\r\nAPI_v1_0.prototype.setAuthCredentials = function (apikey, password) {\r\n  this.auth = {\r\n    username: apikey,\r\n    password: password\r\n  };\r\n\r\n  this.options.headers.Authorization = util.format('Basic %s',\r\n    new Buffer.from(apikey + \":\" + password).toString('base64'));\r\n};\r\n\r\nAPI_v1_0.prototype.__determineUrl = function (league, season, feed, format, params) {\r\n  if (feed == \"current_season\") {\r\n    return `${this.baseUrl}/${league}/${feed}.${format}`;\r\n  } else {\r\n    return `${this.baseUrl}/${league}/${season}/${feed}.${format}`;\r\n  }\r\n};\r\n\r\nAPI_v1_0.prototype.getData = function (league, season, feed, format, params = {}) {\r\n  if (!this.auth) {\r\n    throw new Error(\"You must authenticate() before making requests.\");\r\n  }\r\n\r\n  // Add force=false parameter (helps prevent unnecessary bandwidth use)\r\n  if (!Object.keys(params).includes(\"force\")) {\r\n    params['force'] = 'false';\r\n  }\r\n\r\n  if (!__verifyFeedName.call(this, feed)) {\r\n    throw new Error(`Unknown feed '${feed}'.  Known values are: [${this.validFeeds}]`);\r\n  }\r\n\r\n  if (!__verifyFormat.call(this, format)) {\r\n    throw new Error(`Unsupported format '${format}'.`);\r\n  }\r\n\r\n  var url = this.__determineUrl(league, season, feed, format, params);\r\n\r\n  if (this.verbose) {\r\n    console.log(`Making API request to '${url}'.`);\r\n    console.log(\"  with headers:\");\r\n    console.log(this.options.headers);\r\n    console.log(\" and params:\");\r\n    console.log(params);\r\n  }\r\n\r\n  var deferred = Q.defer();\r\n  this.options.uri = util.format(url);\r\n  this.options.qs = params;\r\n\r\n  // Make the request\r\n  rp(this.options).then(function (body) {\r\n    var data = body;\r\n\r\n    if (this.storeType) {\r\n      __saveFeed.call(this, data, league, season, feed, format, params);\r\n    }\r\n\r\n    if (format == \"json\") {\r\n      data = body;\r\n    } else if (format == \"xml\") {\r\n      throw new Error(\"XML feed format not supported in this version.\");\r\n    } else if (format == \"csv\") {\r\n      throw new Error(\"CSV feed format not supported in this version.\");\r\n    }\r\n\r\n    deferred.resolve(data);\r\n  }.bind(this))\r\n    .catch(function (err) {\r\n      if (this.verbose) {\r\n        console.log(`err = '${util.inspect(err, { depth: null })}'`);\r\n      }\r\n\r\n      if (err.statusCode == 304) { // Content hasn't changed, read from local file\r\n        if (this.verbose) {\r\n          console.log(\"Data hasn't changed since last call.\");\r\n        }\r\n\r\n        var filename = __makeOutputFilename.call(this, league, season, feed, format, params);\r\n\r\n        const file_path = this.storeLocation + filename;\r\n\r\n        let exists = fs.existsSync(file_path);\r\n\r\n        if (!exists) {\r\n          throw new Error(\"Local copy does not exist, set 'force' param to true to get latest\");\r\n        }\r\n\r\n        let data = fs.readFileSync(file_path);\r\n\r\n        if (format == \"json\") {\r\n          data = JSON.parse(data);\r\n        } else if (format == \"xml\") {\r\n          throw new Error(\"XML feed format not supported in this version.\");\r\n        } else if (format == \"csv\") {\r\n          throw new Error(\"CSV feed format not supported in this version.\");\r\n        }\r\n\r\n        deferred.resolve(data);\r\n      } else {\r\n        throw new Error(`API call failed with error: ${err.statusCode}`);\r\n      }\r\n    }.bind(this));\r\n\r\n  return deferred.promise;\r\n};\r\n\r\nexports = module.exports = API_v1_0;\r\n"]},"metadata":{},"sourceType":"script"}