{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from '../Components/Graphing/RadarStats';\nimport { isNullableType } from 'graphql';\nconst Player_Query = gql`\n    query PlayerQuery {\n        historicStats {\n            seasonId\n            pts\n            reb\n            ast\n            fG3M\n            stl\n            blk\n            min\n            tov\n          }\n    }\n`;\n\nfunction Player() {\n  _s();\n\n  const [seasonStats, setSeasonStats] = useState([]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(Player_Query);\n  useEffect(() => {\n    console.log(data); // setSeasonStats(data['historicStats'].filter((item) =>\n    //     (item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\") || \n    //     item.seasonId !== \"2020-21\"\n    // ))\n    //setSeasonStats(seasonStats.slice(seasonStats.length - 3, seasonStats.length))\n    //     axios.get(\"http://localhost:8080/player\")\n    //     .then((data) => {\n    //         setPlayerStats(data.data)\n    //     })\n  }, [data]); // // const arr = [\n  // //     {\n  // //         fgPct:{subject:\"Field-Goal-%\"},\n  // //         //pg3Pct:{subject:\"3s-%\"},\n  // //         ftPct:{subject:\"Free-Throw-%\"},\n  // //         fG3M:{subject:\"3s-%\"},\n  // //         pts:{subject:\"Points\"},\n  // //         min:{subject:\"Minutes\"},\n  // //         reb:{subject:\"Rebounds\"},\n  // //         ast:{subject:\"Assists\"},\n  // //         stl:{subject:\"Steals\"},\n  // //         blk:{subject:\"Blocks\"},\n  // //         tov:{subject:\"Turnovers\"}\n  // //     }   \n  // // ]\n  // //console.log(Object.keys(seasonStats[0]))\n  // // seasonStats.map((item, key) => (\n  // //     //arr[0].min[item.seasonId] = item.min,\n  // //     arr[0].fgPct[item.seasonId] = item.fgPct,\n  // //     arr[0].ftPct[item.seasonId] = item.ftPct,\n  // //     arr[0].fG3M[item.seasonId] = item.fG3M,\n  // //     //arr[0].pts[item.seasonId] = item.pts,\n  // //     arr[0].reb[item.seasonId] = item.reb,\n  // //     arr[0].ast[item.seasonId] = item.ast,\n  // //     arr[0].stl[item.seasonId] = item.stl,\n  // //     arr[0].blk[item.seasonId] = item.blk,\n  // //     arr[0].tov[item.seasonId] = item.tov\n  // // ))\n  // var temp_arr = []\n  // // for (const [key, value] of Object.entries(arr[0])) {\n  // //     console.log(`key: ${key}, value: ${value}`)\n  // //     // temp_arr.push(arr[`${key}`])\n  // //     temp_arr.push(arr[0][`${key}`])\n  // // }\n  // //console.log(seasonStats)\n  // seasonStats.map((item) => (\n  //     temp_arr.push({\n  //         seasonId: item.seasonId,\n  //         fgPct: item.fgPct,\n  //         ftPct: item.ftPct,\n  //         fG3M: item.fG3M,\n  //         pts:item.pts,\n  //         min: item.min,\n  //         reb: item.reb,\n  //         ast: item.ast,\n  //         stl: item.stl,\n  //         blk: item.blk,\n  //         tov: item.tov\n  //     })\n  // ))\n  // console.log(temp_arr)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(RadarStats, {\n      config: seasonStats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"coafrWKi6VT33vt2XnfLOMk4Oq8=\", false, function () {\n  return [useQuery];\n});\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player.js"],"names":["React","useEffect","useState","useQuery","gql","RadarStats","isNullableType","Player_Query","Player","seasonStats","setSeasonStats","loading","error","data","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,SAASC,cAAT,QAA+B,SAA/B;AAEA,MAAMC,YAAY,GAAGH,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;;AAeA,SAASI,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM;AAAES,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACI,YAAD,CAAzC;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADY,CAEZ;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AAEA;AACC,GAZQ,EAYN,CAACA,IAAD,CAZM,CAAT,CAJc,CAiBd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBACI;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAIJ;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA9EQD,M;UAG4BL,Q;;;KAH5BK,M;AAgFT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from '../Components/Graphing/RadarStats'\nimport { isNullableType } from 'graphql';\n\nconst Player_Query = gql`\n    query PlayerQuery {\n        historicStats {\n            seasonId\n            pts\n            reb\n            ast\n            fG3M\n            stl\n            blk\n            min\n            tov\n          }\n    }\n`\nfunction Player() {\n    const [seasonStats, setSeasonStats] = useState([])\n\n    const { loading, error, data } = useQuery(Player_Query);\n    useEffect(() => {\n        console.log(data)\n        // setSeasonStats(data['historicStats'].filter((item) =>\n        //     (item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\") || \n        //     item.seasonId !== \"2020-21\"\n        // ))\n        //setSeasonStats(seasonStats.slice(seasonStats.length - 3, seasonStats.length))\n    //     axios.get(\"http://localhost:8080/player\")\n    //     .then((data) => {\n    //         setPlayerStats(data.data)\n\n    //     })\n    }, [data]);\n    // // const arr = [\n    // //     {\n    // //         fgPct:{subject:\"Field-Goal-%\"},\n    // //         //pg3Pct:{subject:\"3s-%\"},\n    // //         ftPct:{subject:\"Free-Throw-%\"},\n    // //         fG3M:{subject:\"3s-%\"},\n    // //         pts:{subject:\"Points\"},\n    // //         min:{subject:\"Minutes\"},\n    // //         reb:{subject:\"Rebounds\"},\n    // //         ast:{subject:\"Assists\"},\n    // //         stl:{subject:\"Steals\"},\n    // //         blk:{subject:\"Blocks\"},\n    // //         tov:{subject:\"Turnovers\"}\n    // //     }   \n    // // ]\n\n    // //console.log(Object.keys(seasonStats[0]))\n\n    // // seasonStats.map((item, key) => (\n    // //     //arr[0].min[item.seasonId] = item.min,\n    // //     arr[0].fgPct[item.seasonId] = item.fgPct,\n    // //     arr[0].ftPct[item.seasonId] = item.ftPct,\n    // //     arr[0].fG3M[item.seasonId] = item.fG3M,\n    // //     //arr[0].pts[item.seasonId] = item.pts,\n    // //     arr[0].reb[item.seasonId] = item.reb,\n    // //     arr[0].ast[item.seasonId] = item.ast,\n    // //     arr[0].stl[item.seasonId] = item.stl,\n    // //     arr[0].blk[item.seasonId] = item.blk,\n    // //     arr[0].tov[item.seasonId] = item.tov\n    // // ))\n\n    // var temp_arr = []\n    // // for (const [key, value] of Object.entries(arr[0])) {\n    // //     console.log(`key: ${key}, value: ${value}`)\n    // //     // temp_arr.push(arr[`${key}`])\n    // //     temp_arr.push(arr[0][`${key}`])\n    // // }\n    // //console.log(seasonStats)\n    // seasonStats.map((item) => (\n    //     temp_arr.push({\n    //         seasonId: item.seasonId,\n    //         fgPct: item.fgPct,\n    //         ftPct: item.ftPct,\n    //         fG3M: item.fG3M,\n    //         pts:item.pts,\n    //         min: item.min,\n    //         reb: item.reb,\n    //         ast: item.ast,\n    //         stl: item.stl,\n    //         blk: item.blk,\n    //         tov: item.tov\n    //     })\n    // ))\n\n    // console.log(temp_arr)\n\n    return (\n        <div>\n            <RadarStats config = {seasonStats}/> \n        </div>\n    )\n}\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}