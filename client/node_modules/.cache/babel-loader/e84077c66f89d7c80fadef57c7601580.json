{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/Player.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from '../../Components/Graphing/RadarStats';\nimport { isNullableType } from 'graphql';\nconst Player_Query = gql`\n    query PlayerQuery {\n        historicStats {\n            playerId\n            seasonId\n            pts\n            reb\n            ast\n            fG3M\n            stl\n            blk\n            min\n            tov\n            fga\n            fG3A\n            fgPct\n            ftPct\n            fg3Pct\n            fta\n            teamAbbreviation\n        }\n        playerInfo {\n            personId\n            displayFirstLast\n            jersey\n            position\n            teamName\n            teamCity\n        }\n    }\n`;\n\nfunction Player() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [seasonStats, setSeasonStats] = useState([]);\n  const [playerInfo, setPlayerInfo] = useState([]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(Player_Query);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  var temp_arr = []; // loads data into charts\n\n  useEffect(() => {\n    if (!loading) {\n      temp_arr = data['historicStats'].filter(item => item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\" || item.seasonId !== \"2020-21\");\n      setSeasonStats(temp_arr.slice(temp_arr.length - 3, temp_arr.length));\n      setPlayerInfo(data['playerInfo']);\n    }\n  }, [data]);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  const LoadData = () => {\n    _s();\n\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(Player_Query);\n\n    if (!loading) {\n      temp_arr = data['historicStats'].filter(item => item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\" || item.seasonId !== \"2020-21\");\n      setSeasonStats(temp_arr.slice(temp_arr.length - 3, temp_arr.length));\n      setPlayerInfo(data['playerInfo']);\n    }\n  };\n\n  _s(LoadData, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  });\n\n  useEffect(() => {\n    LoadData();\n  }, []);\n  const arr = [{\n    fgPct: {\n      subject: \"Field-Goal-%\"\n    },\n    //pg3Pct:{subject:\"3s-%\"},\n    ftPct: {\n      subject: \"Free-Throw-%\"\n    },\n    fG3M: {\n      subject: \"3s-%\"\n    },\n    pts: {\n      subject: \"Points\"\n    },\n    min: {\n      subject: \"Minutes\"\n    },\n    reb: {\n      subject: \"Rebounds\"\n    },\n    ast: {\n      subject: \"Assists\"\n    },\n    stl: {\n      subject: \"Steals\"\n    },\n    blk: {\n      subject: \"Blocks\"\n    },\n    tov: {\n      subject: \"Turnovers\"\n    }\n  }];\n  console.log(Object.keys(seasonStats[0]));\n  seasonStats.map((item, key) => ( //arr[0].min[item.seasonId] = item.min,\n  arr[0].fgPct[item.seasonId] = item.fgPct, arr[0].ftPct[item.seasonId] = item.ftPct, arr[0].fG3M[item.seasonId] = item.fG3M, //arr[0].pts[item.seasonId] = item.pts,\n  arr[0].reb[item.seasonId] = item.reb, arr[0].ast[item.seasonId] = item.ast, arr[0].stl[item.seasonId] = item.stl, arr[0].blk[item.seasonId] = item.blk, arr[0].tov[item.seasonId] = item.tov)); //var temp_arr = []\n  // for (const [key, value] of Object.entries(arr[0])) {\n  //     console.log(`key: ${key}, value: ${value}`)\n  //     // temp_arr.push(arr[`${key}`])\n  //     temp_arr.push(arr[0][`${key}`])\n  // }\n  //console.log(seasonStats)\n\n  seasonStats.map(item => temp_arr.push({\n    seasonId: item.seasonId,\n    fgPct: item.fgPct,\n    ftPct: item.ftPct,\n    fG3M: item.fG3M,\n    pts: item.pts,\n    min: item.min,\n    reb: item.reb,\n    ast: item.ast,\n    stl: item.stl,\n    blk: item.blk,\n    tov: item.tov\n  }));\n  console.log(temp_arr);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playerDashboard\",\n    children: [dataLoaded && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"playerInfo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-headshot\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(\"../../Assets/Images/avatar.png\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", playerInfo.displayFirstLast]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Name: \", playerInfo[0].displayFirstLast, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Team: \", playerInfo[0].teamCity, \" \", playerInfo[0].teamName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Position: \", playerInfo[0].position, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Jersey: \", playerInfo[0].jersey, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RadarStats, {\n      config: seasonStats,\n      style: {\n        height: '350px',\n        width: '1050px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Player, \"f7EKf1G822DpJ6C3gBkl65G/aVI=\", false, function () {\n  return [useQuery];\n});\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/Player.js"],"names":["React","useEffect","useState","useQuery","gql","RadarStats","isNullableType","Player_Query","Player","seasonStats","setSeasonStats","playerInfo","setPlayerInfo","loading","error","data","dataLoaded","setDataLoaded","temp_arr","filter","item","seasonId","teamAbbreviation","slice","length","message","LoadData","arr","fgPct","subject","ftPct","fG3M","pts","min","reb","ast","stl","blk","tov","console","log","Object","keys","map","key","push","require","displayFirstLast","teamCity","teamName","position","jersey","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from '../../Components/Graphing/RadarStats'\nimport { isNullableType } from 'graphql';\n\nconst Player_Query = gql`\n    query PlayerQuery {\n        historicStats {\n            playerId\n            seasonId\n            pts\n            reb\n            ast\n            fG3M\n            stl\n            blk\n            min\n            tov\n            fga\n            fG3A\n            fgPct\n            ftPct\n            fg3Pct\n            fta\n            teamAbbreviation\n        }\n        playerInfo {\n            personId\n            displayFirstLast\n            jersey\n            position\n            teamName\n            teamCity\n        }\n    }\n`\nfunction Player() {\n    const [seasonStats, setSeasonStats] = useState([]);\n    const [playerInfo, setPlayerInfo] = useState([]);\n    const { loading, error, data } = useQuery(Player_Query);\n    const [dataLoaded, setDataLoaded] = useState(false);\n    \n    var temp_arr = []\n    \n    // loads data into charts\n    useEffect(() => {\n        if (!loading) {\n            temp_arr = data['historicStats'].filter((item) =>\n                (item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\") || \n                item.seasonId !== \"2020-21\"\n            )\n            setSeasonStats(temp_arr.slice(temp_arr.length - 3, temp_arr.length))\n            setPlayerInfo(data['playerInfo'])\n        }\n    }, [data]);\n    if (loading) return 'Loading...';\n\n    if (error) return `Error! ${error.message}`;\n\n    const LoadData = () => {\n        const { loading, error, data } = useQuery(Player_Query);\n        if (!loading) {\n            temp_arr = data['historicStats'].filter((item) =>\n                (item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\") || \n                item.seasonId !== \"2020-21\"\n            )\n            setSeasonStats(temp_arr.slice(temp_arr.length - 3, temp_arr.length))\n            setPlayerInfo(data['playerInfo'])\n        }\n    }\n    useEffect(() => {\n        LoadData();\n    }, []);\n    const arr = [\n        {\n            fgPct:{subject:\"Field-Goal-%\"},\n            //pg3Pct:{subject:\"3s-%\"},\n            ftPct:{subject:\"Free-Throw-%\"},\n            fG3M:{subject:\"3s-%\"},\n            pts:{subject:\"Points\"},\n            min:{subject:\"Minutes\"},\n            reb:{subject:\"Rebounds\"},\n            ast:{subject:\"Assists\"},\n            stl:{subject:\"Steals\"},\n            blk:{subject:\"Blocks\"},\n            tov:{subject:\"Turnovers\"}\n        }   \n    ]\n\n    console.log(Object.keys(seasonStats[0]))\n\n    seasonStats.map((item, key) => (\n        //arr[0].min[item.seasonId] = item.min,\n        arr[0].fgPct[item.seasonId] = item.fgPct,\n        arr[0].ftPct[item.seasonId] = item.ftPct,\n        arr[0].fG3M[item.seasonId] = item.fG3M,\n        //arr[0].pts[item.seasonId] = item.pts,\n        arr[0].reb[item.seasonId] = item.reb,\n        arr[0].ast[item.seasonId] = item.ast,\n        arr[0].stl[item.seasonId] = item.stl,\n        arr[0].blk[item.seasonId] = item.blk,\n        arr[0].tov[item.seasonId] = item.tov\n    ))\n\n    //var temp_arr = []\n    // for (const [key, value] of Object.entries(arr[0])) {\n    //     console.log(`key: ${key}, value: ${value}`)\n    //     // temp_arr.push(arr[`${key}`])\n    //     temp_arr.push(arr[0][`${key}`])\n    // }\n    //console.log(seasonStats)\n    seasonStats.map((item) => (\n        temp_arr.push({\n            seasonId: item.seasonId,\n            fgPct: item.fgPct,\n            ftPct: item.ftPct,\n            fG3M: item.fG3M,\n            pts:item.pts,\n            min: item.min,\n            reb: item.reb,\n            ast: item.ast,\n            stl: item.stl,\n            blk: item.blk,\n            tov: item.tov\n        })\n    ))\n\n    console.log(temp_arr)\n\n    return (\n        <div className=\"playerDashboard\">\n            {dataLoaded &&\n            <section className=\"playerInfo-container\">\n                <div className=\"player-headshot\">\n                    <img src = {require(\"../../Assets/Images/avatar.png\")}></img>\n                    <p> {playerInfo.displayFirstLast}</p>\n                </div>\n               \n                <div className=\"playerInfo\">\n                    <p> Name: {playerInfo[0].displayFirstLast} </p>\n                    <p> Team: {playerInfo[0].teamCity} {playerInfo[0].teamName} </p>\n                    <p> Position: {playerInfo[0].position} </p>\n                    <p> Jersey: {playerInfo[0].jersey} </p>\n                </div>\n            </section>\n            }\n            <RadarStats config = {seasonStats} style = {{height:'350px', width:'1050px'}}/> \n        </div>\n    )\n}\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}