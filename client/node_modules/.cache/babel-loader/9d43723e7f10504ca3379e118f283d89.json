{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/CirclePacking.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nvar data = {\n  \"name\": \"A1\",\n  \"children\": [{\n    \"name\": \"B1\",\n    \"children\": [{\n      \"name\": \"C1\",\n      \"value\": 100\n    }, {\n      \"name\": \"C2\",\n      \"value\": 300\n    }, {\n      \"name\": \"C3\",\n      \"value\": 200\n    }]\n  }, {\n    \"name\": \"B2\",\n    \"value\": 200\n  }]\n};\n\nfunction CirclePacking() {\n  _s();\n\n  const [data, setData] = useState([25, 36, 47, 58]);\n  const svgRef = useRef();\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    var diameter = 300;\n    var packLayout = d3.pack().sort(null).size([diameter, diameter]).padding(1.5);\n    var rootNode = d3.hierarchy(data);\n    rootNode.sum(function (d) {\n      return d.value;\n    });\n    const myLine = d3.line().x((value, index) => index * 50).y(value => 150 - value);\n    svg.attr(\"width\", diameter).attr(\"height\", diameter).attr(\"class\", \"packingLayout\");\n    svg.selectAll(\"path\").data([data]).join(\"path\").attr(\"d\", value => myLine(value)).attr(\"fill\", \"none\").attr(\"stroke\", \"red\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CirclePacking, \"uWDF2vQc3GA6Qc0Vy5M9kz9mD24=\");\n\n_c = CirclePacking;\nexport default CirclePacking;\n\nvar _c;\n\n$RefreshReg$(_c, \"CirclePacking\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/CirclePacking.js"],"names":["React","useRef","useState","useEffect","d3","data","CirclePacking","setData","svgRef","svg","select","current","diameter","packLayout","pack","sort","size","padding","rootNode","hierarchy","sum","d","value","myLine","line","x","index","y","attr","selectAll","join"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAGA,IAAIC,IAAI,GAAG;AACP,UAAQ,IADD;AAEP,cAAY,CACV;AACE,YAAQ,IADV;AAEE,gBAAY,CACV;AACE,cAAQ,IADV;AAEE,eAAS;AAFX,KADU,EAKV;AACE,cAAQ,IADV;AAEE,eAAS;AAFX,KALU,EASV;AACE,cAAQ,IADV;AAEE,eAAS;AAFX,KATU;AAFd,GADU,EAkBV;AACE,YAAQ,IADV;AAEE,aAAS;AAFX,GAlBU;AAFL,CAAX;;AA2BA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM,CAACD,IAAD,EAAOE,OAAP,IAAkBL,QAAQ,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAD,CAAhC;AACA,QAAMM,MAAM,GAAGP,MAAM,EAArB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,GAAG,GAAGL,EAAE,CAACM,MAAH,CAAUF,MAAM,CAACG,OAAjB,CAAZ;AACA,QAAIC,QAAQ,GAAG,GAAf;AACA,QAAIC,UAAU,GAAGT,EAAE,CAACU,IAAH,GACZC,IADY,CACP,IADO,EAEZC,IAFY,CAEP,CAACJ,QAAD,EAAWA,QAAX,CAFO,EAGZK,OAHY,CAGJ,GAHI,CAAjB;AAKA,QAAIC,QAAQ,GAAGd,EAAE,CAACe,SAAH,CAAad,IAAb,CAAf;AAEAa,IAAAA,QAAQ,CAACE,GAAT,CAAa,UAASC,CAAT,EAAY;AACrB,aAAOA,CAAC,CAACC,KAAT;AACH,KAFD;AAIA,UAAMC,MAAM,GAAGnB,EAAE,CAACoB,IAAH,GACVC,CADU,CACR,CAACH,KAAD,EAAQI,KAAR,KAAkBA,KAAK,GAAG,EADlB,EAEVC,CAFU,CAERL,KAAK,IAAI,MAAMA,KAFP,CAAf;AAIAb,IAAAA,GAAG,CAACmB,IAAJ,CAAS,OAAT,EAAkBhB,QAAlB,EACKgB,IADL,CACU,QADV,EACoBhB,QADpB,EAEKgB,IAFL,CAEU,OAFV,EAEmB,eAFnB;AAIAnB,IAAAA,GAAG,CAACoB,SAAJ,CAAc,MAAd,EACKxB,IADL,CACU,CAACA,IAAD,CADV,EAEKyB,IAFL,CAEU,MAFV,EAGKF,IAHL,CAGU,GAHV,EAGeN,KAAK,IAAIC,MAAM,CAACD,KAAD,CAH9B,EAIKM,IAJL,CAIU,MAJV,EAIkB,MAJlB,EAKKA,IALL,CAKU,QALV,EAKoB,KALpB;AAOH,GA7BQ,EA6BP,EA7BO,CAAT;AA+BA,sBACI;AAAK,IAAA,GAAG,EAAIpB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAtCQF,a;;KAAAA,a;AAwCT,eAAeA,aAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\nimport * as d3 from 'd3'\n\n\nvar data = {\n    \"name\": \"A1\",\n    \"children\": [\n      {\n        \"name\": \"B1\",\n        \"children\": [\n          {\n            \"name\": \"C1\",\n            \"value\": 100\n          },\n          {\n            \"name\": \"C2\",\n            \"value\": 300\n          },\n          {\n            \"name\": \"C3\",\n            \"value\": 200\n          }\n        ]\n      },\n      {\n        \"name\": \"B2\",\n        \"value\": 200\n      }\n    ]\n  };\n\nfunction CirclePacking() {\n    const [data, setData] = useState([25, 36, 47, 58])\n    const svgRef = useRef()\n\n    useEffect(() => {\n        const svg = d3.select(svgRef.current)\n        var diameter = 300\n        var packLayout = d3.pack()\n            .sort(null)\n            .size([diameter, diameter])\n            .padding(1.5);\n\n        var rootNode = d3.hierarchy(data)\n\n        rootNode.sum(function(d) {\n            return d.value;\n        });   \n\n        const myLine = d3.line()\n            .x((value, index) => index * 50)\n            .y(value => 150 - value)\n\n        svg.attr(\"width\", diameter)\n            .attr(\"height\", diameter)\n            .attr(\"class\", \"packingLayout\")\n\n        svg.selectAll(\"path\")\n            .data([data])\n            .join(\"path\")\n            .attr(\"d\", value => myLine(value))\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"red\")\n\n    },[])\n\n    return (\n        <svg ref = {svgRef}> </svg>\n    )\n}\n\nexport default CirclePacking\n"]},"metadata":{},"sourceType":"module"}