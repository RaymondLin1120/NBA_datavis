{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PlayerProfile from './PlayerProfile';\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from '../../Components/Graphing/RadarStats';\nimport SearchBar from '../../Components/SearchBar/SearchBar';\nimport Boxscores from '../../Components/Graphing/Boxscores';\nimport ShotChart from '../../Components/Graphing/ShotChart';\nimport nba from 'nba';\nimport { useParams } from 'react-router-dom';\nimport { MdBlock } from 'react-icons/md';\nimport PlayerHome from './PlayerHome';\nconst Player_Query = gql`\n    query PlayerQuery ($playerId: Int!) {\n        historicStats (playerId: $playerId) {\n            playerId\n            seasonId\n            pts\n            reb\n            ast\n            fG3M\n            stl\n            blk\n            min\n            tov\n            fga\n            fG3A\n            fgPct\n            ftPct\n            fg3Pct\n            fta\n            teamAbbreviation\n        }\n        playerInfo (playerId: $playerId) {\n            personId\n            displayFirstLast\n            firstName\n            lastName\n            position\n            jersey\n            teamName\n            teamCity\n            teamAbbreviation\n        }\n        topStats {\n            top30 {\n              seasonId\n              pts: PTS\n              reb: REB\n              ast: AST\n              stl: STL\n              blk: BLK\n              tov: TOV\n            }\n            top70 {\n              seasonId\n              pts: PTS\n              reb: REB\n              ast: AST\n              stl: STL\n              blk: BLK\n              tov: TOV\n            }\n            top120 {\n              seasonId\n              pts: PTS\n              reb: REB\n              ast: AST\n              stl: STL\n              blk: BLK\n              tov: TOV\n            }\n            top180 {\n                seasonId\n                pts: PTS\n                reb: REB\n                ast: AST\n                stl: STL\n                blk: BLK\n                tov: TOV\n            }\n        }\n        shots (playerId: $playerId) {\n            gridType\n            gameId\n            gameEventId\n            playerId\n            playerName\n            teamId\n            teamName\n            period\n            minutesRemaining\n            secondsRemaining\n            eventType\n            actionType\n            shotType\n            shotZoneBasic\n            shotZoneArea\n            shotZoneRange\n            shotDistance\n            locX\n            locY\n            shotAttemptedFlag\n            shotMadeFlag\n            gameDate\n            htm\n            vtm\n        }\n          shotFreq {\n            playerId\n            playerName\n            playerLastTeamId\n            playerLastTeamAbbreviation\n            age\n            gp\n            g\n            fgaFrequency\n            fgm\n            fga\n            fgPct\n            efgPct\n            fg2aFrequency\n            fG2M\n            fG2A\n            fg2Pct\n            fg3aFrequency\n            fG3M\n            fG3A\n            fg3Pct\n          }\n    }\n`;\n\nfunction Player({\n  match\n}) {\n  _s();\n\n  const {\n    id\n  } = match.params;\n  const [seasonStats, setSeasonStats] = useState([]);\n  const [playerInfo, setPlayerInfo] = useState([]);\n  const [playerGames, setPlayerGames] = useState([]);\n  const [shotData, setShotData] = useState([]);\n  const [shotFreq, setShotFreq] = useState([]);\n  const [topStats, setTopStats] = useState([]);\n  const [currentPlayer, setCurrentPlayer] = useState(parseInt(id));\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(Player_Query, {\n    variables: {\n      playerId: currentPlayer\n    }\n  });\n  const [dataLoaded, setDataLoaded] = useState(false);\n  useEffect(() => {\n    setDataLoaded(false);\n\n    if (id) {\n      if (!loading) {\n        var temp_arr = [];\n        var temp_arr1 = [];\n        var temp_arr2 = [];\n        var temp_arr3 = [];\n        temp_arr = data['historicStats'].filter(item => item.seasonId === \"2020-21\" // (item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\") || \n        // item.seasonId !== \"2020-21\"\n        );\n        setSeasonStats(temp_arr.slice(temp_arr.length - 1, temp_arr.length));\n        setPlayerInfo(data['playerInfo']); // data['leagueGameLog']['resultSets'][0]['rowSet'].map((item) => (\n        //     temp_arr1.push({\n        //         gameID:item[6],\n        //         date: item[7],\n        //         matchup: item[8],\n        //         wl:item[9],\n        //         fgPct:parseFloat(item[13]*100).toFixed(1)+\"%\",\n        //         fg3Pct:parseFloat(item[16]*100).toFixed(1)+\"%\",\n        //         ftPct:parseFloat(item[19]*100).toFixed(1)+\"%\",\n        //         min:item[10],\n        //         reb:item[22],\n        //         ast:item[23],\n        //         blk:item[25],\n        //         stl:item[24],\n        //         tov:item[26],\n        //         pf:item[27],\n        //         pts:item[28]\n        //     })\n        // ))\n        // setPlayerGames(temp_arr1)\n\n        for (var key of Object.keys(data.topStats)) {\n          if (key !== \"__typename\") {\n            temp_arr2.push(data.topStats[key]);\n          }\n        }\n\n        setTopStats(temp_arr2);\n        setShotData(data['shots']);\n        temp_arr3 = data['shotFreq'].filter(item => item.playerId == id);\n        temp_arr3 = [{ ...temp_arr3,\n          ftPct: 1\n        }];\n        console.log(temp_arr3);\n        setShotFreq(temp_arr3);\n        setDataLoaded(true);\n      }\n    }\n  }, [data]);\n  if (loading) return 'Loading...';\n\n  if (dataLoaded) {\n    console.log(shotFreq);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playerPageContainer\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      setCurrentPlayer: setCurrentPlayer,\n      setDataLoaded: setDataLoaded,\n      playerInfo: playerInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), !id && /*#__PURE__*/_jsxDEV(PlayerHome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 22\n    }, this), dataLoaded && !error && id && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerDashboard\",\n        children: [/*#__PURE__*/_jsxDEV(PlayerProfile, {\n          playerInfo: playerInfo,\n          seasonStats: seasonStats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(RadarStats, {\n            config: seasonStats,\n            statData: topStats,\n            style: {\n              height: '500px',\n              width: '500px'\n            },\n            size: 160\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)\n    }, void 0, false), error && id && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", error.message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 30\n    }, this), !dataLoaded && id && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"TaFWkRhOuDqKZQN0bY89Pl6USE8=\", false, function () {\n  return [useQuery];\n});\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/Player.js"],"names":["React","useEffect","useState","PlayerProfile","useQuery","gql","RadarStats","SearchBar","Boxscores","ShotChart","nba","useParams","MdBlock","PlayerHome","Player_Query","Player","match","id","params","seasonStats","setSeasonStats","playerInfo","setPlayerInfo","playerGames","setPlayerGames","shotData","setShotData","shotFreq","setShotFreq","topStats","setTopStats","currentPlayer","setCurrentPlayer","parseInt","loading","error","data","variables","playerId","dataLoaded","setDataLoaded","temp_arr","temp_arr1","temp_arr2","temp_arr3","filter","item","seasonId","slice","length","key","Object","keys","push","ftPct","console","log","display","height","width","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PlayerProfile from './PlayerProfile';\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from '../../Components/Graphing/RadarStats'\nimport SearchBar from '../../Components/SearchBar/SearchBar'\nimport Boxscores from '../../Components/Graphing/Boxscores'\nimport ShotChart from '../../Components/Graphing/ShotChart'\nimport nba from 'nba';\nimport { useParams } from 'react-router-dom'\nimport { MdBlock } from 'react-icons/md';\nimport PlayerHome from './PlayerHome'\n\nconst Player_Query = gql`\n    query PlayerQuery ($playerId: Int!) {\n        historicStats (playerId: $playerId) {\n            playerId\n            seasonId\n            pts\n            reb\n            ast\n            fG3M\n            stl\n            blk\n            min\n            tov\n            fga\n            fG3A\n            fgPct\n            ftPct\n            fg3Pct\n            fta\n            teamAbbreviation\n        }\n        playerInfo (playerId: $playerId) {\n            personId\n            displayFirstLast\n            firstName\n            lastName\n            position\n            jersey\n            teamName\n            teamCity\n            teamAbbreviation\n        }\n        topStats {\n            top30 {\n              seasonId\n              pts: PTS\n              reb: REB\n              ast: AST\n              stl: STL\n              blk: BLK\n              tov: TOV\n            }\n            top70 {\n              seasonId\n              pts: PTS\n              reb: REB\n              ast: AST\n              stl: STL\n              blk: BLK\n              tov: TOV\n            }\n            top120 {\n              seasonId\n              pts: PTS\n              reb: REB\n              ast: AST\n              stl: STL\n              blk: BLK\n              tov: TOV\n            }\n            top180 {\n                seasonId\n                pts: PTS\n                reb: REB\n                ast: AST\n                stl: STL\n                blk: BLK\n                tov: TOV\n            }\n        }\n        shots (playerId: $playerId) {\n            gridType\n            gameId\n            gameEventId\n            playerId\n            playerName\n            teamId\n            teamName\n            period\n            minutesRemaining\n            secondsRemaining\n            eventType\n            actionType\n            shotType\n            shotZoneBasic\n            shotZoneArea\n            shotZoneRange\n            shotDistance\n            locX\n            locY\n            shotAttemptedFlag\n            shotMadeFlag\n            gameDate\n            htm\n            vtm\n        }\n          shotFreq {\n            playerId\n            playerName\n            playerLastTeamId\n            playerLastTeamAbbreviation\n            age\n            gp\n            g\n            fgaFrequency\n            fgm\n            fga\n            fgPct\n            efgPct\n            fg2aFrequency\n            fG2M\n            fG2A\n            fg2Pct\n            fg3aFrequency\n            fG3M\n            fG3A\n            fg3Pct\n          }\n    }\n`\n\nfunction Player({match}) {\n    const { id } = match.params;\n    const [seasonStats, setSeasonStats] = useState([])\n    const [playerInfo, setPlayerInfo] = useState([])\n    const [playerGames, setPlayerGames] = useState([])\n    const [shotData, setShotData] = useState([])\n    const [shotFreq, setShotFreq] = useState([])\n    const [topStats, setTopStats] = useState([])\n    \n    const [currentPlayer, setCurrentPlayer] = useState(parseInt(id));\n\n    const { loading, error, data } = useQuery(Player_Query, {\n        variables: {playerId: currentPlayer}\n    });\n\n    const [dataLoaded, setDataLoaded] = useState(false);\n    \n    useEffect(() => {\n        setDataLoaded(false)\n        if (id) {\n            if (!loading) {\n                var temp_arr = []\n                var temp_arr1 = []\n                var temp_arr2 = []\n                var temp_arr3 = []\n                temp_arr = data['historicStats'].filter((item) =>\n                    item.seasonId === \"2020-21\"\n                    // (item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\") || \n                    // item.seasonId !== \"2020-21\"\n                )\n                setSeasonStats(temp_arr.slice(temp_arr.length - 1, temp_arr.length))\n                setPlayerInfo(data['playerInfo'])\n\n                // data['leagueGameLog']['resultSets'][0]['rowSet'].map((item) => (\n                //     temp_arr1.push({\n                //         gameID:item[6],\n                //         date: item[7],\n                //         matchup: item[8],\n                //         wl:item[9],\n                //         fgPct:parseFloat(item[13]*100).toFixed(1)+\"%\",\n                //         fg3Pct:parseFloat(item[16]*100).toFixed(1)+\"%\",\n                //         ftPct:parseFloat(item[19]*100).toFixed(1)+\"%\",\n                //         min:item[10],\n                //         reb:item[22],\n                //         ast:item[23],\n                //         blk:item[25],\n                //         stl:item[24],\n                //         tov:item[26],\n                //         pf:item[27],\n                //         pts:item[28]\n                //     })\n                // ))\n                // setPlayerGames(temp_arr1)\n                for (var key of Object.keys(data.topStats)) {\n                    if (key !== \"__typename\") {\n                        temp_arr2.push(data.topStats[key])\n                    }\n                }\n                setTopStats(temp_arr2)\n                setShotData(data['shots'])\n                temp_arr3 = data['shotFreq'].filter((item) =>\n                    item.playerId == id\n                )\n                temp_arr3 = [{...temp_arr3, ftPct: 1}]\n                console.log(temp_arr3)\n                setShotFreq(temp_arr3)\n                setDataLoaded(true);\n            }\n        }\n    }, [data]);\n    if (loading) return 'Loading...';\n\n    if (dataLoaded) {\n        console.log(shotFreq)\n    } \n\n    return (\n        <div className = \"playerPageContainer\">\n            <SearchBar setCurrentPlayer = {setCurrentPlayer} setDataLoaded={setDataLoaded} playerInfo={playerInfo} />\n            { !id && <PlayerHome />}\n            {(dataLoaded && !error && id)  && \n                <>\n                <div className=\"playerDashboard\">\n                    <PlayerProfile playerInfo={playerInfo} seasonStats = {seasonStats}/>\n                    <div style ={{display: \"flex\"}}>\n                        <RadarStats config = {seasonStats} statData = {topStats} style = {{height:'500px', width:'500px'}} size = {160}/>\n                        <div>\n\n                        </div>\n                    </div>\n                    {/* <Gauge config = {} /> */}\n                    {/* <ShotChart shotData = {shotData} /> */}\n                    {/* <Boxscores data = {playerGames} /> */}\n                </div>\n            </>}\n            { error && id && <div> {error.message} </div>}\n            { !dataLoaded && id && <div>Loading</div> }\n            \n         </div>\n    )\n}\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}