{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/CirclePacking.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nconst data1 = {\n  \"name\": \"flare\",\n  \"children\": [{\n    \"name\": \"analytics\",\n    \"children\": [{\n      \"name\": \"cluster\",\n      \"children\": [{\n        \"name\": \"AgglomerativeCluster\",\n        \"size\": 3938\n      }, {\n        \"name\": \"CommunityStructure\",\n        \"size\": 3812\n      }, {\n        \"name\": \"MergeEdge\",\n        \"size\": 743\n      }]\n    }, {\n      \"name\": \"graph\",\n      \"children\": [{\n        \"name\": \"BetweennessCentrality\",\n        \"size\": 3534\n      }, {\n        \"name\": \"LinkDistance\",\n        \"size\": 5731\n      }]\n    }]\n  }]\n};\n\nfunction CirclePacking() {\n  _s();\n\n  const [data, setData] = useState(data1);\n  const svgRef = useRef();\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    var root = d3.hierarchy(data).count().sort((a, b) => b.value - a.value);\n    var packLayout = d3.pack().size([300, 300]).padding(5);\n    packingLayout(root);\n    svg.attr(\"width\", 300).attr(\"height\", 300).attr(\"class\", \"packingLayout\");\n    svg.append('g').selectAll('circle').data(rootNode.descendants().slice(1)).enter().append('circle').attr('cx', function (d) {\n      return 1;\n    }).attr('cy', function (d) {\n      return 1;\n    }).attr('r', function (d) {\n      return 1;\n    }); // svg.selectAll(\"path\")\n    //     .data([data])\n    //     .join(\"path\")\n    //     .attr(\"d\", value => myLine(value))\n    //     .attr(\"fill\", \"none\")\n    //     .attr(\"stroke\", \"red\")\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    children: /*#__PURE__*/_jsxDEV(\"g\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CirclePacking, \"KMgTrjezITbmE5ElKm25tkJ8Y1A=\");\n\n_c = CirclePacking;\nexport default CirclePacking;\n\nvar _c;\n\n$RefreshReg$(_c, \"CirclePacking\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/CirclePacking.js"],"names":["React","useRef","useState","useEffect","d3","data1","CirclePacking","data","setData","svgRef","svg","select","current","root","hierarchy","count","sort","a","b","value","packLayout","pack","size","padding","packingLayout","attr","append","selectAll","rootNode","descendants","slice","enter","d"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAEA,MAAMC,KAAK,GAAG;AACV,UAAQ,OADE;AAEV,cAAY,CACX;AACC,YAAQ,WADT;AAEC,gBAAY,CACX;AACC,cAAQ,SADT;AAEC,kBAAY,CACX;AAAC,gBAAQ,sBAAT;AAAiC,gBAAQ;AAAzC,OADW,EAEX;AAAC,gBAAQ,oBAAT;AAA+B,gBAAQ;AAAvC,OAFW,EAGX;AAAC,gBAAQ,WAAT;AAAsB,gBAAQ;AAA9B,OAHW;AAFb,KADW,EASX;AACC,cAAQ,OADT;AAEC,kBAAY,CACX;AAAC,gBAAQ,uBAAT;AAAkC,gBAAQ;AAA1C,OADW,EAEX;AAAC,gBAAQ,cAAT;AAAyB,gBAAQ;AAAjC,OAFW;AAFb,KATW;AAFb,GADW;AAFF,CAAd;;AA0BA,SAASC,aAAT,GAAyB;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAACG,KAAD,CAAhC;AACA,QAAMI,MAAM,GAAGR,MAAM,EAArB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,GAAG,GAAGN,EAAE,CAACO,MAAH,CAAUF,MAAM,CAACG,OAAjB,CAAZ;AAEA,QAAIC,IAAI,GAAGT,EAAE,CAACU,SAAH,CAAaP,IAAb,EACEQ,KADF,GAEEC,IAFF,CAEO,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAF5B,CAAX;AAGA,QAAIC,UAAU,GAAGhB,EAAE,CAACiB,IAAH,GACZC,IADY,CACP,CAAC,GAAD,EAAM,GAAN,CADO,EAEZC,OAFY,CAEJ,CAFI,CAAjB;AAIAC,IAAAA,aAAa,CAACX,IAAD,CAAb;AAEAH,IAAAA,GAAG,CAACe,IAAJ,CAAS,OAAT,EAAkB,GAAlB,EACKA,IADL,CACU,QADV,EACoB,GADpB,EAEKA,IAFL,CAEU,OAFV,EAEmB,eAFnB;AAIAf,IAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EACKC,SADL,CACe,QADf,EAEKpB,IAFL,CAEUqB,QAAQ,CAACC,WAAT,GAAuBC,KAAvB,CAA6B,CAA7B,CAFV,EAGKC,KAHL,GAIKL,MAJL,CAIY,QAJZ,EAKKD,IALL,CAKU,IALV,EAKgB,UAASO,CAAT,EAAY;AAAE,aAAO,CAAP;AAAW,KALzC,EAMKP,IANL,CAMU,IANV,EAMgB,UAASO,CAAT,EAAY;AAAE,aAAO,CAAP;AAAW,KANzC,EAOKP,IAPL,CAOU,GAPV,EAOe,UAASO,CAAT,EAAY;AAAE,aAAO,CAAP;AAAW,KAPxC,EAhBY,CAyBZ;AACA;AACA;AACA;AACA;AACA;AAEH,GAhCQ,EAgCP,EAhCO,CAAT;AAiCA,sBACI;AAAK,IAAA,GAAG,EAAIvB,MAAZ;AAAA,2BAAoB;AAAA;AAAA;AAAA;AAAA;AAApB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAzCQH,a;;KAAAA,a;AA2CT,eAAeA,aAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\nimport * as d3 from 'd3'\n\nconst data1 = {\n    \"name\": \"flare\",\n    \"children\": [\n     {\n      \"name\": \"analytics\",\n      \"children\": [\n       {\n        \"name\": \"cluster\",\n        \"children\": [\n         {\"name\": \"AgglomerativeCluster\", \"size\": 3938},\n         {\"name\": \"CommunityStructure\", \"size\": 3812},\n         {\"name\": \"MergeEdge\", \"size\": 743}\n        ]\n       },\n       {\n        \"name\": \"graph\",\n        \"children\": [\n         {\"name\": \"BetweennessCentrality\", \"size\": 3534},\n         {\"name\": \"LinkDistance\", \"size\": 5731}\n        ]\n       }\n      ]\n     }\n    ]\n   }\n\nfunction CirclePacking() {\n    \n    const [data, setData] = useState(data1)\n    const svgRef = useRef()\n    \n    useEffect(() => {\n        const svg = d3.select(svgRef.current)\n\n        var root = d3.hierarchy(data)\n                    .count()\n                    .sort((a,b) => b.value - a.value);\n        var packLayout = d3.pack()\n            .size([300, 300])\n            .padding(5)\n\n        packingLayout(root)\n\n        svg.attr(\"width\", 300)\n            .attr(\"height\", 300)\n            .attr(\"class\", \"packingLayout\")\n\n        svg.append('g')\n            .selectAll('circle')\n            .data(rootNode.descendants().slice(1))\n            .enter()\n            .append('circle')\n            .attr('cx', function(d) { return 1; })\n            .attr('cy', function(d) { return 1; })\n            .attr('r', function(d) { return 1; })\n\n        // svg.selectAll(\"path\")\n        //     .data([data])\n        //     .join(\"path\")\n        //     .attr(\"d\", value => myLine(value))\n        //     .attr(\"fill\", \"none\")\n        //     .attr(\"stroke\", \"red\")\n\n    },[])\n    return (\n        <svg ref = {svgRef}><g></g></svg>\n    )\n}\n\nexport default CirclePacking\n"]},"metadata":{},"sourceType":"module"}