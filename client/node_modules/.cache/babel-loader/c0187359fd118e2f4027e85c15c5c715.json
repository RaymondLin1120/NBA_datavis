{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/CirclePacking.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nconst data = {\n  \"name\": \"flare\",\n  \"children\": [{\n    \"name\": \"analytics\",\n    \"children\": [{\n      \"name\": \"cluster\",\n      \"children\": [{\n        \"name\": \"AgglomerativeCluster\",\n        \"size\": 3938\n      }, {\n        \"name\": \"CommunityStructure\",\n        \"size\": 3812\n      }, {\n        \"name\": \"MergeEdge\",\n        \"size\": 743\n      }]\n    }, {\n      \"name\": \"graph\",\n      \"children\": [{\n        \"name\": \"BetweennessCentrality\",\n        \"size\": 3534\n      }, {\n        \"name\": \"LinkDistance\",\n        \"size\": 5731\n      }]\n    }]\n  }]\n};\n\nfunction CirclePacking() {\n  _s();\n\n  const [data, setData] = useState();\n  const svgRef = useRef();\n  useEffect(() => {\n    setData(data);\n    const svg = d3.select(svgRef.current);\n    var root = d3.tree(d3.hierarchy(data)); // var diameter = 300\n    // var packLayout = d3.pack()\n    //     .size([diameter, diameter])\n    //     .padding(1.5);\n    // var rootNode = d3.hierarchy(data)\n    // // console.log(data)\n    // // rootNode.sum(function(d) {\n    // //     return d.value;\n    // // });   \n    // // packLayout(rootNode);\n    // // const myLine = d3.line()\n    // //     .x((value, index) => index * 50)\n    // //     .y(value => 150 - value)\n    // svg.attr(\"width\", diameter)\n    //     .attr(\"height\", diameter)\n    //     .attr(\"class\", \"packingLayout\")\n    // svg.selectAll('circle').join('g')\n    //     .data(rootNode.descendants())\n    //     .enter()\n    //     .append('circle')\n    //     .attr('cx', d => d.x)\n    //     .attr('cy', d => d.y)\n    //     .attr('r', d => d.r)\n    //     .attr('fill', 'red')\n    // svg.selectAll(\"path\")\n    //     .data([data])\n    //     .join(\"path\")\n    //     .attr(\"d\", value => myLine(value))\n    //     .attr(\"fill\", \"none\")\n    //     .attr(\"stroke\", \"red\")\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CirclePacking, \"eh52KZoV+UbjRRIA4u86q0In74g=\");\n\n_c = CirclePacking;\nexport default CirclePacking;\n\nvar _c;\n\n$RefreshReg$(_c, \"CirclePacking\");","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/CirclePacking.js"],"names":["React","useRef","useState","useEffect","d3","data","CirclePacking","setData","svgRef","svg","select","current","root","tree","hierarchy"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAGA,MAAMC,IAAI,GAAG;AACT,UAAQ,OADC;AAET,cAAY,CACX;AACC,YAAQ,WADT;AAEC,gBAAY,CACX;AACC,cAAQ,SADT;AAEC,kBAAY,CACX;AAAC,gBAAQ,sBAAT;AAAiC,gBAAQ;AAAzC,OADW,EAEX;AAAC,gBAAQ,oBAAT;AAA+B,gBAAQ;AAAvC,OAFW,EAGX;AAAC,gBAAQ,WAAT;AAAsB,gBAAQ;AAA9B,OAHW;AAFb,KADW,EASX;AACC,cAAQ,OADT;AAEC,kBAAY,CACX;AAAC,gBAAQ,uBAAT;AAAkC,gBAAQ;AAA1C,OADW,EAEX;AAAC,gBAAQ,cAAT;AAAyB,gBAAQ;AAAjC,OAFW;AAFb,KATW;AAFb,GADW;AAFH,CAAb;;AA2BA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM,CAACD,IAAD,EAAOE,OAAP,IAAkBL,QAAQ,EAAhC;AACA,QAAMM,MAAM,GAAGP,MAAM,EAArB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,OAAO,CAACF,IAAD,CAAP;AACA,UAAMI,GAAG,GAAGL,EAAE,CAACM,MAAH,CAAUF,MAAM,CAACG,OAAjB,CAAZ;AAEA,QAAIC,IAAI,GAAGR,EAAE,CAACS,IAAH,CAAQT,EAAE,CAACU,SAAH,CAAaT,IAAb,CAAR,CAAX,CAJY,CAMZ;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GA5CQ,EA4CP,EA5CO,CAAT;AA8CA,sBACI;AAAK,IAAA,GAAG,EAAIG,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GArDQF,a;;KAAAA,a;AAuDT,eAAeA,aAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\nimport * as d3 from 'd3'\n\n\nconst data = {\n    \"name\": \"flare\",\n    \"children\": [\n     {\n      \"name\": \"analytics\",\n      \"children\": [\n       {\n        \"name\": \"cluster\",\n        \"children\": [\n         {\"name\": \"AgglomerativeCluster\", \"size\": 3938},\n         {\"name\": \"CommunityStructure\", \"size\": 3812},\n         {\"name\": \"MergeEdge\", \"size\": 743}\n        ]\n       },\n       {\n        \"name\": \"graph\",\n        \"children\": [\n         {\"name\": \"BetweennessCentrality\", \"size\": 3534},\n         {\"name\": \"LinkDistance\", \"size\": 5731}\n        ]\n       }\n      ]\n     }\n    ]\n   }\n\n\nfunction CirclePacking() {\n    const [data, setData] = useState()\n    const svgRef = useRef()\n\n    useEffect(() => {\n        setData(data)\n        const svg = d3.select(svgRef.current)\n\n        var root = d3.tree(d3.hierarchy(data))\n\n        // var diameter = 300\n        // var packLayout = d3.pack()\n        //     .size([diameter, diameter])\n        //     .padding(1.5);\n\n\n        // var rootNode = d3.hierarchy(data)\n        // // console.log(data)\n        // // rootNode.sum(function(d) {\n        // //     return d.value;\n        // // });   \n\n        // // packLayout(rootNode);\n\n        // // const myLine = d3.line()\n        // //     .x((value, index) => index * 50)\n        // //     .y(value => 150 - value)\n\n        // svg.attr(\"width\", diameter)\n        //     .attr(\"height\", diameter)\n        //     .attr(\"class\", \"packingLayout\")\n        \n\n        // svg.selectAll('circle').join('g')\n        //     .data(rootNode.descendants())\n        //     .enter()\n        //     .append('circle')\n        //     .attr('cx', d => d.x)\n        //     .attr('cy', d => d.y)\n        //     .attr('r', d => d.r)\n        //     .attr('fill', 'red')\n        // svg.selectAll(\"path\")\n        //     .data([data])\n        //     .join(\"path\")\n        //     .attr(\"d\", value => myLine(value))\n        //     .attr(\"fill\", \"none\")\n        //     .attr(\"stroke\", \"red\")\n\n    },[])\n\n    return (\n        <svg ref = {svgRef}> </svg>\n    )\n}\n\nexport default CirclePacking\n"]},"metadata":{},"sourceType":"module"}