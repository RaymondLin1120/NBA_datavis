{"ast":null,"code":"var d3 = require('d3');\n\nvar flare = require('./flare');\n\nvar node = document.createElement('div');\nvar diameter = 960,\n    format = d3.format(\",d\"),\n    color = d3.scale.category20c();\nvar bubble = d3.layout.pack().sort(null).size([diameter, diameter]).padding(1.5);\nvar svg = d3.select(node).append(\"svg\").attr(\"width\", diameter).attr(\"height\", diameter).attr(\"class\", \"bubble\");\nvar Node = svg.selectAll(\".node\").data(bubble.nodes(classes(flare)).filter(function (d) {\n  return !d.children;\n})).enter().append(\"g\").attr(\"class\", \"node\").attr(\"transform\", function (d) {\n  return \"translate(\" + d.x + \",\" + d.y + \")\";\n});\nNode.append(\"title\").text(function (d) {\n  return d.className + \": \" + format(d.value);\n});\nNode.append(\"circle\").attr(\"r\", function (d) {\n  return d.r;\n}).style(\"fill\", function (d) {\n  return color(d.packageName);\n});\nNode.append(\"text\").attr(\"dy\", \".3em\").style(\"text-anchor\", \"middle\").text(function (d) {\n  return d.className.substring(0, d.r / 3);\n}); // Returns a flattened hierarchy containing all leaf nodes under the flare.\n\nfunction classes(flare) {\n  var classes = [];\n\n  function recurse(name, Node) {\n    if (Node.children) Node.children.forEach(function (child) {\n      recurse(Node.name, child);\n    });else classes.push({\n      packageName: name,\n      className: Node.name,\n      value: Node.size\n    });\n  }\n\n  recurse(null, flare);\n  return {\n    children: classes\n  };\n}\n\nmodule.exports = node;","map":{"version":3,"sources":["/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/d3file.js"],"names":["d3","require","flare","node","document","createElement","diameter","format","color","scale","category20c","bubble","layout","pack","sort","size","padding","svg","select","append","attr","Node","selectAll","data","nodes","classes","filter","d","children","enter","x","y","text","className","value","r","style","packageName","substring","recurse","name","forEach","child","push","module","exports"],"mappings":"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","sourcesContent":["var d3 = require('d3');\nvar flare = require('./flare');\nvar node = document.createElement('div');\n\nvar diameter = 960,\n    format = d3.format(\",d\"),\n    color = d3.scale.category20c();\n\nvar bubble = d3.layout.pack()\n    .sort(null)\n    .size([diameter, diameter])\n    .padding(1.5);\n\nvar svg = d3.select(node).append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n    .attr(\"class\", \"bubble\");\n\nvar Node = svg.selectAll(\".node\")\n    .data(bubble.nodes(classes(flare))\n    .filter(function(d) { return !d.children; }))\n    .enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  Node.append(\"title\")\n      .text(function(d) { return d.className + \": \" + format(d.value); });\n\n  Node.append(\"circle\")\n      .attr(\"r\", function(d) { return d.r; })\n      .style(\"fill\", function(d) { return color(d.packageName); });\n\n  Node.append(\"text\")\n      .attr(\"dy\", \".3em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.className.substring(0, d.r / 3); });\n\n// Returns a flattened hierarchy containing all leaf nodes under the flare.\nfunction classes(flare) {\n  var classes = [];\n\n  function recurse(name, Node) {\n    if (Node.children) Node.children.forEach(function(child) { recurse(Node.name, child); });\n    else classes.push({packageName: name, className: Node.name, value: Node.size});\n  }\n\n  recurse(null, flare);\n  return {children: classes};\n}\n\n\nmodule.exports = node;"]},"metadata":{},"sourceType":"module"}