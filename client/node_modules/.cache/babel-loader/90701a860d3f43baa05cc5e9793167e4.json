{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/PlayerShotchart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport nba from 'nba';\nimport * as d3 from 'd3';\nimport { court, shots } from 'd3-shotchart';\nimport { hexbin } from 'd3-hexbin'; //window.d3_hexbin = {hexbin: hexbin} // workaround library problem\n\nexport default function PlayerShotchart() {\n  _s();\n\n  useEffect(() => {\n    nba.stats.shots({\n      PlayerID: \"2546\"\n    }).then(response => {\n      const final_shots = response.shot_Chart_Detail.map(shot => ({\n        x: (shot.locX + 250) / 10,\n        y: (shot.locY + 50) / 10,\n        action_type: shot.actionType,\n        shot_distance: shot.shotDistance,\n        shot_made_flag: shot.shotMadeFlag\n      }));\n      const courtSelection = d3.select(\"#shot-chart\"); // without this line, all updates on court would be ineffect only after changing chartType\n\n      courtSelection.html('');\n      const chart_court = d3shot.court().width(500);\n      const chart_shots = shots().shotRenderThreshold(this.props.minCount).displayToolTips(this.props.displayToolTips).displayType(this.props.chartType); // selection.call always return the selection and not the return value of function passed in\n\n      courtSelection.call(chart_court);\n      courtSelection.datum(final_shots).call(chart_shots);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"shot-chart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlayerShotchart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PlayerShotchart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerShotchart\");","map":{"version":3,"sources":["/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/PlayerShotchart.js"],"names":["React","useState","useEffect","nba","d3","court","shots","hexbin","PlayerShotchart","stats","PlayerID","then","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","select","html","chart_court","d3shot","width","chart_shots","shotRenderThreshold","props","minCount","displayToolTips","displayType","chartType","call","datum"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,cAA7B;AACA,SAASC,MAAT,QAAuB,WAAvB,C,CAEA;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AAEtCN,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,GAAG,CAACM,KAAJ,CAAUH,KAAV,CAAgB;AACZI,MAAAA,QAAQ,EAAE;AADE,KAAhB,EAGCC,IAHD,CAGOC,QAAD,IAAc;AAChB,YAAMC,WAAW,GAAGD,QAAQ,CAACE,iBAAT,CAA2BC,GAA3B,CAA+BC,IAAI,KAAK;AACxDC,QAAAA,CAAC,EAAE,CAACD,IAAI,CAACE,IAAL,GAAY,GAAb,IAAoB,EADiC;AAExDC,QAAAA,CAAC,EAAE,CAACH,IAAI,CAACI,IAAL,GAAY,EAAb,IAAmB,EAFkC;AAGxDC,QAAAA,WAAW,EAAEL,IAAI,CAACM,UAHsC;AAIxDC,QAAAA,aAAa,EAAEP,IAAI,CAACQ,YAJoC;AAKxDC,QAAAA,cAAc,EAAET,IAAI,CAACU;AALmC,OAAL,CAAnC,CAApB;AAQA,YAAMC,cAAc,GAAGvB,EAAE,CAACwB,MAAH,CAAU,aAAV,CAAvB,CATgB,CAUhB;;AACAD,MAAAA,cAAc,CAACE,IAAf,CAAoB,EAApB;AACA,YAAMC,WAAW,GAAGC,MAAM,CAAC1B,KAAP,GAAe2B,KAAf,CAAqB,GAArB,CAApB;AACA,YAAMC,WAAW,GAAG3B,KAAK,GACF4B,mBADH,CACuB,KAAKC,KAAL,CAAWC,QADlC,EAEGC,eAFH,CAEmB,KAAKF,KAAL,CAAWE,eAF9B,EAGGC,WAHH,CAGe,KAAKH,KAAL,CAAWI,SAH1B,CAApB,CAbgB,CAiBhB;;AACAZ,MAAAA,cAAc,CAACa,IAAf,CAAoBV,WAApB;AACAH,MAAAA,cAAc,CAACc,KAAf,CAAqB5B,WAArB,EAAkC2B,IAAlC,CAAuCP,WAAvC;AACH,KAvBD;AAwBH,GAzBQ,CAAT;AA2BA,sBACI;AAAK,IAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAhCuBzB,e;;KAAAA,e","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport nba from 'nba';\nimport * as d3 from 'd3';\nimport { court, shots } from 'd3-shotchart';\nimport { hexbin } from 'd3-hexbin';\n\n//window.d3_hexbin = {hexbin: hexbin} // workaround library problem\n\nexport default function PlayerShotchart() {\n\n    useEffect(() => {\n        nba.stats.shots({\n            PlayerID: \"2546\"\n        })\n        .then((response) => {\n            const final_shots = response.shot_Chart_Detail.map(shot => ({\n                x: (shot.locX + 250) / 10,\n                y: (shot.locY + 50) / 10,\n                action_type: shot.actionType,\n                shot_distance: shot.shotDistance,\n                shot_made_flag: shot.shotMadeFlag,\n            }))\n\n            const courtSelection = d3.select(\"#shot-chart\")\n            // without this line, all updates on court would be ineffect only after changing chartType\n            courtSelection.html('')\n            const chart_court = d3shot.court().width(500)\n            const chart_shots = shots()\n                                  .shotRenderThreshold(this.props.minCount)\n                                  .displayToolTips(this.props.displayToolTips)\n                                  .displayType(this.props.chartType)\n            // selection.call always return the selection and not the return value of function passed in\n            courtSelection.call(chart_court)\n            courtSelection.datum(final_shots).call(chart_shots)\n        })\n    })\n\n    return (\n        <div id=\"shot-chart\"></div>\n    )\n}"]},"metadata":{},"sourceType":"module"}