[{"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/index.js":"1","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/reportWebVitals.js":"2","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/App.js":"3","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Home.js":"4","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Sidebar/Sidebar.js":"5","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/PostMasonry.js":"6","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/Post.js":"7","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/RadarStats.js":"8","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Chart.js":"9","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/EChart.js":"10","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/Player.js":"11","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Games/Games.js":"12","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/PlayerProfile.js":"13","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Boxscores.js":"14","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/SearchBar/SearchBar.js":"15"},{"size":530,"mtime":1612123622346,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1611373027005,"results":"18","hashOfConfig":"17"},{"size":1894,"mtime":1612595676399,"results":"19","hashOfConfig":"17"},{"size":1392,"mtime":1611526571698,"results":"20","hashOfConfig":"17"},{"size":2344,"mtime":1612503181986,"results":"21","hashOfConfig":"17"},{"size":381,"mtime":1611522742966,"results":"22","hashOfConfig":"17"},{"size":668,"mtime":1611528101626,"results":"23","hashOfConfig":"17"},{"size":2468,"mtime":1612503181984,"results":"24","hashOfConfig":"17"},{"size":1174,"mtime":1612154624341,"results":"25","hashOfConfig":"17"},{"size":615,"mtime":1612151361823,"results":"26","hashOfConfig":"17"},{"size":6782,"mtime":1612595676562,"results":"27","hashOfConfig":"17"},{"size":2549,"mtime":1612503181986,"results":"28","hashOfConfig":"17"},{"size":980,"mtime":1612595604828,"results":"29","hashOfConfig":"17"},{"size":4023,"mtime":1612503181983,"results":"30","hashOfConfig":"17"},{"size":1211,"mtime":1612595676400,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1gpbztv",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/index.js",[],["69","70"],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/reportWebVitals.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/App.js",["71"],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Home.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Sidebar/Sidebar.js",["72","73","74"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { BiBasketball } from 'react-icons/bi';\nimport { MdPeople, MdCompareArrows, MdSearch} from 'react-icons/md';\nimport { VscGraph } from 'react-icons/vsc';\nimport { ImEyedropper } from 'react-icons/im';\nimport { IconContext } from 'react-icons/lib';\n\nconst navIcons = [\n    {\n        title: 'Home',\n        name: 'Home',\n        icon: <BiBasketball />,\n        path: '/Home'\n    },\n    {\n        title: 'Search',\n        name: 'Categories',\n        icon: <MdSearch />,\n        path: '/Categories'\n    },\n    {\n        title: 'Player',\n        name: 'Player Stats',\n        icon:<VscGraph className = \"nav-Icons\"/>,\n        path: '/Player'\n    },\n    {\n        title: 'Player-Comparison',\n        name: 'Compare',\n        icon: <MdCompareArrows className = \"nav-Icons\"/>,\n        path: '/Player-Comparison'\n    },\n    {\n        title: 'Team-Comparison',\n        name: 'Team Comparison',\n        icon: <MdPeople />,\n        path: '/Team-Comparison'\n    }\n]\n\n\nfunction Sidebar() {\n    return (\n        <div className = \"sidebar-container\">\n            <ul>    \n            <IconContext.Provider value = {{color: 'white', size: '30px'}}>\n                { navIcons.map((item, index) => (\n                    <li className = 'listItems' key ={index}>\n                        <Link to={item.path}>\n                            {item.icon}\n                            <p> {item.name}</p>\n                        </Link>\n                    </li>\n                ))}\n                    <li className = 'theme-button'>\n                        <ImEyedropper />\n                        <p> Change Theme </p>\n                    </li>\n                </IconContext.Provider>\n            </ul>\n        </div>\n    )\n}\nexport default Sidebar","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/PostMasonry.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/Post.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/RadarStats.js",["75"],"import { getCoordinateSystemDimensions } from 'echarts';\nimport React from 'react'\nimport Chart from './Chart'\nimport EChart from './EChart.js'\n\nfunction RadarStats({ config, resize , style}) {\n    let option = {\n      title: {\n          text: 'Averages',\n      },\n      //backgroundColor: '#161627',\n      tooltip: {\n        //   axisPointer : {\n        //       type:'cross'\n        //   }\n      },\n      toolbox: {\n        show: true,\n        feature: {\n            saveAsImage: {}\n        }\n      },\n      legend: {\n          data: config['seasonId']\n      },\n      radar: [{\n          // shape: 'circle',\n          name: {\n              textStyle: {\n                  color: '#fff',\n                  backgroundColor: '#999',\n                  borderRadius: 3,\n                  padding: [3, 5]\n              }\n          },\n          shape: 'circle',\n          center: ['25%', '50%'],\n          indicator: [\n              { name: 'Points', max: 40},\n              { name: 'Rebounds', max: 15},\n              { name: 'Assists', max: 15},\n              { name: 'Steals', max: 5},\n              { name: 'Blocks', max: 2},\n          ]\n      },\n      {\n        name: {\n            textStyle: {\n                color: '#fff',\n                backgroundColor: '#999',\n                borderRadius: 3,\n                padding: [3, 5]\n            }\n        },\n        shape: 'circle',\n        center: ['75%', '50%'],\n        indicator: [\n            { name: 'Field Goal %', max: 1},\n            { name: 'Free Throw %', max: 1},\n            { name: '3P FG %', max: 1},\n            { name: 'Field Goal Attempts', max: 25},\n            { name: 'Free Throw Attempts', max: 20},\n            { name: '3-Point Attempts', max: 20}\n        ]\n      }],\n      series: [{\n        //axisName: 'James Harden Average',\n        type: 'radar',\n        //areaStyle: {normal: {}},\n        data: \n            config.map((item) => ({\n                value: [item.pts, item.reb, item.ast, item.stl, item.blk], \n                name: item.seasonId\n            }))\n      },\n      {\n        //axisName: 'James Harden Average',\n        type: 'radar',\n        radarIndex: 1,\n        //areaStyle: {normal: {}},\n        data: \n            config.map((item) => ({\n                value: [item.fgPct, item.ftPct, item.fg3Pct, item.fga, item.fta, item.fG3A], \n                name: item.seasonId\n            }))\n      }]\n  };\n\n  return (\n        <Chart config={config}>\n            <EChart option={ option } resize={resize} style={ style }/>\n        </Chart>\n    )\n}\n  \n  export default RadarStats","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Chart.js",["76","77"],"import React, { useState } from 'react'\n// import OptionsDropdown from './OptionsDropdown'\n\nexport default function Chart ({ children, config, style }) {\n\n    const [optionsVisible, setOptionsVisible] = useState(false)\n\n    // let options =  {\n    //     'FullScreen': {\n    //         icon: 'ion-ios-expand',\n    //         cb: () => {\n    //             // TODO\n    //         }\n    //     },\n    //     'Export to CSV': {\n    //         icon: 'ion-ios-filing',\n    //         cb: () => {\n    //             // TODO\n    //         }\n    //     }\n    // }\n\n    return (\n        <section className=\"chart\">\n            <span className=\"options-container\">\n                    {/* <OptionsDropdown\n                        options={ options }\n                        visible={ optionsVisible }\n                        cb={ () => setOptionsVisible(false) }\n                    >\n                        <i\n                            className=\"ion-ios-more\"\n                            onClick={ () => setOptionsVisible(!optionsVisible) }\n                        />\n                    </OptionsDropdown> */}\n            </span>\n        { children }\n        </section>\n    )\n}","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/EChart.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/Player.js",["78","79"],"import React, { useEffect, useState } from 'react';\nimport PlayerProfile from './PlayerProfile';\nimport { useQuery, gql } from \"@apollo/client\";\nimport RadarStats from '../../Components/Graphing/RadarStats'\nimport SearchBar from '../../Components/SearchBar/SearchBar'\nimport Boxscores from '../../Components/Graphing/Boxscores'\nimport { MdBlock } from 'react-icons/md';\n\nconst Player_Query = gql`\n<<<<<<< HEAD\n    query PlayerQuery ($playerName: String = \"Bradley Beal\") {\n        historicStats (playerName: $playerName) {\n            playerId\n            seasonId\n            pts\n            reb\n            ast\n            fG3M\n            stl\n            blk\n            min\n            tov\n            fga\n            fG3A\n            fgPct\n            ftPct\n            fg3Pct\n            fta\n            teamAbbreviation\n        }\n        playerInfo (playerName: $playerName) {\n            personId\n            displayFirstLast\n            jersey\n            position\n            teamName\n            teamCity\n        }\n          topStats{\n            top30 {\n                pts:PTS\n                reb:REB\n                ast:AST\n                stl:STL\n                blk:BLK\n                tov:TOV\n            }\n            top70 {\n                pts:PTS\n                reb:REB\n                ast:AST\n                stl:STL\n                blk:BLK\n                tov:TOV\n            }\n            top120 {\n                pts:PTS\n                reb:REB\n                ast:AST\n                stl:STL\n                blk:BLK\n                tov:TOV\n            }\n            top180 {\n                pts:PTS\n                reb:REB\n                ast:AST\n                stl:STL\n                blk:BLK\n                tov:TOV\n            }\n          }\n          leagueGameLog(playerName: $playerName) {\n            resource,\n            parameters {\n              LeagueID\n              Season\n              SeasonType\n              PlayerOrTeam\n              Counter\n              Sorter\n              Direction\n              DateFrom\n              DateTo\n            },\n            resultSets {\n              name\n              headers\n              rowSet\n            }\n=======\nquery PlayerQuery ($playerName: String = \"Bradley Beal\") {\n    historicStats (playerName: $playerName) {\n        playerId\n        seasonId\n        pts\n        reb\n        ast\n        fG3M\n        stl\n        blk\n        min\n        tov\n        fga\n        fG3A\n        fgPct\n        ftPct\n        fg3Pct\n        fta\n        teamAbbreviation\n    }\n    playerInfo (playerName: $playerName) {\n        personId\n        displayFirstLast\n        jersey\n        position\n        teamName\n        teamCity\n    }\n    currentStats {\n        playerId\n        playerName\n        teamId\n        teamAbbreviation\n        age\n        gp\n        w\n        l\n        wPct\n        min\n        fgm\n        fga\n        fgPct\n        fG3M\n        fG3A\n        fg3Pct\n        ftm\n        fta\n        ftPct\n        oreb\n        dreb\n        reb\n        ast\n        tov\n        stl\n        blk\n        blka\n        pf\n        pfd\n        pts\n        plusMinus\n        nbaFantasyPts\n        dD2\n        tD3\n        gpRank\n        wRank\n        lRank\n        wPctRank\n        minRank\n        fgmRank\n        fgaRank\n        fgPctRank\n        fg3mRank\n        fg3aRank\n        fg3PctRank\n        ftmRank\n        ftaRank\n        ftPctRank\n        orebRank\n        drebRank\n        rebRank\n        astRank\n        tovRank\n        stlRank\n        blkRank\n        blkaRank\n        pfRank\n        pfdRank\n        ptsRank\n        plusMinusRank\n        nbaFantasyPtsRank\n        dd2Rank\n        td3Rank\n      }\n      leagueGameLog(playerName: $playerName) {\n        resource,\n        parameters {\n          LeagueID\n          Season\n          SeasonType\n          PlayerOrTeam\n          Counter\n          Sorter\n          Direction\n          DateFrom\n          DateTo\n        },\n        resultSets {\n          name\n          headers\n          rowSet\n>>>>>>> b933ac83a456ea295310abf1178e7890e8d98332\n        }\n    }\n}\n`\n\nfunction Player(props) {\n\n    const [seasonStats, setSeasonStats] = useState([])\n    const [playerInfo, setPlayerInfo] = useState([])\n    const [playerGames, setPlayerGames] = useState([])\n    const [currentPlayer, setCurrentPlayer] = useState(useParams());\n\n    const history = useHistory();\n\n    const { loading, error, data } = useQuery(Player_Query, {\n        variables: {playerName: currentPlayer}\n    });\n    const [dataLoaded, setDataLoaded] = useState(false);\n    \n    useEffect(() => {\n        setDataLoaded(false)\n        if (!loading) {\n            var temp_arr = []\n            var temp_arr1 = []\n            temp_arr = data['historicStats'].filter((item) =>\n                (item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\") || \n                item.seasonId !== \"2020-21\"\n            )\n            setSeasonStats(temp_arr.slice(temp_arr.length - 3, temp_arr.length))\n            setPlayerInfo(data['playerInfo'])\n            //setPlayerGames(data['leagueGameLog']['resultSets'])\n            data['leagueGameLog']['resultSets'][0]['rowSet'].map((item) => (\n                temp_arr1.push({\n                    gameID:item[6],\n                    date: item[7],\n                    matchup: item[8],\n                    wl:item[9],\n                    fgPct:parseFloat(item[13]*100).toFixed(1)+\"%\",\n                    fg3Pct:parseFloat(item[16]*100).toFixed(1)+\"%\",\n                    ftPct:parseFloat(item[19]*100).toFixed(1)+\"%\",\n                    min:item[10],\n                    reb:item[22],\n                    ast:item[23],\n                    blk:item[25],\n                    stl:item[24],\n                    tov:item[26],\n                    pf:item[27],\n                    pts:item[28]\n                })\n            ))\n            setPlayerGames(temp_arr1)\n            setDataLoaded(true);\n        }\n    }, [data]);\n    if (loading) return 'Loading...';\n\n    if (dataLoaded) {\n        console.log(seasonStats)\n    }\n\n    return (\n        <div className = \"playerPageContainer\">\n            {props.name}\n            <SearchBar setCurrentPlayer = {setCurrentPlayer} setDataLoaded={setDataLoaded} playerInfo={playerInfo} />\n            {(dataLoaded && !error)  && \n                <>\n                <div className=\"playerDashboard\">\n                    <PlayerProfile playerInfo={playerInfo}/>\n                    <RadarStats config = {seasonStats} style = {{height:'350px', width:'900px'}} size = {100}/>\n                    <Boxscores data = {playerGames} />\n                </div>\n            </>}\n            { error && <div> {error.message} </div>}\n            { !dataLoaded  && <div>Loading</div> }\n         </div>\n    )\n}\n\nexport default Player;","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Games/Games.js",["80","81","82","83"],"import React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst Game_Query = gql`\n    query GameQuery {\n        scoreboard {\n            gameHeader {\n                gameDateEst\n                gameSequence\n                gameId\n                gameStatusId\n                gameStatusText\n                gamecode\n                homeTeamId\n                visitorTeamId\n                season\n                livePeriod\n                livePcTime\n                livePeriodTimeBcast\n            }\n            lineScore {\n                gameDateEst\n                gameSequence\n                gameId\n                teamId\n                teamAbbreviation\n                teamCityName\n                teamWinsLosses\n                ptsQtr1\n                ptsQtr2\n                ptsQtr3\n                ptsQtr4\n                ptsOt1\n                ptsOt2\n                ptsOt3\n                ptsOt4\n                pts\n                fgPct\n                ftPct\n                fg3Pct\n                ast\n                reb\n                tov\n            }\n        }\n    }\t\n`\n\nfunction Games() {\n    const [gameHeader, setGameHeader] = useState([]);\n    const [lineScore, setLineScore] = useState([]);\n    const [dataLoaded, setDataLoaded] = useState(false)\n    const { loading, error, data } = useQuery(Game_Query);\n    \n    var temp_arr = []\n    useEffect(() => {\n        if (!loading) {\n            setGameHeader(data['scoreboard']['gameHeader'])\n            setLineScore(data['scoreboard']['lineScore'])\n            setDataLoaded(true)\n        }\n    }, [data]);\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    console.log(lineScore)\n    return (\n        <section className = \"gameDashboard\">\n            { !dataLoaded && <div>Loading</div> }\n            {dataLoaded &&\n                <>\n                <h1 className = \"Date\"> Today's Games </h1>\n                <div className = \"gameContainer\">\n                    <img src = {require(\"../../Assets/Images/avatar.png\")} style = {{height: '100px', width: '100px'}}></img>\n                    <img src = {require(\"../../Assets/Images/avatar.png\")} style = {{height: '100px', width: '100px'}}></img>\n                    <p> {gameHeader[0]['homeTeamId']} </p>\n                    <p> {gameHeader[0]['visitorTeamId']} </p>\n                    <p> {gameHeader[0]['livePeriodTimeBcast']} </p>\n                </div>\n                </>\n            }  \n        </section>\n    )\n}\n\nexport default Games\n","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/PlayerProfile.js",["84","85"],"import React, { useEffect } from 'react';\nimport nba from 'nba'\nexport default function PlayerProfile(props) {\n    useEffect(() => {\n        console.log(props.playerInfo)\n    }, [])\n    return (\n        <section className=\"playerInfo-container\">\n        <div className=\"player-headshot\">\n            <img src = {`https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/${props.playerInfo[0].personId}.png`}></img>\n            <p> {props.playerInfo[0].personId} </p>\n            <p> {nba.teamIdFromName(\"Washington Wizards\")} </p>\n            <p> {props.playerInfo.displayFirstLast}</p>\n        </div>\n       \n        <div className=\"playerInfo\">\n            <p> Name: {props.playerInfo[0].displayFirstLast} </p>\n            <p> Team: {props.playerInfo[0].teamCity} {props.playerInfo[0].teamName} </p>\n            <p> Position: {props.playerInfo[0].position} </p>\n            <p> Jersey: {props.playerInfo[0].jersey} </p>\n        </div>\n    </section>\n    )\n}","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Boxscores.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/SearchBar/SearchBar.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":19,"column":53,"nodeType":"92","messageId":"93","endLine":19,"endColumn":55},{"ruleId":"94","severity":1,"message":"95","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":22},{"ruleId":"94","severity":1,"message":"98","line":4,"column":20,"nodeType":"96","messageId":"97","endLine":4,"endColumn":35},{"ruleId":"94","severity":1,"message":"99","line":5,"column":10,"nodeType":"96","messageId":"97","endLine":5,"endColumn":18},{"ruleId":"94","severity":1,"message":"100","line":1,"column":10,"nodeType":"96","messageId":"97","endLine":1,"endColumn":39},{"ruleId":"94","severity":1,"message":"101","line":6,"column":12,"nodeType":"96","messageId":"97","endLine":6,"endColumn":26},{"ruleId":"94","severity":1,"message":"102","line":6,"column":28,"nodeType":"96","messageId":"97","endLine":6,"endColumn":45},{"ruleId":"94","severity":1,"message":"103","line":7,"column":10,"nodeType":"96","messageId":"97","endLine":7,"endColumn":17},{"ruleId":"104","severity":1,"message":"105","line":138,"column":8,"nodeType":"106","endLine":138,"endColumn":14,"suggestions":"107"},{"ruleId":"94","severity":1,"message":"108","line":55,"column":9,"nodeType":"96","messageId":"97","endLine":55,"endColumn":17},{"ruleId":"104","severity":1,"message":"105","line":62,"column":8,"nodeType":"106","endLine":62,"endColumn":14,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":74,"column":21,"nodeType":"112","endLine":74,"endColumn":120},{"ruleId":"110","severity":1,"message":"111","line":75,"column":21,"nodeType":"112","endLine":75,"endColumn":120},{"ruleId":"104","severity":1,"message":"113","line":6,"column":8,"nodeType":"106","endLine":6,"endColumn":10,"suggestions":"114"},{"ruleId":"110","severity":1,"message":"111","line":10,"column":13,"nodeType":"112","endLine":10,"endColumn":142},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'BiBasketball' is defined but never used.","Identifier","unusedVar","'MdCompareArrows' is defined but never used.","'VscGraph' is defined but never used.","'getCoordinateSystemDimensions' is defined but never used.","'optionsVisible' is assigned a value but never used.","'setOptionsVisible' is assigned a value but never used.","'MdBlock' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.","ArrayExpression",["117"],"'temp_arr' is assigned a value but never used.",["118"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props.playerInfo'. Either include it or remove the dependency array.",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"120","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [data, loading]",{"range":"125","text":"126"},{"range":"127","text":"126"},"Update the dependencies array to be: [props.playerInfo]",{"range":"128","text":"129"},[3998,4004],"[data, loading]",[1611,1617],[178,180],"[props.playerInfo]"]