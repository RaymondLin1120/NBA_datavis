[{"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/index.js":"1","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/reportWebVitals.js":"2","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/App.js":"3","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player.js":"4","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Home.js":"5","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Sidebar/Sidebar.js":"6","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/PostMasonry.js":"7","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/Post.js":"8","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/RadarStats.js":"9","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Chart.js":"10","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/EChart.js":"11"},{"size":530,"mtime":1611458148442,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1611373027005,"results":"14","hashOfConfig":"13"},{"size":574,"mtime":1611627364619,"results":"15","hashOfConfig":"13"},{"size":3003,"mtime":1611984041115,"results":"16","hashOfConfig":"13"},{"size":1392,"mtime":1611526571698,"results":"17","hashOfConfig":"13"},{"size":1798,"mtime":1611555782666,"results":"18","hashOfConfig":"13"},{"size":381,"mtime":1611522742966,"results":"19","hashOfConfig":"13"},{"size":668,"mtime":1611528101626,"results":"20","hashOfConfig":"13"},{"size":1557,"mtime":1611952236044,"results":"21","hashOfConfig":"13"},{"size":1385,"mtime":1611935056296,"results":"22","hashOfConfig":"13"},{"size":611,"mtime":1611946892009,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1gpbztv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/index.js",[],["51","52"],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/reportWebVitals.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/App.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player.js",["53","54","55","56"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport RadarStats from '../Components/Graphing/RadarStats'\n\nfunction Player() {\n    const [seasonStats, setSeasonStats] = useState([])\n    const [playerStats, setPlayerStats] = useState([])\n    \n    // const fields = [min, fGPct, pg3Pct]\n    // min,\n    // fGPct,\n    // pg3Pct,\n    // ftPct,\n    // fG3M,\n    // pts,\n    // reb,\n    // ast,\n    // stl,\n    // blk,\n    // tov\n    useEffect(() => {\n        axios.get(\"http://localhost:8080/player\")\n        .then((data) => {\n            setPlayerStats(data.data)\n            // setSeasonStats(data.data.seasonTotalsRegularSeason.filter((item) =>\n            //     (item.seasonId === \"2020-21\" && item.teamAbbreviation === \"TOT\") || \n            //      item.seasonId !== \"2020-21\"\n            // ))\n        })\n    }, []);\n    // console.log(playerStats)\n    // // const arr = [\n    // //     {\n    // //         fgPct:{subject:\"Field-Goal-%\"},\n    // //         //pg3Pct:{subject:\"3s-%\"},\n    // //         ftPct:{subject:\"Free-Throw-%\"},\n    // //         fG3M:{subject:\"3s-%\"},\n    // //         pts:{subject:\"Points\"},\n    // //         min:{subject:\"Minutes\"},\n    // //         reb:{subject:\"Rebounds\"},\n    // //         ast:{subject:\"Assists\"},\n    // //         stl:{subject:\"Steals\"},\n    // //         blk:{subject:\"Blocks\"},\n    // //         tov:{subject:\"Turnovers\"}\n    // //     }   \n    // // ]\n\n    // //console.log(Object.keys(seasonStats[0]))\n\n    // // seasonStats.map((item, key) => (\n    // //     //arr[0].min[item.seasonId] = item.min,\n    // //     arr[0].fgPct[item.seasonId] = item.fgPct,\n    // //     arr[0].ftPct[item.seasonId] = item.ftPct,\n    // //     arr[0].fG3M[item.seasonId] = item.fG3M,\n    // //     //arr[0].pts[item.seasonId] = item.pts,\n    // //     arr[0].reb[item.seasonId] = item.reb,\n    // //     arr[0].ast[item.seasonId] = item.ast,\n    // //     arr[0].stl[item.seasonId] = item.stl,\n    // //     arr[0].blk[item.seasonId] = item.blk,\n    // //     arr[0].tov[item.seasonId] = item.tov\n    // // ))\n\n    // var temp_arr = []\n    // // for (const [key, value] of Object.entries(arr[0])) {\n    // //     console.log(`key: ${key}, value: ${value}`)\n    // //     // temp_arr.push(arr[`${key}`])\n    // //     temp_arr.push(arr[0][`${key}`])\n    // // }\n    // //console.log(seasonStats)\n    // seasonStats.map((item) => (\n    //     temp_arr.push({\n    //         seasonId: item.seasonId,\n    //         fgPct: item.fgPct,\n    //         ftPct: item.ftPct,\n    //         fG3M: item.fG3M,\n    //         pts:item.pts,\n    //         min: item.min,\n    //         reb: item.reb,\n    //         ast: item.ast,\n    //         stl: item.stl,\n    //         blk: item.blk,\n    //         tov: item.tov\n    //     })\n    // ))\n\n    // console.log(temp_arr)\n\n    return (\n        <div>\n            {/* <RadarStats config = {temp_arr.slice(temp_arr.length - 3, temp_arr.length)}/> */}\n        </div>\n    )\n}\n\nexport default Player;","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Home.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Sidebar/Sidebar.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/PostMasonry.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/Post.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/RadarStats.js",["57","58"],"import { getCoordinateSystemDimensions } from 'echarts';\nimport React from 'react'\nimport Chart from './Chart'\nimport EChart from './EChart.js'\n\nfunction RadarStats({ config, resize }) {\n    //const { data } = config\n\n    let option = {\n      title: {\n          text: 'Player Stats'\n      },\n      tooltip: {\n        //   axisPointer : {\n        //       type:'cross'\n        //   }\n      },\n      legend: {\n          data: config['seasonId']\n      },\n      radar: {\n          // shape: 'circle',\n          name: {\n              textStyle: {\n                  color: '#fff',\n                  backgroundColor: '#999',\n                  borderRadius: 3,\n                  padding: [3, 5]\n              }\n          },\n          indicator: [\n              { name: 'Points', max: 40},\n              { name: 'Rebounds', max: 15},\n              { name: 'Assists', max: 15},\n              { name: 'Steals', max: 5},\n              { name: 'Blocks', max: 5},\n              { name: 'Turnovers', max: 7}\n          ]\n      },\n      series: [{\n        axisName: 'James Harden Average',\n        type: 'radar',\n        //areaStyle: {normal: {}},\n        data: \n            config.map((item) => ({\n                value: [item.pts, item.reb, item.ast, item.stl, item.blk, item.tov], \n                name: item.seasonId\n            }))\n      }]\n  };\n\n  return (\n        // <Chart config={config} resize={resize}>\n        //     { data &&\n                <EChart option={ option } resize={resize}/>\n        //     }\n        // </Chart>\n    )\n}\n  \n  export default RadarStats","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Chart.js",["59","60"],"import React, { useState } from 'react'\n// import OptionsDropdown from './OptionsDropdown'\n\nexport default function Chart ({ children, config, resize }) {\n\n    const { height, width } =  { ...config }\n\n    const [optionsVisible, setOptionsVisible] = useState(false)\n\n    // let options =  {\n    //     'FullScreen': {\n    //         icon: 'ion-ios-expand',\n    //         cb: () => {\n    //             // TODO\n    //         }\n    //     },\n    //     'Export to CSV': {\n    //         icon: 'ion-ios-filing',\n    //         cb: () => {\n    //             // TODO\n    //         }\n    //     }\n    // }\n\n    return (\n        <section className=\"chart\" style={{ height, width }}>\n            <section className=\"chart-header-container\">\n                <span>{ config.title }</span>\n                <span className=\"options-container\">\n                    {/* <OptionsDropdown\n                        options={ options }\n                        visible={ optionsVisible }\n                        cb={ () => setOptionsVisible(false) }\n                    >\n                        <i\n                            className=\"ion-ios-more\"\n                            onClick={ () => setOptionsVisible(!optionsVisible) }\n                        />\n                    </OptionsDropdown> */}\n                </span>\n            </section>\n            { children }\n        </section>\n    )\n}",["61","62"],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/EChart.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":18},{"ruleId":"67","severity":1,"message":"71","line":6,"column":12,"nodeType":"69","messageId":"70","endLine":6,"endColumn":23},{"ruleId":"67","severity":1,"message":"72","line":6,"column":25,"nodeType":"69","messageId":"70","endLine":6,"endColumn":39},{"ruleId":"67","severity":1,"message":"73","line":7,"column":12,"nodeType":"69","messageId":"70","endLine":7,"endColumn":23},{"ruleId":"67","severity":1,"message":"74","line":1,"column":10,"nodeType":"69","messageId":"70","endLine":1,"endColumn":39},{"ruleId":"67","severity":1,"message":"75","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":13},{"ruleId":"67","severity":1,"message":"76","line":8,"column":12,"nodeType":"69","messageId":"70","endLine":8,"endColumn":26},{"ruleId":"67","severity":1,"message":"77","line":8,"column":28,"nodeType":"69","messageId":"70","endLine":8,"endColumn":45},{"ruleId":"63","replacedBy":"78"},{"ruleId":"65","replacedBy":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'RadarStats' is defined but never used.","Identifier","unusedVar","'seasonStats' is assigned a value but never used.","'setSeasonStats' is assigned a value but never used.","'playerStats' is assigned a value but never used.","'getCoordinateSystemDimensions' is defined but never used.","'Chart' is defined but never used.","'optionsVisible' is assigned a value but never used.","'setOptionsVisible' is assigned a value but never used.",["80"],["81"],"no-global-assign","no-unsafe-negation"]