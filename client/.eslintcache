[{"/Users/RaymondChu/NBA_datavis/client/src/index.js":"1","/Users/RaymondChu/NBA_datavis/client/src/reportWebVitals.js":"2","/Users/RaymondChu/NBA_datavis/client/src/App.js":"3","/Users/RaymondChu/NBA_datavis/client/src/Pages/Home.js":"4","/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/Player.js":"5","/Users/RaymondChu/NBA_datavis/client/src/Components/Sidebar/Sidebar.js":"6","/Users/RaymondChu/NBA_datavis/client/src/Components/PostMasonry/PostMasonry.js":"7","/Users/RaymondChu/NBA_datavis/client/src/Components/Graphing/RadarStats.js":"8","/Users/RaymondChu/NBA_datavis/client/src/Components/Graphing/EChart.js":"9","/Users/RaymondChu/NBA_datavis/client/src/Components/PostMasonry/Post.js":"10","/Users/RaymondChu/NBA_datavis/client/src/Components/Graphing/Chart.js":"11","/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/PlayerProfile.js":"12"},{"size":530,"mtime":1611624880922,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611624880922,"results":"15","hashOfConfig":"14"},{"size":1741,"mtime":1612228878645,"results":"16","hashOfConfig":"14"},{"size":1392,"mtime":1611624880921,"results":"17","hashOfConfig":"14"},{"size":4129,"mtime":1612327614306,"results":"18","hashOfConfig":"14"},{"size":1798,"mtime":1611624880921,"results":"19","hashOfConfig":"14"},{"size":381,"mtime":1611624880921,"results":"20","hashOfConfig":"14"},{"size":2561,"mtime":1612228878648,"results":"21","hashOfConfig":"14"},{"size":615,"mtime":1612228878647,"results":"22","hashOfConfig":"14"},{"size":668,"mtime":1611624880920,"results":"23","hashOfConfig":"14"},{"size":1174,"mtime":1612228878647,"results":"24","hashOfConfig":"14"},{"size":683,"mtime":1612327534374,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kclmtq",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/RaymondChu/NBA_datavis/client/src/index.js",[],"/Users/RaymondChu/NBA_datavis/client/src/reportWebVitals.js",[],"/Users/RaymondChu/NBA_datavis/client/src/App.js",["53"],"/Users/RaymondChu/NBA_datavis/client/src/Pages/Home.js",[],"/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/Player.js",["54","55","56","57"],"/Users/RaymondChu/NBA_datavis/client/src/Components/Sidebar/Sidebar.js",[],"/Users/RaymondChu/NBA_datavis/client/src/Components/PostMasonry/PostMasonry.js",[],"/Users/RaymondChu/NBA_datavis/client/src/Components/Graphing/RadarStats.js",["58"],"import { getCoordinateSystemDimensions } from 'echarts';\nimport React from 'react'\nimport Chart from './Chart'\nimport EChart from './EChart.js'\n\nfunction RadarStats({ config, resize , style}) {\n    let option = {\n      title: {\n          text: 'Averages',\n      },\n      //backgroundColor: '#161627',\n      tooltip: {\n        //   axisPointer : {\n        //       type:'cross'\n        //   }\n      },\n      toolbox: {\n        show: true,\n        feature: {\n            saveAsImage: {}\n        }\n      },\n      legend: {\n          data: config['seasonId']\n      },\n      radar: [{\n          // shape: 'circle',\n          name: {\n              textStyle: {\n                  color: '#fff',\n                  backgroundColor: '#999',\n                  borderRadius: 3,\n                  padding: [3, 5]\n              }\n          },\n          shape: 'circle',\n          center: ['25%', '50%'],\n          indicator: [\n              { name: 'Points', max: 40},\n              { name: 'Rebounds', max: 15},\n              { name: 'Assists', max: 15},\n              { name: 'Steals', max: 5},\n              { name: 'Blocks', max: 2},\n          ]\n      },\n      {\n        name: {\n            textStyle: {\n                color: '#fff',\n                backgroundColor: '#999',\n                borderRadius: 3,\n                padding: [3, 5]\n            }\n        },\n        shape: 'circle',\n        center: ['75%', '50%'],\n        indicator: [\n            { name: 'Field Goal %', max: 1},\n            { name: 'Free Throw %', max: 1},\n            { name: '3P FG %', max: 1},\n            { name: 'Field Goal Attempts', max: 25},\n            { name: 'Free Throw Attempts', max: 20},\n            { name: '3-Point Attempts', max: 20}\n        ]\n      }],\n      series: [{\n        //axisName: 'James Harden Average',\n        type: 'radar',\n        //areaStyle: {normal: {}},\n        data: \n            config.map((item) => ({\n                value: [item.pts, item.reb, item.ast, item.stl, item.blk], \n                name: item.seasonId\n            }))\n      },\n      {\n        //axisName: 'James Harden Average',\n        type: 'radar',\n        radarIndex: 1,\n        //areaStyle: {normal: {}},\n        data: \n            config.map((item) => ({\n                value: [item.fgPct, item.ftPct, item.fg3Pct, item.fga, item.fta, item.fG3A], \n                name: item.seasonId\n            }))\n      }]\n  };\n\n  return (\n        <Chart config={config}>\n            <EChart option={ option } resize={resize} style={ style }/>\n        </Chart>\n    )\n}\n  \n  export default RadarStats",["59","60"],"/Users/RaymondChu/NBA_datavis/client/src/Components/Graphing/EChart.js",[],"/Users/RaymondChu/NBA_datavis/client/src/Components/PostMasonry/Post.js",[],"/Users/RaymondChu/NBA_datavis/client/src/Components/Graphing/Chart.js",["61","62"],"import React, { useState } from 'react'\n// import OptionsDropdown from './OptionsDropdown'\n\nexport default function Chart ({ children, config, style }) {\n\n    const [optionsVisible, setOptionsVisible] = useState(false)\n\n    // let options =  {\n    //     'FullScreen': {\n    //         icon: 'ion-ios-expand',\n    //         cb: () => {\n    //             // TODO\n    //         }\n    //     },\n    //     'Export to CSV': {\n    //         icon: 'ion-ios-filing',\n    //         cb: () => {\n    //             // TODO\n    //         }\n    //     }\n    // }\n\n    return (\n        <section className=\"chart\">\n            <span className=\"options-container\">\n                    {/* <OptionsDropdown\n                        options={ options }\n                        visible={ optionsVisible }\n                        cb={ () => setOptionsVisible(false) }\n                    >\n                        <i\n                            className=\"ion-ios-more\"\n                            onClick={ () => setOptionsVisible(!optionsVisible) }\n                        />\n                    </OptionsDropdown> */}\n            </span>\n        { children }\n        </section>\n    )\n}","/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/PlayerProfile.js",["63"],{"ruleId":"64","severity":1,"message":"65","line":18,"column":53,"nodeType":"66","messageId":"67","endLine":18,"endColumn":55},{"ruleId":"68","severity":1,"message":"69","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":24},{"ruleId":"68","severity":1,"message":"72","line":41,"column":22,"nodeType":"70","messageId":"71","endLine":41,"endColumn":27},{"ruleId":"73","severity":1,"message":"74","line":61,"column":24,"nodeType":"75","endLine":64,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":94,"column":49,"nodeType":"78","messageId":"79","endLine":94,"endColumn":50},{"ruleId":"68","severity":1,"message":"80","line":1,"column":10,"nodeType":"70","messageId":"71","endLine":1,"endColumn":39},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"68","severity":1,"message":"85","line":6,"column":12,"nodeType":"70","messageId":"71","endLine":6,"endColumn":26},{"ruleId":"68","severity":1,"message":"86","line":6,"column":28,"nodeType":"70","messageId":"71","endLine":6,"endColumn":45},{"ruleId":"87","severity":1,"message":"88","line":7,"column":13,"nodeType":"89","endLine":7,"endColumn":68},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'isNullableType' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'temp_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'getCoordinateSystemDimensions' is defined but never used.","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"'optionsVisible' is assigned a value but never used.","'setOptionsVisible' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]