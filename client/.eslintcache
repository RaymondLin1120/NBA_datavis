[{"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/index.js":"1","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/reportWebVitals.js":"2","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/App.js":"3","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Home.js":"4","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/PlayerHome.js":"5","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Games/Games.js":"6","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Sidebar/Sidebar.js":"7","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/Player.js":"8","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/PostMasonry.js":"9","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/CirclePacking.js":"10","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/ShotChart.js":"11","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Boxscores.js":"12","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/RadarStats.js":"13","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/PlayerProfile.js":"14","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/SearchBar/SearchBar.js":"15","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/EChart.js":"16","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/Post.js":"17","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Chart.js":"18","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Gauge.js":"19","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/PlayerShotchart.js":"20","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Team/Team.js":"21","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/TeamSearchBar/TeamSearchBar.js":"22"},{"size":530,"mtime":1612123622346,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1611373027005,"results":"25","hashOfConfig":"24"},{"size":2070,"mtime":1613347437125,"results":"26","hashOfConfig":"24"},{"size":1239,"mtime":1613333613426,"results":"27","hashOfConfig":"24"},{"size":13687,"mtime":1613260277355,"results":"28","hashOfConfig":"24"},{"size":2549,"mtime":1612503181986,"results":"29","hashOfConfig":"24"},{"size":2344,"mtime":1612503181986,"results":"30","hashOfConfig":"24"},{"size":6707,"mtime":1613358950603,"results":"31","hashOfConfig":"24"},{"size":381,"mtime":1611522742966,"results":"32","hashOfConfig":"24"},{"size":6476,"mtime":1613260297217,"results":"33","hashOfConfig":"24"},{"size":2277,"mtime":1613268109813,"results":"34","hashOfConfig":"24"},{"size":4348,"mtime":1613250912623,"results":"35","hashOfConfig":"24"},{"size":4828,"mtime":1613283194220,"results":"36","hashOfConfig":"24"},{"size":3096,"mtime":1613284863866,"results":"37","hashOfConfig":"24"},{"size":1382,"mtime":1612660924464,"results":"38","hashOfConfig":"24"},{"size":615,"mtime":1612151361823,"results":"39","hashOfConfig":"24"},{"size":668,"mtime":1611528101626,"results":"40","hashOfConfig":"24"},{"size":1174,"mtime":1612154624341,"results":"41","hashOfConfig":"24"},{"size":3048,"mtime":1613284408802,"results":"42","hashOfConfig":"24"},{"size":1537,"mtime":1613284753695,"results":"43","hashOfConfig":"24"},{"size":2206,"mtime":1613359227448,"results":"44","hashOfConfig":"24"},{"size":721,"mtime":1613358489440,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1gpbztv",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/index.js",[],["101","102"],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/reportWebVitals.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/App.js",["103","104"],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Home.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/PlayerHome.js",["105","106","107"],"import React from 'react';\nimport CirclePacking from '../../Components/Graphing/CirclePacking'\n\n\nconst teamRoster = {\n    \"name\": \"NBA Teams\",\n    \"children\": [\n     {\n        \"name\": \"Brooklyn Nets\",\n        \"img\": \"https://www.nba.com/stats/media/img/teams/logos/BKN_logo.svg\",\n        \"children\": [\n         {\"name\": \"Kevin Durant\", \"playerId\":201142, \"img\":\"https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/201142.png\",  \"size\": 3938},\n         {\"name\": \"Test\", \"playerId\":201142, \"img\":\"https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/201142.png\",  \"size\": 3938},\n         {\"name\": \"Test2\", \"playerId\":201142, \"img\":\"https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/201142.png\",  \"size\": 3938},\n         {\"name\": \"Test3\", \"playerId\":201142, \"img\":\"https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/201142.png\",  \"size\": 3938},\n        ]\n    }\n    ]\n}\n\nconst teamRoster1 = {\n    \"name\": \"flare\",\n    \"children\": [\n     {\n      \"name\": \"analytics\",\n      \"children\": [\n       {\n        \"name\": \"cluster\",\n        \"children\": [\n         {\"name\": \"AgglomerativeCluster\", \"size\": 3938},\n         {\"name\": \"CommunityStructure\", \"size\": 3812},\n         {\"name\": \"HierarchicalCluster\", \"size\": 6714},\n         {\"name\": \"MergeEdge\", \"size\": 743}\n        ]\n       },\n       {\n        \"name\": \"graph\",\n        \"children\": [\n         {\"name\": \"BetweennessCentrality\", \"size\": 3534},\n         {\"name\": \"LinkDistance\", \"size\": 5731},\n         {\"name\": \"MaxFlowMinCut\", \"size\": 7840},\n         {\"name\": \"ShortestPaths\", \"size\": 5914},\n         {\"name\": \"SpanningTree\", \"size\": 3416}\n        ]\n       },\n       {\n        \"name\": \"optimization\",\n        \"children\": [\n         {\"name\": \"AspectRatioBanker\", \"size\": 7074}\n        ]\n       }\n      ]\n     },\n     {\n      \"name\": \"animate\",\n      \"children\": [\n       {\"name\": \"Easing\", \"size\": 17010},\n       {\"name\": \"FunctionSequence\", \"size\": 5842},\n       {\n        \"name\": \"interpolate\",\n        \"children\": [\n         {\"name\": \"ArrayInterpolator\", \"size\": 1983},\n         {\"name\": \"ColorInterpolator\", \"size\": 2047},\n         {\"name\": \"DateInterpolator\", \"size\": 1375},\n         {\"name\": \"Interpolator\", \"size\": 8746},\n         {\"name\": \"MatrixInterpolator\", \"size\": 2202},\n         {\"name\": \"NumberInterpolator\", \"size\": 1382},\n         {\"name\": \"ObjectInterpolator\", \"size\": 1629},\n         {\"name\": \"PointInterpolator\", \"size\": 1675},\n         {\"name\": \"RectangleInterpolator\", \"size\": 2042}\n        ]\n       },\n       {\"name\": \"ISchedulable\", \"size\": 1041},\n       {\"name\": \"Parallel\", \"size\": 5176},\n       {\"name\": \"Pause\", \"size\": 449},\n       {\"name\": \"Scheduler\", \"size\": 5593},\n       {\"name\": \"Sequence\", \"size\": 5534},\n       {\"name\": \"Transition\", \"size\": 9201},\n       {\"name\": \"Transitioner\", \"size\": 19975},\n       {\"name\": \"TransitionEvent\", \"size\": 1116},\n       {\"name\": \"Tween\", \"size\": 6006}\n      ]\n     },\n     {\n      \"name\": \"data\",\n      \"children\": [\n       {\n        \"name\": \"converters\",\n        \"children\": [\n         {\"name\": \"Converters\", \"size\": 721},\n         {\"name\": \"DelimitedTextConverter\", \"size\": 4294},\n         {\"name\": \"GraphMLConverter\", \"size\": 9800},\n         {\"name\": \"IDataConverter\", \"size\": 1314},\n         {\"name\": \"JSONConverter\", \"size\": 2220}\n        ]\n       },\n       {\"name\": \"DataField\", \"size\": 1759},\n       {\"name\": \"DataSchema\", \"size\": 2165},\n       {\"name\": \"DataSet\", \"size\": 586},\n       {\"name\": \"DataSource\", \"size\": 3331},\n       {\"name\": \"DataTable\", \"size\": 772},\n       {\"name\": \"DataUtil\", \"size\": 3322}\n      ]\n     },\n     {\n      \"name\": \"display\",\n      \"children\": [\n       {\"name\": \"DirtySprite\", \"size\": 8833},\n       {\"name\": \"LineSprite\", \"size\": 1732},\n       {\"name\": \"RectSprite\", \"size\": 3623},\n       {\"name\": \"TextSprite\", \"size\": 10066}\n      ]\n     },\n     {\n      \"name\": \"flex\",\n      \"children\": [\n       {\"name\": \"FlareVis\", \"size\": 4116}\n      ]\n     },\n     {\n      \"name\": \"physics\",\n      \"children\": [\n       {\"name\": \"DragForce\", \"size\": 1082},\n       {\"name\": \"GravityForce\", \"size\": 1336},\n       {\"name\": \"IForce\", \"size\": 319},\n       {\"name\": \"NBodyForce\", \"size\": 10498},\n       {\"name\": \"Particle\", \"size\": 2822},\n       {\"name\": \"Simulation\", \"size\": 9983},\n       {\"name\": \"Spring\", \"size\": 2213},\n       {\"name\": \"SpringForce\", \"size\": 1681}\n      ]\n     },\n     {\n      \"name\": \"query\",\n      \"children\": [\n       {\"name\": \"AggregateExpression\", \"size\": 1616},\n       {\"name\": \"And\", \"size\": 1027},\n       {\"name\": \"Arithmetic\", \"size\": 3891},\n       {\"name\": \"Average\", \"size\": 891},\n       {\"name\": \"BinaryExpression\", \"size\": 2893},\n       {\"name\": \"Comparison\", \"size\": 5103},\n       {\"name\": \"CompositeExpression\", \"size\": 3677},\n       {\"name\": \"Count\", \"size\": 781},\n       {\"name\": \"DateUtil\", \"size\": 4141},\n       {\"name\": \"Distinct\", \"size\": 933},\n       {\"name\": \"Expression\", \"size\": 5130},\n       {\"name\": \"ExpressionIterator\", \"size\": 3617},\n       {\"name\": \"Fn\", \"size\": 3240},\n       {\"name\": \"If\", \"size\": 2732},\n       {\"name\": \"IsA\", \"size\": 2039},\n       {\"name\": \"Literal\", \"size\": 1214},\n       {\"name\": \"Match\", \"size\": 3748},\n       {\"name\": \"Maximum\", \"size\": 843},\n       {\n        \"name\": \"methods\",\n        \"children\": [\n         {\"name\": \"add\", \"size\": 593},\n         {\"name\": \"and\", \"size\": 330},\n         {\"name\": \"average\", \"size\": 287},\n         {\"name\": \"count\", \"size\": 277},\n         {\"name\": \"distinct\", \"size\": 292},\n         {\"name\": \"div\", \"size\": 595},\n         {\"name\": \"eq\", \"size\": 594},\n         {\"name\": \"fn\", \"size\": 460},\n         {\"name\": \"gt\", \"size\": 603},\n         {\"name\": \"gte\", \"size\": 625},\n         {\"name\": \"iff\", \"size\": 748},\n         {\"name\": \"isa\", \"size\": 461},\n         {\"name\": \"lt\", \"size\": 597},\n         {\"name\": \"lte\", \"size\": 619},\n         {\"name\": \"max\", \"size\": 283},\n         {\"name\": \"min\", \"size\": 283},\n         {\"name\": \"mod\", \"size\": 591},\n         {\"name\": \"mul\", \"size\": 603},\n         {\"name\": \"neq\", \"size\": 599},\n         {\"name\": \"not\", \"size\": 386},\n         {\"name\": \"or\", \"size\": 323},\n         {\"name\": \"orderby\", \"size\": 307},\n         {\"name\": \"range\", \"size\": 772},\n         {\"name\": \"select\", \"size\": 296},\n         {\"name\": \"stddev\", \"size\": 363},\n         {\"name\": \"sub\", \"size\": 600},\n         {\"name\": \"sum\", \"size\": 280},\n         {\"name\": \"update\", \"size\": 307},\n         {\"name\": \"variance\", \"size\": 335},\n         {\"name\": \"where\", \"size\": 299},\n         {\"name\": \"xor\", \"size\": 354},\n         {\"name\": \"_\", \"size\": 264}\n        ]\n       },\n       {\"name\": \"Minimum\", \"size\": 843},\n       {\"name\": \"Not\", \"size\": 1554},\n       {\"name\": \"Or\", \"size\": 970},\n       {\"name\": \"Query\", \"size\": 13896},\n       {\"name\": \"Range\", \"size\": 1594},\n       {\"name\": \"StringUtil\", \"size\": 4130},\n       {\"name\": \"Sum\", \"size\": 791},\n       {\"name\": \"Variable\", \"size\": 1124},\n       {\"name\": \"Variance\", \"size\": 1876},\n       {\"name\": \"Xor\", \"size\": 1101}\n      ]\n     },\n     {\n      \"name\": \"scale\",\n      \"children\": [\n       {\"name\": \"IScaleMap\", \"size\": 2105},\n       {\"name\": \"LinearScale\", \"size\": 1316},\n       {\"name\": \"LogScale\", \"size\": 3151},\n       {\"name\": \"OrdinalScale\", \"size\": 3770},\n       {\"name\": \"QuantileScale\", \"size\": 2435},\n       {\"name\": \"QuantitativeScale\", \"size\": 4839},\n       {\"name\": \"RootScale\", \"size\": 1756},\n       {\"name\": \"Scale\", \"size\": 4268},\n       {\"name\": \"ScaleType\", \"size\": 1821},\n       {\"name\": \"TimeScale\", \"size\": 5833}\n      ]\n     },\n     {\n      \"name\": \"util\",\n      \"children\": [\n       {\"name\": \"Arrays\", \"size\": 8258},\n       {\"name\": \"Colors\", \"size\": 10001},\n       {\"name\": \"Dates\", \"size\": 8217},\n       {\"name\": \"Displays\", \"size\": 12555},\n       {\"name\": \"Filter\", \"size\": 2324},\n       {\"name\": \"Geometry\", \"size\": 10993},\n       {\n        \"name\": \"heap\",\n        \"children\": [\n         {\"name\": \"FibonacciHeap\", \"size\": 9354},\n         {\"name\": \"HeapNode\", \"size\": 1233}\n        ]\n       },\n       {\"name\": \"IEvaluable\", \"size\": 335},\n       {\"name\": \"IPredicate\", \"size\": 383},\n       {\"name\": \"IValueProxy\", \"size\": 874},\n       {\n        \"name\": \"math\",\n        \"children\": [\n         {\"name\": \"DenseMatrix\", \"size\": 3165},\n         {\"name\": \"IMatrix\", \"size\": 2815},\n         {\"name\": \"SparseMatrix\", \"size\": 3366}\n        ]\n       },\n       {\"name\": \"Maths\", \"size\": 17705},\n       {\"name\": \"Orientation\", \"size\": 1486},\n       {\n        \"name\": \"palette\",\n        \"children\": [\n         {\"name\": \"ColorPalette\", \"size\": 6367},\n         {\"name\": \"Palette\", \"size\": 1229},\n         {\"name\": \"ShapePalette\", \"size\": 2059},\n         {\"name\": \"SizePalette\", \"size\": 2291}\n        ]\n       },\n       {\"name\": \"Property\", \"size\": 5559},\n       {\"name\": \"Shapes\", \"size\": 19118},\n       {\"name\": \"Sort\", \"size\": 6887},\n       {\"name\": \"Stats\", \"size\": 6557},\n       {\"name\": \"Strings\", \"size\": 22026}\n      ]\n     },\n     {\n      \"name\": \"vis\",\n      \"children\": [\n       {\n        \"name\": \"axis\",\n        \"children\": [\n         {\"name\": \"Axes\", \"size\": 1302},\n         {\"name\": \"Axis\", \"size\": 24593},\n         {\"name\": \"AxisGridLine\", \"size\": 652},\n         {\"name\": \"AxisLabel\", \"size\": 636},\n         {\"name\": \"CartesianAxes\", \"size\": 6703}\n        ]\n       },\n       {\n        \"name\": \"controls\",\n        \"children\": [\n         {\"name\": \"AnchorControl\", \"size\": 2138},\n         {\"name\": \"ClickControl\", \"size\": 3824},\n         {\"name\": \"Control\", \"size\": 1353},\n         {\"name\": \"ControlList\", \"size\": 4665},\n         {\"name\": \"DragControl\", \"size\": 2649},\n         {\"name\": \"ExpandControl\", \"size\": 2832},\n         {\"name\": \"HoverControl\", \"size\": 4896},\n         {\"name\": \"IControl\", \"size\": 763},\n         {\"name\": \"PanZoomControl\", \"size\": 5222},\n         {\"name\": \"SelectionControl\", \"size\": 7862},\n         {\"name\": \"TooltipControl\", \"size\": 8435}\n        ]\n       },\n       {\n        \"name\": \"data\",\n        \"children\": [\n         {\"name\": \"Data\", \"size\": 20544},\n         {\"name\": \"DataList\", \"size\": 19788},\n         {\"name\": \"DataSprite\", \"size\": 10349},\n         {\"name\": \"EdgeSprite\", \"size\": 3301},\n         {\"name\": \"NodeSprite\", \"size\": 19382},\n         {\n          \"name\": \"render\",\n          \"children\": [\n           {\"name\": \"ArrowType\", \"size\": 698},\n           {\"name\": \"EdgeRenderer\", \"size\": 5569},\n           {\"name\": \"IRenderer\", \"size\": 353},\n           {\"name\": \"ShapeRenderer\", \"size\": 2247}\n          ]\n         },\n         {\"name\": \"ScaleBinding\", \"size\": 11275},\n         {\"name\": \"Tree\", \"size\": 7147},\n         {\"name\": \"TreeBuilder\", \"size\": 9930}\n        ]\n       },\n       {\n        \"name\": \"events\",\n        \"children\": [\n         {\"name\": \"DataEvent\", \"size\": 2313},\n         {\"name\": \"SelectionEvent\", \"size\": 1880},\n         {\"name\": \"TooltipEvent\", \"size\": 1701},\n         {\"name\": \"VisualizationEvent\", \"size\": 1117}\n        ]\n       },\n       {\n        \"name\": \"legend\",\n        \"children\": [\n         {\"name\": \"Legend\", \"size\": 20859},\n         {\"name\": \"LegendItem\", \"size\": 4614},\n         {\"name\": \"LegendRange\", \"size\": 10530}\n        ]\n       },\n       {\n        \"name\": \"operator\",\n        \"children\": [\n         {\n          \"name\": \"distortion\",\n          \"children\": [\n           {\"name\": \"BifocalDistortion\", \"size\": 4461},\n           {\"name\": \"Distortion\", \"size\": 6314},\n           {\"name\": \"FisheyeDistortion\", \"size\": 3444}\n          ]\n         },\n         {\n          \"name\": \"encoder\",\n          \"children\": [\n           {\"name\": \"ColorEncoder\", \"size\": 3179},\n           {\"name\": \"Encoder\", \"size\": 4060},\n           {\"name\": \"PropertyEncoder\", \"size\": 4138},\n           {\"name\": \"ShapeEncoder\", \"size\": 1690},\n           {\"name\": \"SizeEncoder\", \"size\": 1830}\n          ]\n         },\n         {\n          \"name\": \"filter\",\n          \"children\": [\n           {\"name\": \"FisheyeTreeFilter\", \"size\": 5219},\n           {\"name\": \"GraphDistanceFilter\", \"size\": 3165},\n           {\"name\": \"VisibilityFilter\", \"size\": 3509}\n          ]\n         },\n         {\"name\": \"IOperator\", \"size\": 1286},\n         {\n          \"name\": \"label\",\n          \"children\": [\n           {\"name\": \"Labeler\", \"size\": 9956},\n           {\"name\": \"RadialLabeler\", \"size\": 3899},\n           {\"name\": \"StackedAreaLabeler\", \"size\": 3202}\n          ]\n         },\n         {\n          \"name\": \"layout\",\n          \"children\": [\n           {\"name\": \"AxisLayout\", \"size\": 6725},\n           {\"name\": \"BundledEdgeRouter\", \"size\": 3727},\n           {\"name\": \"CircleLayout\", \"size\": 9317},\n           {\"name\": \"CirclePackingLayout\", \"size\": 12003},\n           {\"name\": \"DendrogramLayout\", \"size\": 4853},\n           {\"name\": \"ForceDirectedLayout\", \"size\": 8411},\n           {\"name\": \"IcicleTreeLayout\", \"size\": 4864},\n           {\"name\": \"IndentedTreeLayout\", \"size\": 3174},\n           {\"name\": \"Layout\", \"size\": 7881},\n           {\"name\": \"NodeLinkTreeLayout\", \"size\": 12870},\n           {\"name\": \"PieLayout\", \"size\": 2728},\n           {\"name\": \"RadialTreeLayout\", \"size\": 12348},\n           {\"name\": \"RandomLayout\", \"size\": 870},\n           {\"name\": \"StackedAreaLayout\", \"size\": 9121},\n           {\"name\": \"TreeMapLayout\", \"size\": 9191}\n          ]\n         },\n         {\"name\": \"Operator\", \"size\": 2490},\n         {\"name\": \"OperatorList\", \"size\": 5248},\n         {\"name\": \"OperatorSequence\", \"size\": 4190},\n         {\"name\": \"OperatorSwitch\", \"size\": 2581},\n         {\"name\": \"SortOperator\", \"size\": 2023}\n        ]\n       },\n       {\"name\": \"Visualization\", \"size\": 16540}\n      ]\n     }\n    ]\n   }\nexport default function PlayerHome() {\n    return (\n        <div>\n            {/* <CirclePacking data={teamRoster}/> */}\n        </div>\n    )\n}","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Games/Games.js",["108","109","110","111"],"import React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst Game_Query = gql`\n    query GameQuery {\n        scoreboard {\n            gameHeader {\n                gameDateEst\n                gameSequence\n                gameId\n                gameStatusId\n                gameStatusText\n                gamecode\n                homeTeamId\n                visitorTeamId\n                season\n                livePeriod\n                livePcTime\n                livePeriodTimeBcast\n            }\n            lineScore {\n                gameDateEst\n                gameSequence\n                gameId\n                teamId\n                teamAbbreviation\n                teamCityName\n                teamWinsLosses\n                ptsQtr1\n                ptsQtr2\n                ptsQtr3\n                ptsQtr4\n                ptsOt1\n                ptsOt2\n                ptsOt3\n                ptsOt4\n                pts\n                fgPct\n                ftPct\n                fg3Pct\n                ast\n                reb\n                tov\n            }\n        }\n    }\t\n`\n\nfunction Games() {\n    const [gameHeader, setGameHeader] = useState([]);\n    const [lineScore, setLineScore] = useState([]);\n    const [dataLoaded, setDataLoaded] = useState(false)\n    const { loading, error, data } = useQuery(Game_Query);\n    \n    var temp_arr = []\n    useEffect(() => {\n        if (!loading) {\n            setGameHeader(data['scoreboard']['gameHeader'])\n            setLineScore(data['scoreboard']['lineScore'])\n            setDataLoaded(true)\n        }\n    }, [data]);\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    console.log(lineScore)\n    return (\n        <section className = \"gameDashboard\">\n            { !dataLoaded && <div>Loading</div> }\n            {dataLoaded &&\n                <>\n                <h1 className = \"Date\"> Today's Games </h1>\n                <div className = \"gameContainer\">\n                    <img src = {require(\"../../Assets/Images/avatar.png\")} style = {{height: '100px', width: '100px'}}></img>\n                    <img src = {require(\"../../Assets/Images/avatar.png\")} style = {{height: '100px', width: '100px'}}></img>\n                    <p> {gameHeader[0]['homeTeamId']} </p>\n                    <p> {gameHeader[0]['visitorTeamId']} </p>\n                    <p> {gameHeader[0]['livePeriodTimeBcast']} </p>\n                </div>\n                </>\n            }  \n        </section>\n    )\n}\n\nexport default Games\n","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Sidebar/Sidebar.js",["112","113","114"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { BiBasketball } from 'react-icons/bi';\nimport { MdPeople, MdCompareArrows, MdSearch, MdAssignmentInd, MdAssessment, MdDashboard} from 'react-icons/md';\nimport { VscGraph } from 'react-icons/vsc';\nimport { AiFillFire } from 'react-icons/ai';\nimport { ImEyedropper } from 'react-icons/im';\nimport { IconContext } from 'react-icons/lib';\nimport { FaNewspaper } from 'react-icons/fa';\n\nconst navIcons = [\n    {\n        title: 'Home',\n        name: 'Home',\n        icon: <MdDashboard />,\n        path: '/Home'\n    },\n    {\n        title: 'Game-Scores',\n        name: 'Game Scores',\n        icon: <MdAssessment className = \"nav-Icons\"/>,\n        path: '/Games'\n    },\n    {\n        title: 'Hot-Picks/DFS plays',\n        name: 'Hot Picks/DFS plays',\n        icon: <AiFillFire/>,\n        path: '/Fire'\n    },\n    {\n        title: 'Player-News',\n        name: 'Player News',\n        icon: <FaNewspaper/>,\n        path: '/player-news'\n    },\n    {\n        title: 'Player',\n        name: 'Player Stats',\n        icon:<MdAssignmentInd className = \"nav-Icons\"/>,\n        path: '/Player'\n    },\n    {\n        title: 'Player-Comparison',\n        name: 'Compare',\n        icon: <MdPeople className = \"nav-Icons\"/>,\n        path: '/Player-Comparison'\n    },\n    {\n        title: 'Team-Comparison',\n        name: 'Team Comparison',\n        icon: <MdPeople />,\n        path: '/Team-Comparison'\n    },\n    {\n        title: 'Search',\n        name: 'Search',\n        icon: <MdSearch />,\n        path: '/Search'\n    }\n]\n\n\nfunction Sidebar() {\n    return (\n        <div className = \"sidebar-container\">\n            <ul>    \n            <IconContext.Provider value = {{color: 'white', size: '30px'}}>\n                { navIcons.map((item, index) => (\n                    <li className = 'listItems' key ={index}>\n                        <Link to={item.path}>\n                            {item.icon}\n                            <p> {item.name}</p>\n                        </Link>\n                    </li>\n                ))}\n                    <li className = 'theme-button'>\n                        <ImEyedropper />\n                        <p> Change Theme </p>\n                    </li>\n                </IconContext.Provider>\n            </ul>\n        </div>\n    )\n}\nexport default Sidebar","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/Player.js",["115","116","117","118","119","120","121","122"],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/PostMasonry.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/CirclePacking.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/ShotChart.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Boxscores.js",["123","124","125","126","127","128","129","130","131","132","133"],"import React from 'react'\nimport { useTable, usePagination } from 'react-table';\nimport TableScrollbar from 'react-table-scrollbar';\nconst columns = [\n    {\n        Header: 'Date',\n        accessor: 'date'\n    },\n    {\n        Header: 'Matchup',\n        accessor: 'matchup'\n    },\n    {\n        Header: 'Result',\n        accessor: 'wl'\n    },\n    {\n        Header: 'FG%',\n        accessor: 'fgPct'\n    },\n    {\n        Header: 'FG3%',\n        accessor: 'fg3Pct'\n    },\n    {\n        Header: 'FT%',\n        accessor: 'ftPct'\n    },\n    {\n        Header: 'MIN',\n        accessor: 'min'\n    },\n    {\n        Header: 'REB',\n        accessor: 'reb'\n    },\n    {\n        Header: 'AST',\n        accessor: 'ast'\n    },\n    {\n        Header: 'BLK',\n        accessor: 'blk'\n    },\n    {\n        Header: 'STL',\n        accessor: 'stl'\n    },\n    {\n        Header: 'TOV',\n        accessor: 'tov'\n    },\n    {\n        Header: 'PF',\n        accessor: 'pf'\n    },\n    {\n        Header: 'PTS',\n        accessor: 'pts'\n    }\n]\n\nfunction Table({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    rows,\n    page, // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0 },\n      //showPagination={false},\n      //className=\"-striped -highlight\"\n    },\n    usePagination\n  )\n\n  // Render the UI for your table\n  return (\n    <>\n      {/* <div className=\"pagination\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>{' '}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>{' '}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>{' '}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>{' '}\n        <span>\n          Page{' '}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{' '}\n        </span>\n        <span>\n          | Go to page:{' '}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              gotoPage(page)\n            }}\n            style={{ width: '100px' }}\n          />\n        </span>{' '}\n        <select\n          value={pageSize}\n          onChange={e => {\n            setPageSize(Number(e.target.value))\n          }}\n        >\n          {[5, 10, 15, 20, 30].map(pageSize => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div> */}\n      <TableScrollbar rows={8}>\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n              prepareRow(row)\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  })}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </TableScrollbar>\n      {/* \n        Pagination can be built however you'd like. \n        This is just a very basic UI implementation:\n      */}\n    </>\n  )\n}\n\nfunction Boxscores(data) {\n    return (\n        <div className = \"boxscore-container\">\n            <p className=\"title\"> Boxscores </p>\n            <Table columns={columns} data={data.data} /> \n        </div>\n    )\n}\n\nexport default Boxscores\n","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/RadarStats.js",["134","135"],"import { getCoordinateSystemDimensions } from 'echarts';\nimport React from 'react'\nimport Chart from './Chart'\nimport EChart from './EChart.js'\n\nfunction RadarStats({ config, statData, resize , style, size}) {\n    let option = {\n      title: {\n          text: 'Rankings',\n          width: 100,\n      },\n      //backgroundColor: '#161627',\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        type: 'scroll',\n        data: config['seasonId'],\n        width: 320,\n        left:'30%',\n        selected: {\n            \"top70\": false,\n            \"top120\": false,\n            \"top180\": false\n        }\n      },\n    //   toolbox: {\n    //     show: true,\n    //     feature: {\n    //         saveAsImage: {}\n    //     }\n    //   },\n      responsive:true,\n\n      radar: [{\n          // shape: 'circle',\n          name: {\n              textStyle: {\n                  color: '#fff',\n                  backgroundColor: '#999',\n                  borderRadius: 3,\n                  padding: [3, 5]\n              }\n          },\n          shape: 'circle',\n          radius: size,\n          //center: ['25%', '50%'],\n          indicator: [\n            {\n                name: 'Points', \n                min: Math.min(statData[statData.length - 1].pts, config[config.length - 1].pts),\n                max: Math.max(statData[0].pts + statData[0].pts/6,config[config.length - 1].pts)\n            },\n            { \n                name: 'Rebounds',\n                min: Math.min(statData[statData.length - 1].reb, config[config.length - 1].reb),\n                max: Math.max(statData[0].reb + statData[0].reb/6,config[config.length - 1].reb)\n            },\n            {\n                name: 'Assists',\n                min: Math.min(statData[statData.length - 1].ast, config[config.length - 1].ast),\n                max: Math.max(statData[0].ast + statData[0].ast/6,config[config.length - 1].ast)\n            },\n            {\n                name: 'Steals', min: statData[statData.length - 1].stl,\n                min: Math.min(statData[statData.length - 1].stl, config[config.length - 1].stl),\n                max: Math.max(statData[0].stl + statData[0].stl/6,config[config.length - 1].stl)\n            },\n            {\n                name: 'Blocks',\n                min: Math.min(statData[statData.length - 1].blk, config[config.length - 1].blk),\n                max: Math.max(statData[0].blk + statData[0].blk/6,config[config.length - 1].blk)\n            }\n          ]\n      }],\n    //   {\n    //     name: {\n    //         textStyle: {\n    //             color: '#fff',\n    //             backgroundColor: '#999',\n    //             borderRadius: 3,\n    //             padding: [3, 5]\n    //         }\n    //     },\n    //     shape: 'circle',\n    //     radius:size,\n    //     center: ['75%', '50%'],\n    //     indicator: [\n    //         { name: 'Field Goal %', max: 1},\n    //         { name: 'Free Throw %', max: 1},\n    //         { name: '3P FG %', max: 1},\n    //         { name: 'Field Goal Attempts', max: 25},\n    //         { name: 'Free Throw Attempts', max: 20},\n    //         { name: '3-Point Attempts', max: 20}\n    //     ]\n    //   }],\n      series: [\n        {\n            type: 'radar',\n            //areaStyle: {normal: {}},\n            data: \n                config.map((item) => ({\n                    value: [item.pts, item.reb, item.ast, item.stl, item.blk], \n                    name: item.seasonId\n                })),\n            itemStyle : {\n                normal : {\n                    label : {\n                        show: true, position: 'inner',\n                        offset: [10, 0],\n                        fontSize: 14,\n                        fontWeight:'bold'\n                        // formatter : function (params){\n                        //           return  params.value + '%\\n'\n                        //     },\n                    },\n                    labelLine : {\n                        show : true\n                    }\n                }\n            }\n        },\n        {\n            type: 'radar',\n            //areaStyle: {normal: {}},\n            data: \n                statData.map((item) => ({\n                    value: [item.pts, item.reb, item.ast, item.stl, item.blk], \n                    name: item.seasonId\n                }))\n        }\n    ]\n    //   {\n    //     type: 'radar',\n    //     radarIndex: 1,\n    //     //areaStyle: {normal: {}},\n    //     data: \n    //         config.map((item) => ({\n    //             value: [item.fgPct, item.ftPct, item.fg3Pct, item.fga, item.fta, item.fG3A], \n    //             name: item.seasonId\n    //         }))\n    //   }]\n  };\n  return (\n        <Chart config={config}>\n            <EChart option={ option } resize={ resize } style={ style }/>\n        </Chart>\n    )\n}\n  \n  export default RadarStats","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/PlayerProfile.js",["136","137","138"],"import React, { useEffect } from 'react';\n\nconst teamColor = {\n    atl: '#E03A3E',\n    bkn: '#000000',\n    bos: '#007A33',\n    cha: '#00788C',\n    chi: '#CE1141',\n    cle: '#860038',\n    dal: '#00538C',\n    den: '#0E2240',\n    det: '#C8102E',\n    gsw: '#1D428A',\n    hou: '#CE1141',\n    ind: '#002D62',\n    lac: '#C8102E',\n    lal: '#552583',\n    mem: '#5D76A9',\n    mia: '#98002E',\n    mil: '#00471B',\n    min: '#0C2340',\n    nop: '#0C2340',\n    nyk: '#006BB6',\n    okc: '#007AC1',\n    orl: '#0077C0',\n    phi: '#006BB6',\n    phx: '#1D1160',\n    por: '#E03A3E',\n    sac: '#5A2D81',\n    sas: '#C4CED4',\n    tor: '#CE1141',\n    uta: '#002B5C',\n    was: '#002B5C'\n}\n\nexport default function PlayerProfile(props) {\n    \n    let cats = ['min', 'pts', 'reb', 'ast', 'stl', 'blk']\n    let statData = props.seasonStats[0]\n    console.log(props.playerInfo)\n    console.log(props)\n    return (\n        <section className=\"playerInfo-container\" style={{background: teamColor[props.playerInfo[0].teamAbbreviation.toLowerCase()], backgroundImage: `url(https://www.nba.com/stats/media/img/teams/logos/${props.playerInfo[0].teamAbbreviation}_logo.svg)`, backgroundRepeat: 'no-repeat', backgroundSize: \"contain\", backgroundAttachment: 'fixed', backgroundPosition: '0% 0%', backgroundBlendMode: \"soft-light\" }} >\n\n            <div className=\"playerInfo\">\n                <div style={{display: 'flex', flexDirection: 'row'}}>\n                    <img src = {`https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/${props.playerInfo[0].personId}.png`}></img>\n                    <div>\n                        <div className=\"playerInfo-name\"> {props.playerInfo[0].displayFirstLast} </div>\n                        <div className=\"playerInfo-otherInfo\"> \n                            <span>{props.playerInfo[0].teamCity} {props.playerInfo[0].teamName}</span>\n                        </div>\n                        <div className=\"playerInfo-otherInfo\"> Position: {props.playerInfo[0].position} </div>\n                        <div className=\"playerInfo-otherInfo\"> Jersey: {props.playerInfo[0].jersey} </div>\n                    </div>\n                    {/* <p> Team: {props.playerInfo[0].teamCity} {props.playerInfo[0].teamName} </p>\n                    <p> Position: {props.playerInfo[0].position} </p>\n                    <p> Jersey: {props.playerInfo[0].jersey} </p> */}\n                </div>\n\n                <div className=\"statBox\">\n                    <div className=\"statBox-title\">\n                        <p>Current Season Stats</p>\n                    </div>\n\n                    <div className=\"statBox-container\">\n                    {cats.map((item) => (\n                        <>\n                            <div className=\"statBox-outline\">\n                                <div className=\"statBox-value\"> {props.seasonStats[0][item]} </div>\n                                <div> {item.toUpperCase()} </div>\n                            </div>\n                        </>\n                    ))}\n                    </div>\n                </div>\n            </div>\n\n            <div >\n\n            </div>\n\n        </section>\n    )\n}","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/SearchBar/SearchBar.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/EChart.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/Post.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Chart.js",["139","140"],"import React, { useState } from 'react'\n// import OptionsDropdown from './OptionsDropdown'\n\nexport default function Chart ({ children, config, style }) {\n\n    const [optionsVisible, setOptionsVisible] = useState(false)\n\n    // let options =  {\n    //     'FullScreen': {\n    //         icon: 'ion-ios-expand',\n    //         cb: () => {\n    //             // TODO\n    //         }\n    //     },\n    //     'Export to CSV': {\n    //         icon: 'ion-ios-filing',\n    //         cb: () => {\n    //             // TODO\n    //         }\n    //     }\n    // }\n\n    return (\n        <section className=\"chart\">\n            <span className=\"options-container\">\n                    {/* <OptionsDropdown\n                        options={ options }\n                        visible={ optionsVisible }\n                        cb={ () => setOptionsVisible(false) }\n                    >\n                        <i\n                            className=\"ion-ios-more\"\n                            onClick={ () => setOptionsVisible(!optionsVisible) }\n                        />\n                    </OptionsDropdown> */}\n            </span>\n        { children }\n        </section>\n    )\n}","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Gauge.js",["141"],"import { getCoordinateSystemDimensions } from 'echarts';\nimport React from 'react'\nimport Chart from './Chart'\nimport EChart from './EChart.js'\n\nfunction Gauge({ config, title, resize , style }) {\n    let option = {\n        title: {\n            text: title,\n            textStyle: {\n                fontSize: 14\n            },\n            width: 100\n            //left: 'center'\n        },\n        series: [\n            {\n                type: 'gauge',\n                center: [\"50%\", \"60%\"],\n                startAngle: 200,\n                endAngle: -20,\n                min: 0,\n                max: 100,\n                radius: 100,\n                splitNumber: 10,\n                itemStyle: {\n                    color: '#FFAB91'\n                },\n                // progress: {\n                //     show: true,\n                //     width: 30\n                // },\n                pointer: {\n                    icon: 'path://M12.8,0.7l12,40.1H0.7L12.8,0.7z',\n                    length: '12%',\n                    width: 12,\n                    offsetCenter: [0, '-60%'],\n                    itemStyle: {\n                        color: 'auto'\n                    }\n                },\n                axisLine: {\n                    lineStyle: {\n                        width: 15,\n                        color: [\n                            [0.6, '#67e0e3'],\n                            [0.8, '#ff7f35'],\n                            [1, '#ff0000']\n                        ]\n                    }\n                },\n                axisTick: {\n                    distance: -20,\n                    splitNumber: 5,\n                    lineStyle: {\n                        width: 1,\n                        color: '#999'\n                    }\n                },\n                splitLine: {\n                    distance: -30,\n                    length: 14,\n                    lineStyle: {\n                        width: 3,\n                        color: '#999'\n                    }\n                },\n                axisLabel: {\n                    distance: -20,\n                    color: '#999',\n                    fontSize: 16\n                },\n                anchor: {\n                    show: false\n                },\n                title: {\n                    show: true\n                },\n                detail: {\n                    valueAnimation: true,\n                    width: '60%',\n                    lineHeight: 40,\n                    height: '15%',\n                    borderRadius: 8,\n                    offsetCenter: ['5%', '-15%'],\n                    fontSize: 30,\n                    fontWeight: 'bolder',\n                    formatter: '{value}%',\n                    color: 'black'\n                },\n                data: [{\n                    value: (config*100).toFixed(3)\n                }]\n            }\n        ],\n    };\n    \n  return (\n        <Chart config={config}>\n            <EChart option={ option } resize={ resize } style={ style }/>\n        </Chart>\n    )\n}\n  \n  export default Gauge","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/PlayerShotchart.js",["142"],"import React, { useState, useEffect } from 'react';\nimport nba from 'nba';\nimport * as d3 from 'd3';\nimport { court, shots } from 'd3-shotchart';\nimport { hexbin } from 'd3-hexbin';\n\nwindow.d3_hexbin = {hexbin: hexbin} // workaround library problem\n\nexport default function PlayerShotchart() {\n\n    useEffect(() => {\n        nba.stats.shots({\n            PlayerID: 2546\n        })\n        .then((response) => {\n            const final_shots = response.shot_Chart_Detail.map(shot => ({\n                x: (shot.locX + 250) / 10,\n                y: (shot.locY + 50) / 10,\n                action_type: shot.actionType,\n                shot_distance: shot.shotDistance,\n                shot_made_flag: shot.shotMadeFlag,\n            }))\n\n            const courtSelection = d3.select(\"#shot-chart\")\n            // without this line, all updates on court would be ineffect only after changing chartType\n            courtSelection.html('')\n            const chart_court = court().width(500)\n            const chart_shots = shots()\n                                  .shotRenderThreshold(this.props.minCount)\n                                  .displayToolTips(this.props.displayToolTips)\n                                  .displayType(this.props.chartType)\n            // selection.call always return the selection and not the return value of function passed in\n            courtSelection.call(chart_court)\n            courtSelection.datum(final_shots).call(chart_shots)\n        })\n    })\n\n    return (\n        <div id=\"shot-chart\"></div>\n    )\n}",["143","144"],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Team/Team.js",["145","146","147","148","149"],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/TeamSearchBar/TeamSearchBar.js",["150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":17,"column":8,"nodeType":"157","messageId":"158","endLine":17,"endColumn":18},{"ruleId":"159","severity":1,"message":"160","line":21,"column":53,"nodeType":"161","messageId":"162","endLine":21,"endColumn":55},{"ruleId":"155","severity":1,"message":"163","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":21},{"ruleId":"155","severity":1,"message":"164","line":5,"column":7,"nodeType":"157","messageId":"158","endLine":5,"endColumn":17},{"ruleId":"155","severity":1,"message":"165","line":21,"column":7,"nodeType":"157","messageId":"158","endLine":21,"endColumn":18},{"ruleId":"155","severity":1,"message":"166","line":55,"column":9,"nodeType":"157","messageId":"158","endLine":55,"endColumn":17},{"ruleId":"167","severity":1,"message":"168","line":62,"column":8,"nodeType":"169","endLine":62,"endColumn":14,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":74,"column":21,"nodeType":"173","endLine":74,"endColumn":120},{"ruleId":"171","severity":1,"message":"172","line":75,"column":21,"nodeType":"173","endLine":75,"endColumn":120},{"ruleId":"155","severity":1,"message":"174","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":22},{"ruleId":"155","severity":1,"message":"175","line":4,"column":20,"nodeType":"157","messageId":"158","endLine":4,"endColumn":35},{"ruleId":"155","severity":1,"message":"176","line":5,"column":10,"nodeType":"157","messageId":"158","endLine":5,"endColumn":18},{"ruleId":"155","severity":1,"message":"177","line":7,"column":8,"nodeType":"157","messageId":"158","endLine":7,"endColumn":17},{"ruleId":"155","severity":1,"message":"178","line":9,"column":8,"nodeType":"157","messageId":"158","endLine":9,"endColumn":11},{"ruleId":"155","severity":1,"message":"179","line":10,"column":10,"nodeType":"157","messageId":"158","endLine":10,"endColumn":19},{"ruleId":"155","severity":1,"message":"180","line":11,"column":10,"nodeType":"157","messageId":"158","endLine":11,"endColumn":17},{"ruleId":"155","severity":1,"message":"181","line":159,"column":10,"nodeType":"157","messageId":"158","endLine":159,"endColumn":18},{"ruleId":"155","severity":1,"message":"182","line":178,"column":13,"nodeType":"157","messageId":"158","endLine":178,"endColumn":22},{"ruleId":"183","severity":1,"message":"184","line":214,"column":67,"nodeType":"185","messageId":"186","endLine":214,"endColumn":69},{"ruleId":"167","severity":1,"message":"187","line":218,"column":6,"nodeType":"169","endLine":218,"endColumn":12,"suggestions":"188"},{"ruleId":"155","severity":1,"message":"189","line":71,"column":5,"nodeType":"157","messageId":"158","endLine":71,"endColumn":9},{"ruleId":"155","severity":1,"message":"190","line":75,"column":5,"nodeType":"157","messageId":"158","endLine":75,"endColumn":20},{"ruleId":"155","severity":1,"message":"191","line":76,"column":5,"nodeType":"157","messageId":"158","endLine":76,"endColumn":16},{"ruleId":"155","severity":1,"message":"192","line":77,"column":5,"nodeType":"157","messageId":"158","endLine":77,"endColumn":16},{"ruleId":"155","severity":1,"message":"193","line":78,"column":5,"nodeType":"157","messageId":"158","endLine":78,"endColumn":14},{"ruleId":"155","severity":1,"message":"194","line":79,"column":5,"nodeType":"157","messageId":"158","endLine":79,"endColumn":13},{"ruleId":"155","severity":1,"message":"195","line":80,"column":5,"nodeType":"157","messageId":"158","endLine":80,"endColumn":13},{"ruleId":"155","severity":1,"message":"196","line":81,"column":5,"nodeType":"157","messageId":"158","endLine":81,"endColumn":17},{"ruleId":"155","severity":1,"message":"197","line":82,"column":5,"nodeType":"157","messageId":"158","endLine":82,"endColumn":16},{"ruleId":"155","severity":1,"message":"198","line":83,"column":14,"nodeType":"157","messageId":"158","endLine":83,"endColumn":23},{"ruleId":"155","severity":1,"message":"199","line":83,"column":25,"nodeType":"157","messageId":"158","endLine":83,"endColumn":33},{"ruleId":"155","severity":1,"message":"200","line":1,"column":10,"nodeType":"157","messageId":"158","endLine":1,"endColumn":39},{"ruleId":"201","severity":1,"message":"202","line":66,"column":17,"nodeType":"203","messageId":"186","endLine":66,"endColumn":20},{"ruleId":"155","severity":1,"message":"204","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":26},{"ruleId":"155","severity":1,"message":"205","line":39,"column":9,"nodeType":"157","messageId":"158","endLine":39,"endColumn":17},{"ruleId":"171","severity":1,"message":"172","line":47,"column":21,"nodeType":"173","endLine":47,"endColumn":150},{"ruleId":"155","severity":1,"message":"206","line":6,"column":12,"nodeType":"157","messageId":"158","endLine":6,"endColumn":26},{"ruleId":"155","severity":1,"message":"207","line":6,"column":28,"nodeType":"157","messageId":"158","endLine":6,"endColumn":45},{"ruleId":"155","severity":1,"message":"200","line":1,"column":10,"nodeType":"157","messageId":"158","endLine":1,"endColumn":39},{"ruleId":"155","severity":1,"message":"208","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"151","replacedBy":"209"},{"ruleId":"153","replacedBy":"210"},{"ruleId":"155","severity":1,"message":"178","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":11},{"ruleId":"155","severity":1,"message":"179","line":5,"column":10,"nodeType":"157","messageId":"158","endLine":5,"endColumn":19},{"ruleId":"155","severity":1,"message":"180","line":6,"column":10,"nodeType":"157","messageId":"158","endLine":6,"endColumn":17},{"ruleId":"155","severity":1,"message":"211","line":91,"column":23,"nodeType":"157","messageId":"158","endLine":91,"endColumn":37},{"ruleId":"167","severity":1,"message":"187","line":106,"column":6,"nodeType":"169","endLine":106,"endColumn":12,"suggestions":"212"},{"ruleId":"171","severity":1,"message":"172","line":16,"column":13,"nodeType":"173","endLine":18,"endColumn":14},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'PlayerHome' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'CirclePacking' is defined but never used.","'teamRoster' is assigned a value but never used.","'teamRoster1' is assigned a value but never used.","'temp_arr' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.","ArrayExpression",["215"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'BiBasketball' is defined but never used.","'MdCompareArrows' is defined but never used.","'VscGraph' is defined but never used.","'ShotChart' is defined but never used.","'nba' is defined but never used.","'useParams' is defined but never used.","'MdBlock' is defined but never used.","'shotData' is assigned a value but never used.","'temp_arr3' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'id' and 'loading'. Either include them or remove the dependency array.",["216"],"'page' is assigned a value but never used.","'canPreviousPage' is assigned a value but never used.","'canNextPage' is assigned a value but never used.","'pageOptions' is assigned a value but never used.","'pageCount' is assigned a value but never used.","'gotoPage' is assigned a value but never used.","'nextPage' is assigned a value but never used.","'previousPage' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","'pageIndex' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'getCoordinateSystemDimensions' is defined but never used.","no-dupe-keys","Duplicate key 'min'.","ObjectExpression","'useEffect' is defined but never used.","'statData' is assigned a value but never used.","'optionsVisible' is assigned a value but never used.","'setOptionsVisible' is assigned a value but never used.","'useState' is defined but never used.",["213"],["214"],"'setCurrentTeam' is assigned a value but never used.",["217"],"no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"220","fix":"222"},"Update the dependencies array to be: [data, loading]",{"range":"223","text":"224"},"Update the dependencies array to be: [data, id, loading]",{"range":"225","text":"226"},{"range":"227","text":"226"},[1611,1617],"[data, loading]",[4981,4987],"[data, id, loading]",[1776,1782]]