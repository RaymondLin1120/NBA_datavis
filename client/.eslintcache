[{"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/index.js":"1","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/reportWebVitals.js":"2","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/App.js":"3","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Home.js":"4","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Sidebar/Sidebar.js":"5","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/PostMasonry.js":"6","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/Post.js":"7","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/RadarStats.js":"8","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Chart.js":"9","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/EChart.js":"10","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/Player.js":"11"},{"size":530,"mtime":1612123622346,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1611373027005,"results":"14","hashOfConfig":"13"},{"size":1741,"mtime":1612149158945,"results":"15","hashOfConfig":"13"},{"size":1392,"mtime":1611526571698,"results":"16","hashOfConfig":"13"},{"size":1798,"mtime":1611555782666,"results":"17","hashOfConfig":"13"},{"size":381,"mtime":1611522742966,"results":"18","hashOfConfig":"13"},{"size":668,"mtime":1611528101626,"results":"19","hashOfConfig":"13"},{"size":2561,"mtime":1612155681694,"results":"20","hashOfConfig":"13"},{"size":1174,"mtime":1612154624341,"results":"21","hashOfConfig":"13"},{"size":615,"mtime":1612151361823,"results":"22","hashOfConfig":"13"},{"size":4933,"mtime":1612159565884,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1gpbztv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/index.js",[],["49","50"],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/reportWebVitals.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/App.js",["51"],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Home.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Sidebar/Sidebar.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/PostMasonry.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/PostMasonry/Post.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/RadarStats.js",["52"],"import { getCoordinateSystemDimensions } from 'echarts';\nimport React from 'react'\nimport Chart from './Chart'\nimport EChart from './EChart.js'\n\nfunction RadarStats({ config, resize , style}) {\n    let option = {\n      title: {\n          text: 'Averages',\n      },\n      //backgroundColor: '#161627',\n      tooltip: {\n        //   axisPointer : {\n        //       type:'cross'\n        //   }\n      },\n      toolbox: {\n        show: true,\n        feature: {\n            saveAsImage: {}\n        }\n      },\n      legend: {\n          data: config['seasonId']\n      },\n      radar: [{\n          // shape: 'circle',\n          name: {\n              textStyle: {\n                  color: '#fff',\n                  backgroundColor: '#999',\n                  borderRadius: 3,\n                  padding: [3, 5]\n              }\n          },\n          shape: 'circle',\n          center: ['25%', '50%'],\n          indicator: [\n              { name: 'Points', max: 40},\n              { name: 'Rebounds', max: 15},\n              { name: 'Assists', max: 15},\n              { name: 'Steals', max: 5},\n              { name: 'Blocks', max: 2},\n          ]\n      },\n      {\n        name: {\n            textStyle: {\n                color: '#fff',\n                backgroundColor: '#999',\n                borderRadius: 3,\n                padding: [3, 5]\n            }\n        },\n        shape: 'circle',\n        center: ['75%', '50%'],\n        indicator: [\n            { name: 'Field Goal %', max: 1},\n            { name: 'Free Throw %', max: 1},\n            { name: '3P FG %', max: 1},\n            { name: 'Field Goal Attempts', max: 25},\n            { name: 'Free Throw Attempts', max: 20},\n            { name: '3-Point Attempts', max: 20}\n        ]\n      }],\n      series: [{\n        //axisName: 'James Harden Average',\n        type: 'radar',\n        //areaStyle: {normal: {}},\n        data: \n            config.map((item) => ({\n                value: [item.pts, item.reb, item.ast, item.stl, item.blk], \n                name: item.seasonId\n            }))\n      },\n      {\n        //axisName: 'James Harden Average',\n        type: 'radar',\n        radarIndex: 1,\n        //areaStyle: {normal: {}},\n        data: \n            config.map((item) => ({\n                value: [item.fgPct, item.ftPct, item.fg3Pct, item.fga, item.fta, item.fG3A], \n                name: item.seasonId\n            }))\n      }]\n  };\n\n  return (\n        <Chart config={config}>\n            <EChart option={ option } resize={resize} style={ style }/>\n        </Chart>\n    )\n}\n  \n  export default RadarStats","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/Chart.js",["53","54"],"import React, { useState } from 'react'\n// import OptionsDropdown from './OptionsDropdown'\n\nexport default function Chart ({ children, config, style }) {\n\n    const [optionsVisible, setOptionsVisible] = useState(false)\n\n    // let options =  {\n    //     'FullScreen': {\n    //         icon: 'ion-ios-expand',\n    //         cb: () => {\n    //             // TODO\n    //         }\n    //     },\n    //     'Export to CSV': {\n    //         icon: 'ion-ios-filing',\n    //         cb: () => {\n    //             // TODO\n    //         }\n    //     }\n    // }\n\n    return (\n        <section className=\"chart\">\n            <span className=\"options-container\">\n                    {/* <OptionsDropdown\n                        options={ options }\n                        visible={ optionsVisible }\n                        cb={ () => setOptionsVisible(false) }\n                    >\n                        <i\n                            className=\"ion-ios-more\"\n                            onClick={ () => setOptionsVisible(!optionsVisible) }\n                        />\n                    </OptionsDropdown> */}\n            </span>\n        { children }\n        </section>\n    )\n}","/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Components/Graphing/EChart.js",[],"/Users/RaymondLin/Desktop/Projects/nba_datavis/client/src/Pages/Player/Player.js",["55","56","57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":18,"column":53,"nodeType":"65","messageId":"66","endLine":18,"endColumn":55},{"ruleId":"67","severity":1,"message":"68","line":1,"column":10,"nodeType":"69","messageId":"70","endLine":1,"endColumn":39},{"ruleId":"67","severity":1,"message":"71","line":6,"column":12,"nodeType":"69","messageId":"70","endLine":6,"endColumn":26},{"ruleId":"67","severity":1,"message":"72","line":6,"column":28,"nodeType":"69","messageId":"70","endLine":6,"endColumn":45},{"ruleId":"67","severity":1,"message":"73","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":24},{"ruleId":"67","severity":1,"message":"74","line":39,"column":12,"nodeType":"69","messageId":"70","endLine":39,"endColumn":22},{"ruleId":"75","severity":1,"message":"76","line":46,"column":24,"nodeType":"77","endLine":49,"endColumn":14},{"ruleId":"78","severity":1,"message":"79","line":135,"column":21,"nodeType":"80","endLine":135,"endColumn":76},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'getCoordinateSystemDimensions' is defined but never used.","Identifier","unusedVar","'optionsVisible' is assigned a value but never used.","'setOptionsVisible' is assigned a value but never used.","'isNullableType' is defined but never used.","'playerInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'temp_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]