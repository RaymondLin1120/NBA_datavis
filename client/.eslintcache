[{"/Users/RaymondChu/NBA_datavis/client/src/index.js":"1","/Users/RaymondChu/NBA_datavis/client/src/reportWebVitals.js":"2","/Users/RaymondChu/NBA_datavis/client/src/App.js":"3","/Users/RaymondChu/NBA_datavis/client/src/Pages/Home.js":"4","/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/Player.js":"5","/Users/RaymondChu/NBA_datavis/client/src/Components/Sidebar/Sidebar.js":"6","/Users/RaymondChu/NBA_datavis/client/src/Components/PostMasonry/PostMasonry.js":"7","/Users/RaymondChu/NBA_datavis/client/src/Components/Graphing/RadarStats.js":"8","/Users/RaymondChu/NBA_datavis/client/src/Components/Graphing/EChart.js":"9","/Users/RaymondChu/NBA_datavis/client/src/Components/PostMasonry/Post.js":"10","/Users/RaymondChu/NBA_datavis/client/src/Components/Graphing/Chart.js":"11","/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/PlayerProfile.js":"12","/Users/RaymondChu/NBA_datavis/client/src/Pages/Games/Games.js":"13"},{"size":530,"mtime":1611624880922,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1611624880922,"results":"16","hashOfConfig":"15"},{"size":1845,"mtime":1612328093563,"results":"17","hashOfConfig":"15"},{"size":1392,"mtime":1611624880921,"results":"18","hashOfConfig":"15"},{"size":5691,"mtime":1612328217252,"results":"19","hashOfConfig":"15"},{"size":2160,"mtime":1612328093566,"results":"20","hashOfConfig":"15"},{"size":381,"mtime":1611624880921,"results":"21","hashOfConfig":"15"},{"size":2561,"mtime":1612228878648,"results":"22","hashOfConfig":"15"},{"size":615,"mtime":1612228878647,"results":"23","hashOfConfig":"15"},{"size":668,"mtime":1611624880920,"results":"24","hashOfConfig":"15"},{"size":1174,"mtime":1612228878647,"results":"25","hashOfConfig":"15"},{"size":683,"mtime":1612327534374,"results":"26","hashOfConfig":"15"},{"size":1806,"mtime":1612328093566,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kclmtq",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/RaymondChu/NBA_datavis/client/src/index.js",[],"/Users/RaymondChu/NBA_datavis/client/src/reportWebVitals.js",[],"/Users/RaymondChu/NBA_datavis/client/src/App.js",["57"],"/Users/RaymondChu/NBA_datavis/client/src/Pages/Home.js",[],"/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/Player.js",["58","59"],"/Users/RaymondChu/NBA_datavis/client/src/Components/Sidebar/Sidebar.js",[],["60","61"],"/Users/RaymondChu/NBA_datavis/client/src/Components/PostMasonry/PostMasonry.js",[],"/Users/RaymondChu/NBA_datavis/client/src/Components/Graphing/RadarStats.js",["62"],"import { getCoordinateSystemDimensions } from 'echarts';\nimport React from 'react'\nimport Chart from './Chart'\nimport EChart from './EChart.js'\n\nfunction RadarStats({ config, resize , style}) {\n    let option = {\n      title: {\n          text: 'Averages',\n      },\n      //backgroundColor: '#161627',\n      tooltip: {\n        //   axisPointer : {\n        //       type:'cross'\n        //   }\n      },\n      toolbox: {\n        show: true,\n        feature: {\n            saveAsImage: {}\n        }\n      },\n      legend: {\n          data: config['seasonId']\n      },\n      radar: [{\n          // shape: 'circle',\n          name: {\n              textStyle: {\n                  color: '#fff',\n                  backgroundColor: '#999',\n                  borderRadius: 3,\n                  padding: [3, 5]\n              }\n          },\n          shape: 'circle',\n          center: ['25%', '50%'],\n          indicator: [\n              { name: 'Points', max: 40},\n              { name: 'Rebounds', max: 15},\n              { name: 'Assists', max: 15},\n              { name: 'Steals', max: 5},\n              { name: 'Blocks', max: 2},\n          ]\n      },\n      {\n        name: {\n            textStyle: {\n                color: '#fff',\n                backgroundColor: '#999',\n                borderRadius: 3,\n                padding: [3, 5]\n            }\n        },\n        shape: 'circle',\n        center: ['75%', '50%'],\n        indicator: [\n            { name: 'Field Goal %', max: 1},\n            { name: 'Free Throw %', max: 1},\n            { name: '3P FG %', max: 1},\n            { name: 'Field Goal Attempts', max: 25},\n            { name: 'Free Throw Attempts', max: 20},\n            { name: '3-Point Attempts', max: 20}\n        ]\n      }],\n      series: [{\n        //axisName: 'James Harden Average',\n        type: 'radar',\n        //areaStyle: {normal: {}},\n        data: \n            config.map((item) => ({\n                value: [item.pts, item.reb, item.ast, item.stl, item.blk], \n                name: item.seasonId\n            }))\n      },\n      {\n        //axisName: 'James Harden Average',\n        type: 'radar',\n        radarIndex: 1,\n        //areaStyle: {normal: {}},\n        data: \n            config.map((item) => ({\n                value: [item.fgPct, item.ftPct, item.fg3Pct, item.fga, item.fta, item.fG3A], \n                name: item.seasonId\n            }))\n      }]\n  };\n\n  return (\n        <Chart config={config}>\n            <EChart option={ option } resize={resize} style={ style }/>\n        </Chart>\n    )\n}\n  \n  export default RadarStats","/Users/RaymondChu/NBA_datavis/client/src/Components/Graphing/EChart.js",[],"/Users/RaymondChu/NBA_datavis/client/src/Components/PostMasonry/Post.js",[],"/Users/RaymondChu/NBA_datavis/client/src/Components/Graphing/Chart.js",["63","64"],"import React, { useState } from 'react'\n// import OptionsDropdown from './OptionsDropdown'\n\nexport default function Chart ({ children, config, style }) {\n\n    const [optionsVisible, setOptionsVisible] = useState(false)\n\n    // let options =  {\n    //     'FullScreen': {\n    //         icon: 'ion-ios-expand',\n    //         cb: () => {\n    //             // TODO\n    //         }\n    //     },\n    //     'Export to CSV': {\n    //         icon: 'ion-ios-filing',\n    //         cb: () => {\n    //             // TODO\n    //         }\n    //     }\n    // }\n\n    return (\n        <section className=\"chart\">\n            <span className=\"options-container\">\n                    {/* <OptionsDropdown\n                        options={ options }\n                        visible={ optionsVisible }\n                        cb={ () => setOptionsVisible(false) }\n                    >\n                        <i\n                            className=\"ion-ios-more\"\n                            onClick={ () => setOptionsVisible(!optionsVisible) }\n                        />\n                    </OptionsDropdown> */}\n            </span>\n        { children }\n        </section>\n    )\n}","/Users/RaymondChu/NBA_datavis/client/src/Pages/Player/PlayerProfile.js",["65"],"/Users/RaymondChu/NBA_datavis/client/src/Pages/Games/Games.js",["66","67","68"],{"ruleId":"69","severity":1,"message":"70","line":19,"column":53,"nodeType":"71","messageId":"72","endLine":19,"endColumn":55},{"ruleId":"73","severity":1,"message":"74","line":105,"column":12,"nodeType":"75","messageId":"76","endLine":105,"endColumn":22},{"ruleId":"77","severity":1,"message":"78","line":112,"column":24,"nodeType":"79","endLine":115,"endColumn":14},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"73","severity":1,"message":"84","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":39},{"ruleId":"73","severity":1,"message":"85","line":6,"column":12,"nodeType":"75","messageId":"76","endLine":6,"endColumn":26},{"ruleId":"73","severity":1,"message":"86","line":6,"column":28,"nodeType":"75","messageId":"76","endLine":6,"endColumn":45},{"ruleId":"87","severity":1,"message":"88","line":7,"column":13,"nodeType":"89","endLine":7,"endColumn":68},{"ruleId":"73","severity":1,"message":"90","line":51,"column":12,"nodeType":"75","messageId":"76","endLine":51,"endColumn":21},{"ruleId":"73","severity":1,"message":"91","line":55,"column":9,"nodeType":"75","messageId":"76","endLine":55,"endColumn":17},{"ruleId":"77","severity":1,"message":"92","line":61,"column":8,"nodeType":"93","endLine":61,"endColumn":14,"suggestions":"94"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'playerData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'temp_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-native-reassign",["95"],"no-negated-in-lhs",["96"],"'getCoordinateSystemDimensions' is defined but never used.","'optionsVisible' is assigned a value but never used.","'setOptionsVisible' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'lineScore' is assigned a value but never used.","'temp_arr' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.","ArrayExpression",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [data, loading]",{"range":"100","text":"101"},[1524,1530],"[data, loading]"]